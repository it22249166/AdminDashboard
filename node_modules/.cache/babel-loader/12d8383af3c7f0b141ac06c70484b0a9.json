{"ast":null,"code":"// Part logic is from `qrcode.react`. (ISC License)\n// https://github.com/zpao/qrcode.react\n// ==========================================================\nimport { Ecc } from \"./libs/qrcodegen\"; // =================== ERROR_LEVEL ==========================\n\nexport var ERROR_LEVEL_MAP = {\n  L: Ecc.LOW,\n  M: Ecc.MEDIUM,\n  Q: Ecc.QUARTILE,\n  H: Ecc.HIGH\n}; // =================== DEFAULT_VALUE ==========================\n\nexport var DEFAULT_SIZE = 128;\nexport var DEFAULT_LEVEL = 'L';\nexport var DEFAULT_BACKGROUND_COLOR = '#FFFFFF';\nexport var DEFAULT_FRONT_COLOR = '#000000';\nexport var DEFAULT_NEED_MARGIN = false;\nexport var DEFAULT_MINVERSION = 1;\nexport var SPEC_MARGIN_SIZE = 4;\nexport var DEFAULT_MARGIN_SIZE = 0;\nexport var DEFAULT_IMG_SCALE = 0.1; // =================== UTILS ==========================\n\n/**\n * Generate a path string from modules\n * @param modules\n * @param margin \n * @returns \n */\n\nexport function generatePath(modules) {\n  var margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var ops = [];\n  modules.forEach(function (row, y) {\n    var start = null;\n    row.forEach(function (cell, x) {\n      if (!cell && start !== null) {\n        ops.push(\"M\".concat(start + margin, \" \").concat(y + margin, \"h\").concat(x - start, \"v1H\").concat(start + margin, \"z\"));\n        start = null;\n        return;\n      }\n\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n\n        if (start === null) {\n          ops.push(\"M\".concat(x + margin, \",\").concat(y + margin, \" h1v1H\").concat(x + margin, \"z\"));\n        } else {\n          ops.push(\"M\".concat(start + margin, \",\").concat(y + margin, \" h\").concat(x + 1 - start, \"v1H\").concat(start + margin, \"z\"));\n        }\n\n        return;\n      }\n\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join('');\n}\n/**\n * Excavate modules\n * @param modules \n * @param excavation \n * @returns \n */\n\nexport function excavateModules(modules, excavation) {\n  return modules.slice().map(function (row, y) {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n\n    return row.map(function (cell, x) {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n\n      return false;\n    });\n  });\n}\n/**\n * Get image settings\n * @param cells The modules of the QR code\n * @param size The size of the QR code\n * @param margin \n * @param imageSettings \n * @returns \n */\n\nexport function getImageSettings(cells, size, margin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n\n  var numCells = cells.length + margin * 2;\n  var defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  var scale = numCells / size;\n  var w = (imageSettings.width || defaultSize) * scale;\n  var h = (imageSettings.height || defaultSize) * scale;\n  var x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  var y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  var opacity = imageSettings.opacity == null ? 1 : imageSettings.opacity;\n  var excavation = null;\n\n  if (imageSettings.excavate) {\n    var floorX = Math.floor(x);\n    var floorY = Math.floor(y);\n    var ceilW = Math.ceil(w + x - floorX);\n    var ceilH = Math.ceil(h + y - floorY);\n    excavation = {\n      x: floorX,\n      y: floorY,\n      w: ceilW,\n      h: ceilH\n    };\n  }\n\n  var crossOrigin = imageSettings.crossOrigin;\n  return {\n    x: x,\n    y: y,\n    h: h,\n    w: w,\n    excavation: excavation,\n    opacity: opacity,\n    crossOrigin: crossOrigin\n  };\n}\n/**\n * Get margin size\n * @param needMargin Whether need margin\n * @param marginSize Custom margin size\n * @returns \n */\n\nexport function getMarginSize(needMargin, marginSize) {\n  if (marginSize != null) {\n    return Math.floor(marginSize);\n  }\n\n  return needMargin ? SPEC_MARGIN_SIZE : DEFAULT_MARGIN_SIZE;\n}\n/**\n * Check if Path2D is supported\n */\n\nexport var isSupportPath2d = function () {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}();","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@rc-component/qrcode/es/utils.js"],"names":["Ecc","ERROR_LEVEL_MAP","L","LOW","M","MEDIUM","Q","QUARTILE","H","HIGH","DEFAULT_SIZE","DEFAULT_LEVEL","DEFAULT_BACKGROUND_COLOR","DEFAULT_FRONT_COLOR","DEFAULT_NEED_MARGIN","DEFAULT_MINVERSION","SPEC_MARGIN_SIZE","DEFAULT_MARGIN_SIZE","DEFAULT_IMG_SCALE","generatePath","modules","margin","arguments","length","undefined","ops","forEach","row","y","start","cell","x","push","concat","join","excavateModules","excavation","slice","map","h","w","getImageSettings","cells","size","imageSettings","numCells","defaultSize","Math","floor","scale","width","height","opacity","excavate","floorX","floorY","ceilW","ceil","ceilH","crossOrigin","getMarginSize","needMargin","marginSize","isSupportPath2d","Path2D","addPath","e"],"mappings":"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","sourcesContent":["// Part logic is from `qrcode.react`. (ISC License)\n// https://github.com/zpao/qrcode.react\n\n// ==========================================================\n\nimport { Ecc } from \"./libs/qrcodegen\";\n\n// =================== ERROR_LEVEL ==========================\nexport var ERROR_LEVEL_MAP = {\n  L: Ecc.LOW,\n  M: Ecc.MEDIUM,\n  Q: Ecc.QUARTILE,\n  H: Ecc.HIGH\n};\n\n// =================== DEFAULT_VALUE ==========================\nexport var DEFAULT_SIZE = 128;\nexport var DEFAULT_LEVEL = 'L';\nexport var DEFAULT_BACKGROUND_COLOR = '#FFFFFF';\nexport var DEFAULT_FRONT_COLOR = '#000000';\nexport var DEFAULT_NEED_MARGIN = false;\nexport var DEFAULT_MINVERSION = 1;\nexport var SPEC_MARGIN_SIZE = 4;\nexport var DEFAULT_MARGIN_SIZE = 0;\nexport var DEFAULT_IMG_SCALE = 0.1;\n\n// =================== UTILS ==========================\n/**\n * Generate a path string from modules\n * @param modules\n * @param margin \n * @returns \n */\nexport function generatePath(modules) {\n  var margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var ops = [];\n  modules.forEach(function (row, y) {\n    var start = null;\n    row.forEach(function (cell, x) {\n      if (!cell && start !== null) {\n        ops.push(\"M\".concat(start + margin, \" \").concat(y + margin, \"h\").concat(x - start, \"v1H\").concat(start + margin, \"z\"));\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(\"M\".concat(x + margin, \",\").concat(y + margin, \" h1v1H\").concat(x + margin, \"z\"));\n        } else {\n          ops.push(\"M\".concat(start + margin, \",\").concat(y + margin, \" h\").concat(x + 1 - start, \"v1H\").concat(start + margin, \"z\"));\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join('');\n}\n/**\n * Excavate modules\n * @param modules \n * @param excavation \n * @returns \n */\nexport function excavateModules(modules, excavation) {\n  return modules.slice().map(function (row, y) {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map(function (cell, x) {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\n\n/**\n * Get image settings\n * @param cells The modules of the QR code\n * @param size The size of the QR code\n * @param margin \n * @param imageSettings \n * @returns \n */\nexport function getImageSettings(cells, size, margin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  var numCells = cells.length + margin * 2;\n  var defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  var scale = numCells / size;\n  var w = (imageSettings.width || defaultSize) * scale;\n  var h = (imageSettings.height || defaultSize) * scale;\n  var x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  var y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  var opacity = imageSettings.opacity == null ? 1 : imageSettings.opacity;\n  var excavation = null;\n  if (imageSettings.excavate) {\n    var floorX = Math.floor(x);\n    var floorY = Math.floor(y);\n    var ceilW = Math.ceil(w + x - floorX);\n    var ceilH = Math.ceil(h + y - floorY);\n    excavation = {\n      x: floorX,\n      y: floorY,\n      w: ceilW,\n      h: ceilH\n    };\n  }\n  var crossOrigin = imageSettings.crossOrigin;\n  return {\n    x: x,\n    y: y,\n    h: h,\n    w: w,\n    excavation: excavation,\n    opacity: opacity,\n    crossOrigin: crossOrigin\n  };\n}\n\n/**\n * Get margin size\n * @param needMargin Whether need margin\n * @param marginSize Custom margin size\n * @returns \n */\nexport function getMarginSize(needMargin, marginSize) {\n  if (marginSize != null) {\n    return Math.floor(marginSize);\n  }\n  return needMargin ? SPEC_MARGIN_SIZE : DEFAULT_MARGIN_SIZE;\n}\n/**\n * Check if Path2D is supported\n */\nexport var isSupportPath2d = function () {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();"]},"metadata":{},"sourceType":"module"}