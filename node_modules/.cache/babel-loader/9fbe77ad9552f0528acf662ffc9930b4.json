{"ast":null,"code":"import rules from \"../rule\";\nimport { isEmptyValue } from \"../util\";\n\nvar floatFn = function floatFn(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n};\n\nexport default floatFn;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@rc-component/async-validator/es/validator/float.js"],"names":["rules","isEmptyValue","floatFn","rule","value","callback","source","options","errors","validate","required","hasOwnProperty","field","undefined","type","range"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,YAAT,QAA6B,SAA7B;;AACA,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,QAA9B,EAAwCC,MAAxC,EAAgDC,OAAhD,EAAyD;AACrE,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,QAAQ,GAAGN,IAAI,CAACO,QAAL,IAAiB,CAACP,IAAI,CAACO,QAAN,IAAkBJ,MAAM,CAACK,cAAP,CAAsBR,IAAI,CAACS,KAA3B,CAAlD;;AACA,MAAIH,QAAJ,EAAc;AACZ,QAAIR,YAAY,CAACG,KAAD,CAAZ,IAAuB,CAACD,IAAI,CAACO,QAAjC,EAA2C;AACzC,aAAOL,QAAQ,EAAf;AACD;;AACDL,IAAAA,KAAK,CAACU,QAAN,CAAeP,IAAf,EAAqBC,KAArB,EAA4BE,MAA5B,EAAoCE,MAApC,EAA4CD,OAA5C;;AACA,QAAIH,KAAK,KAAKS,SAAd,EAAyB;AACvBb,MAAAA,KAAK,CAACc,IAAN,CAAWX,IAAX,EAAiBC,KAAjB,EAAwBE,MAAxB,EAAgCE,MAAhC,EAAwCD,OAAxC;AACAP,MAAAA,KAAK,CAACe,KAAN,CAAYZ,IAAZ,EAAkBC,KAAlB,EAAyBE,MAAzB,EAAiCE,MAAjC,EAAyCD,OAAzC;AACD;AACF;;AACDF,EAAAA,QAAQ,CAACG,MAAD,CAAR;AACD,CAdD;;AAeA,eAAeN,OAAf","sourcesContent":["import rules from \"../rule\";\nimport { isEmptyValue } from \"../util\";\nvar floatFn = function floatFn(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nexport default floatFn;"]},"metadata":{},"sourceType":"module"}