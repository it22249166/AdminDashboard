{"ast":null,"code":"import * as React from 'react';\nimport raf from \"rc-util/es/raf\";\nexport default function useFrameState(defaultValue) {\n  const [value, setValue] = React.useState(defaultValue);\n  const frameRef = React.useRef(null);\n  const batchRef = React.useRef([]);\n  const destroyRef = React.useRef(false);\n  React.useEffect(() => {\n    destroyRef.current = false;\n    return () => {\n      destroyRef.current = true;\n      raf.cancel(frameRef.current);\n      frameRef.current = null;\n    };\n  }, []);\n\n  function setFrameValue(updater) {\n    if (destroyRef.current) {\n      return;\n    }\n\n    if (frameRef.current === null) {\n      batchRef.current = [];\n      frameRef.current = raf(() => {\n        frameRef.current = null;\n        setValue(prevValue => {\n          let current = prevValue;\n          batchRef.current.forEach(func => {\n            current = func(current);\n          });\n          return current;\n        });\n      });\n    }\n\n    batchRef.current.push(updater);\n  }\n\n  return [value, setFrameValue];\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/form/hooks/useFrameState.js"],"names":["React","raf","useFrameState","defaultValue","value","setValue","useState","frameRef","useRef","batchRef","destroyRef","useEffect","current","cancel","setFrameValue","updater","prevValue","forEach","func","push"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,eAAe,SAASC,aAAT,CAAuBC,YAAvB,EAAqC;AAClD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAeH,YAAf,CAA1B;AACA,QAAMI,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa,IAAb,CAAjB;AACA,QAAMC,QAAQ,GAAGT,KAAK,CAACQ,MAAN,CAAa,EAAb,CAAjB;AACA,QAAME,UAAU,GAAGV,KAAK,CAACQ,MAAN,CAAa,KAAb,CAAnB;AACAR,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpBD,IAAAA,UAAU,CAACE,OAAX,GAAqB,KAArB;AACA,WAAO,MAAM;AACXF,MAAAA,UAAU,CAACE,OAAX,GAAqB,IAArB;AACAX,MAAAA,GAAG,CAACY,MAAJ,CAAWN,QAAQ,CAACK,OAApB;AACAL,MAAAA,QAAQ,CAACK,OAAT,GAAmB,IAAnB;AACD,KAJD;AAKD,GAPD,EAOG,EAPH;;AAQA,WAASE,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,QAAIL,UAAU,CAACE,OAAf,EAAwB;AACtB;AACD;;AACD,QAAIL,QAAQ,CAACK,OAAT,KAAqB,IAAzB,EAA+B;AAC7BH,MAAAA,QAAQ,CAACG,OAAT,GAAmB,EAAnB;AACAL,MAAAA,QAAQ,CAACK,OAAT,GAAmBX,GAAG,CAAC,MAAM;AAC3BM,QAAAA,QAAQ,CAACK,OAAT,GAAmB,IAAnB;AACAP,QAAAA,QAAQ,CAACW,SAAS,IAAI;AACpB,cAAIJ,OAAO,GAAGI,SAAd;AACAP,UAAAA,QAAQ,CAACG,OAAT,CAAiBK,OAAjB,CAAyBC,IAAI,IAAI;AAC/BN,YAAAA,OAAO,GAAGM,IAAI,CAACN,OAAD,CAAd;AACD,WAFD;AAGA,iBAAOA,OAAP;AACD,SANO,CAAR;AAOD,OATqB,CAAtB;AAUD;;AACDH,IAAAA,QAAQ,CAACG,OAAT,CAAiBO,IAAjB,CAAsBJ,OAAtB;AACD;;AACD,SAAO,CAACX,KAAD,EAAQU,aAAR,CAAP;AACD","sourcesContent":["import * as React from 'react';\nimport raf from \"rc-util/es/raf\";\nexport default function useFrameState(defaultValue) {\n  const [value, setValue] = React.useState(defaultValue);\n  const frameRef = React.useRef(null);\n  const batchRef = React.useRef([]);\n  const destroyRef = React.useRef(false);\n  React.useEffect(() => {\n    destroyRef.current = false;\n    return () => {\n      destroyRef.current = true;\n      raf.cancel(frameRef.current);\n      frameRef.current = null;\n    };\n  }, []);\n  function setFrameValue(updater) {\n    if (destroyRef.current) {\n      return;\n    }\n    if (frameRef.current === null) {\n      batchRef.current = [];\n      frameRef.current = raf(() => {\n        frameRef.current = null;\n        setValue(prevValue => {\n          let current = prevValue;\n          batchRef.current.forEach(func => {\n            current = func(current);\n          });\n          return current;\n        });\n      });\n    }\n    batchRef.current.push(updater);\n  }\n  return [value, setFrameValue];\n}"]},"metadata":{},"sourceType":"module"}