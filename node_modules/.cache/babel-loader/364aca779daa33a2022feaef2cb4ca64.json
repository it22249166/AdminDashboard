{"ast":null,"code":"\"use client\";\n\nimport React from 'react';\nimport HolderOutlined from \"@ant-design/icons/es/icons/HolderOutlined\";\nimport classNames from 'classnames';\nimport RcTree from 'rc-tree';\nimport initCollapseMotion from '../_util/motion';\nimport { ConfigContext } from '../config-provider';\nimport { useToken } from '../theme/internal';\nimport useStyle from './style';\nimport dropIndicatorRender from './utils/dropIndicator';\nimport SwitcherIconCom from './utils/iconUtil';\nconst Tree = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a;\n\n  const {\n    getPrefixCls,\n    direction,\n    virtual,\n    tree\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    showIcon = false,\n    showLine,\n    switcherIcon,\n    switcherLoadingIcon,\n    blockNode = false,\n    children,\n    checkable = false,\n    selectable = true,\n    draggable,\n    motion: customMotion,\n    style\n  } = props;\n  const prefixCls = getPrefixCls('tree', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const motion = customMotion !== null && customMotion !== void 0 ? customMotion : Object.assign(Object.assign({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false\n  });\n  const newProps = Object.assign(Object.assign({}, props), {\n    checkable,\n    selectable,\n    showIcon,\n    motion,\n    blockNode,\n    showLine: Boolean(showLine),\n    dropIndicatorRender\n  });\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const [, token] = useToken();\n  const itemHeight = token.paddingXS / 2 + (((_a = token.Tree) === null || _a === void 0 ? void 0 : _a.titleHeight) || token.controlHeightSM);\n  const draggableConfig = React.useMemo(() => {\n    if (!draggable) {\n      return false;\n    }\n\n    let mergedDraggable = {};\n\n    switch (typeof draggable) {\n      case 'function':\n        mergedDraggable.nodeDraggable = draggable;\n        break;\n\n      case 'object':\n        mergedDraggable = Object.assign({}, draggable);\n        break;\n\n      default:\n        break;\n      // Do nothing\n    }\n\n    if (mergedDraggable.icon !== false) {\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(HolderOutlined, null);\n    }\n\n    return mergedDraggable;\n  }, [draggable]);\n\n  const renderSwitcherIcon = nodeProps => /*#__PURE__*/React.createElement(SwitcherIconCom, {\n    prefixCls: prefixCls,\n    switcherIcon: switcherIcon,\n    switcherLoadingIcon: switcherLoadingIcon,\n    treeNodeProps: nodeProps,\n    showLine: showLine\n  });\n\n  return wrapCSSVar(\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(RcTree, Object.assign({\n    itemHeight: itemHeight,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    // newProps may contain style so declare style below it\n    style: Object.assign(Object.assign({}, tree === null || tree === void 0 ? void 0 : tree.style), style),\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-icon-hide`]: !showIcon,\n      [`${prefixCls}-block-node`]: blockNode,\n      [`${prefixCls}-unselectable`]: !selectable,\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, tree === null || tree === void 0 ? void 0 : tree.className, className, hashId, cssVarCls),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-checkbox-inner`\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: renderSwitcherIcon,\n    draggable: draggableConfig\n  }), children));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Tree.displayName = 'Tree';\n}\n\nexport default Tree;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/tree/Tree.js"],"names":["React","HolderOutlined","classNames","RcTree","initCollapseMotion","ConfigContext","useToken","useStyle","dropIndicatorRender","SwitcherIconCom","Tree","forwardRef","props","ref","_a","getPrefixCls","direction","virtual","tree","useContext","prefixCls","customizePrefixCls","className","showIcon","showLine","switcherIcon","switcherLoadingIcon","blockNode","children","checkable","selectable","draggable","motion","customMotion","style","rootPrefixCls","Object","assign","motionAppear","newProps","Boolean","wrapCSSVar","hashId","cssVarCls","token","itemHeight","paddingXS","titleHeight","controlHeightSM","draggableConfig","useMemo","mergedDraggable","nodeDraggable","icon","createElement","renderSwitcherIcon","nodeProps","treeNodeProps","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport HolderOutlined from \"@ant-design/icons/es/icons/HolderOutlined\";\nimport classNames from 'classnames';\nimport RcTree from 'rc-tree';\nimport initCollapseMotion from '../_util/motion';\nimport { ConfigContext } from '../config-provider';\nimport { useToken } from '../theme/internal';\nimport useStyle from './style';\nimport dropIndicatorRender from './utils/dropIndicator';\nimport SwitcherIconCom from './utils/iconUtil';\nconst Tree = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a;\n  const {\n    getPrefixCls,\n    direction,\n    virtual,\n    tree\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    showIcon = false,\n    showLine,\n    switcherIcon,\n    switcherLoadingIcon,\n    blockNode = false,\n    children,\n    checkable = false,\n    selectable = true,\n    draggable,\n    motion: customMotion,\n    style\n  } = props;\n  const prefixCls = getPrefixCls('tree', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const motion = customMotion !== null && customMotion !== void 0 ? customMotion : Object.assign(Object.assign({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false\n  });\n  const newProps = Object.assign(Object.assign({}, props), {\n    checkable,\n    selectable,\n    showIcon,\n    motion,\n    blockNode,\n    showLine: Boolean(showLine),\n    dropIndicatorRender\n  });\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const [, token] = useToken();\n  const itemHeight = token.paddingXS / 2 + (((_a = token.Tree) === null || _a === void 0 ? void 0 : _a.titleHeight) || token.controlHeightSM);\n  const draggableConfig = React.useMemo(() => {\n    if (!draggable) {\n      return false;\n    }\n    let mergedDraggable = {};\n    switch (typeof draggable) {\n      case 'function':\n        mergedDraggable.nodeDraggable = draggable;\n        break;\n      case 'object':\n        mergedDraggable = Object.assign({}, draggable);\n        break;\n      default:\n        break;\n      // Do nothing\n    }\n    if (mergedDraggable.icon !== false) {\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(HolderOutlined, null);\n    }\n    return mergedDraggable;\n  }, [draggable]);\n  const renderSwitcherIcon = nodeProps => (/*#__PURE__*/React.createElement(SwitcherIconCom, {\n    prefixCls: prefixCls,\n    switcherIcon: switcherIcon,\n    switcherLoadingIcon: switcherLoadingIcon,\n    treeNodeProps: nodeProps,\n    showLine: showLine\n  }));\n  return wrapCSSVar(\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(RcTree, Object.assign({\n    itemHeight: itemHeight,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    // newProps may contain style so declare style below it\n    style: Object.assign(Object.assign({}, tree === null || tree === void 0 ? void 0 : tree.style), style),\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-icon-hide`]: !showIcon,\n      [`${prefixCls}-block-node`]: blockNode,\n      [`${prefixCls}-unselectable`]: !selectable,\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, tree === null || tree === void 0 ? void 0 : tree.className, className, hashId, cssVarCls),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-checkbox-inner`\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: renderSwitcherIcon,\n    draggable: draggableConfig\n  }), children));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Tree.displayName = 'Tree';\n}\nexport default Tree;"]},"metadata":{},"sourceType":"module"}