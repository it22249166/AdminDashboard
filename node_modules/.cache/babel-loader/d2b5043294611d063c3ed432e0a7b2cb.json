{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { warning } from 'rc-util';\n\nfunction getComponentToken(component, token, defaultToken, options) {\n  var customToken = _objectSpread({}, token[component]);\n\n  if (options !== null && options !== void 0 && options.deprecatedTokens) {\n    var deprecatedTokens = options.deprecatedTokens;\n    deprecatedTokens.forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          oldTokenKey = _ref2[0],\n          newTokenKey = _ref2[1];\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(!(customToken !== null && customToken !== void 0 && customToken[oldTokenKey]), \"Component Token `\".concat(String(oldTokenKey), \"` of \").concat(String(component), \" is deprecated. Please use `\").concat(String(newTokenKey), \"` instead.\"));\n      } // Should wrap with `if` clause, or there will be `undefined` in object.\n\n\n      if (customToken !== null && customToken !== void 0 && customToken[oldTokenKey] || customToken !== null && customToken !== void 0 && customToken[newTokenKey]) {\n        var _customToken$newToken;\n\n        (_customToken$newToken = customToken[newTokenKey]) !== null && _customToken$newToken !== void 0 ? _customToken$newToken : customToken[newTokenKey] = customToken === null || customToken === void 0 ? void 0 : customToken[oldTokenKey];\n      }\n    });\n  }\n\n  var mergedToken = _objectSpread(_objectSpread({}, defaultToken), customToken); // Remove same value as global token to minimize size\n\n\n  Object.keys(mergedToken).forEach(function (key) {\n    if (mergedToken[key] === token[key]) {\n      delete mergedToken[key];\n    }\n  });\n  return mergedToken;\n}\n\nexport default getComponentToken;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@ant-design/cssinjs-utils/es/util/getComponentToken.js"],"names":["_slicedToArray","_objectSpread","warning","getComponentToken","component","token","defaultToken","options","customToken","deprecatedTokens","forEach","_ref","_ref2","oldTokenKey","newTokenKey","process","env","NODE_ENV","concat","String","_customToken$newToken","mergedToken","Object","keys","key"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,SAASC,OAAT,QAAwB,SAAxB;;AACA,SAASC,iBAAT,CAA2BC,SAA3B,EAAsCC,KAAtC,EAA6CC,YAA7C,EAA2DC,OAA3D,EAAoE;AAClE,MAAIC,WAAW,GAAGP,aAAa,CAAC,EAAD,EAAKI,KAAK,CAACD,SAAD,CAAV,CAA/B;;AACA,MAAIG,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAACE,gBAAtD,EAAwE;AACtE,QAAIA,gBAAgB,GAAGF,OAAO,CAACE,gBAA/B;AACAA,IAAAA,gBAAgB,CAACC,OAAjB,CAAyB,UAAUC,IAAV,EAAgB;AACvC,UAAIC,KAAK,GAAGZ,cAAc,CAACW,IAAD,EAAO,CAAP,CAA1B;AAAA,UACEE,WAAW,GAAGD,KAAK,CAAC,CAAD,CADrB;AAAA,UAEEE,WAAW,GAAGF,KAAK,CAAC,CAAD,CAFrB;;AAGA,UAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCf,QAAAA,OAAO,CAAC,EAAEM,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,IAAkDA,WAAW,CAACK,WAAD,CAA/D,CAAD,EAAgF,oBAAoBK,MAApB,CAA2BC,MAAM,CAACN,WAAD,CAAjC,EAAgD,OAAhD,EAAyDK,MAAzD,CAAgEC,MAAM,CAACf,SAAD,CAAtE,EAAmF,8BAAnF,EAAmHc,MAAnH,CAA0HC,MAAM,CAACL,WAAD,CAAhI,EAA+I,YAA/I,CAAhF,CAAP;AACD,OANsC,CAQvC;;;AACA,UAAIN,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,IAAkDA,WAAW,CAACK,WAAD,CAA7D,IAA8EL,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,IAAkDA,WAAW,CAACM,WAAD,CAA/I,EAA8J;AAC5J,YAAIM,qBAAJ;;AACA,SAACA,qBAAqB,GAAGZ,WAAW,CAACM,WAAD,CAApC,MAAuD,IAAvD,IAA+DM,qBAAqB,KAAK,KAAK,CAA9F,GAAkGA,qBAAlG,GAA0HZ,WAAW,CAACM,WAAD,CAAX,GAA2BN,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACK,WAAD,CAA1N;AACD;AACF,KAbD;AAcD;;AACD,MAAIQ,WAAW,GAAGpB,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKK,YAAL,CAAd,EAAkCE,WAAlC,CAA/B,CAnBkE,CAqBlE;;;AACAc,EAAAA,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBX,OAAzB,CAAiC,UAAUc,GAAV,EAAe;AAC9C,QAAIH,WAAW,CAACG,GAAD,CAAX,KAAqBnB,KAAK,CAACmB,GAAD,CAA9B,EAAqC;AACnC,aAAOH,WAAW,CAACG,GAAD,CAAlB;AACD;AACF,GAJD;AAKA,SAAOH,WAAP;AACD;;AACD,eAAelB,iBAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { warning } from 'rc-util';\nfunction getComponentToken(component, token, defaultToken, options) {\n  var customToken = _objectSpread({}, token[component]);\n  if (options !== null && options !== void 0 && options.deprecatedTokens) {\n    var deprecatedTokens = options.deprecatedTokens;\n    deprecatedTokens.forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        oldTokenKey = _ref2[0],\n        newTokenKey = _ref2[1];\n      if (process.env.NODE_ENV !== 'production') {\n        warning(!(customToken !== null && customToken !== void 0 && customToken[oldTokenKey]), \"Component Token `\".concat(String(oldTokenKey), \"` of \").concat(String(component), \" is deprecated. Please use `\").concat(String(newTokenKey), \"` instead.\"));\n      }\n\n      // Should wrap with `if` clause, or there will be `undefined` in object.\n      if (customToken !== null && customToken !== void 0 && customToken[oldTokenKey] || customToken !== null && customToken !== void 0 && customToken[newTokenKey]) {\n        var _customToken$newToken;\n        (_customToken$newToken = customToken[newTokenKey]) !== null && _customToken$newToken !== void 0 ? _customToken$newToken : customToken[newTokenKey] = customToken === null || customToken === void 0 ? void 0 : customToken[oldTokenKey];\n      }\n    });\n  }\n  var mergedToken = _objectSpread(_objectSpread({}, defaultToken), customToken);\n\n  // Remove same value as global token to minimize size\n  Object.keys(mergedToken).forEach(function (key) {\n    if (mergedToken[key] === token[key]) {\n      delete mergedToken[key];\n    }\n  });\n  return mergedToken;\n}\nexport default getComponentToken;"]},"metadata":{},"sourceType":"module"}