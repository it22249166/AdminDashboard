{"ast":null,"code":"import { FastColor } from '@ant-design/fast-color';\nvar hueStep = 2; // 色相阶梯\n\nvar saturationStep = 0.16; // 饱和度阶梯，浅色部分\n\nvar saturationStep2 = 0.05; // 饱和度阶梯，深色部分\n\nvar brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\n\nvar brightnessStep2 = 0.15; // 亮度阶梯，深色部分\n\nvar lightColorCount = 5; // 浅色数量，主色上\n\nvar darkColorCount = 4; // 深色数量，主色下\n// 暗色主题颜色映射关系表\n\nvar darkColorMap = [{\n  index: 7,\n  amount: 15\n}, {\n  index: 6,\n  amount: 25\n}, {\n  index: 5,\n  amount: 30\n}, {\n  index: 5,\n  amount: 45\n}, {\n  index: 5,\n  amount: 65\n}, {\n  index: 5,\n  amount: 85\n}, {\n  index: 4,\n  amount: 90\n}, {\n  index: 3,\n  amount: 95\n}, {\n  index: 2,\n  amount: 97\n}, {\n  index: 1,\n  amount: 98\n}];\n\nfunction getHue(hsv, i, light) {\n  var hue; // 根据色相不同，色相转向不同\n\n  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n  } else {\n    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n  }\n\n  if (hue < 0) {\n    hue += 360;\n  } else if (hue >= 360) {\n    hue -= 360;\n  }\n\n  return hue;\n}\n\nfunction getSaturation(hsv, i, light) {\n  // grey color don't change saturation\n  if (hsv.h === 0 && hsv.s === 0) {\n    return hsv.s;\n  }\n\n  var saturation;\n\n  if (light) {\n    saturation = hsv.s - saturationStep * i;\n  } else if (i === darkColorCount) {\n    saturation = hsv.s + saturationStep;\n  } else {\n    saturation = hsv.s + saturationStep2 * i;\n  } // 边界值修正\n\n\n  if (saturation > 1) {\n    saturation = 1;\n  } // 第一格的 s 限制在 0.06-0.1 之间\n\n\n  if (light && i === lightColorCount && saturation > 0.1) {\n    saturation = 0.1;\n  }\n\n  if (saturation < 0.06) {\n    saturation = 0.06;\n  }\n\n  return Math.round(saturation * 100) / 100;\n}\n\nfunction getValue(hsv, i, light) {\n  var value;\n\n  if (light) {\n    value = hsv.v + brightnessStep1 * i;\n  } else {\n    value = hsv.v - brightnessStep2 * i;\n  } // Clamp value between 0 and 1\n\n\n  value = Math.max(0, Math.min(1, value));\n  return Math.round(value * 100) / 100;\n}\n\nexport default function generate(color) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var patterns = [];\n  var pColor = new FastColor(color);\n  var hsv = pColor.toHsv();\n\n  for (var i = lightColorCount; i > 0; i -= 1) {\n    var c = new FastColor({\n      h: getHue(hsv, i, true),\n      s: getSaturation(hsv, i, true),\n      v: getValue(hsv, i, true)\n    });\n    patterns.push(c);\n  }\n\n  patterns.push(pColor);\n\n  for (var _i = 1; _i <= darkColorCount; _i += 1) {\n    var _c = new FastColor({\n      h: getHue(hsv, _i),\n      s: getSaturation(hsv, _i),\n      v: getValue(hsv, _i)\n    });\n\n    patterns.push(_c);\n  } // dark theme patterns\n\n\n  if (opts.theme === 'dark') {\n    return darkColorMap.map(function (_ref) {\n      var index = _ref.index,\n          amount = _ref.amount;\n      return new FastColor(opts.backgroundColor || '#141414').mix(patterns[index], amount).toHexString();\n    });\n  }\n\n  return patterns.map(function (c) {\n    return c.toHexString();\n  });\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/node_modules/@ant-design/colors/es/generate.js"],"names":["FastColor","hueStep","saturationStep","saturationStep2","brightnessStep1","brightnessStep2","lightColorCount","darkColorCount","darkColorMap","index","amount","getHue","hsv","i","light","hue","Math","round","h","getSaturation","s","saturation","getValue","value","v","max","min","generate","color","opts","arguments","length","undefined","patterns","pColor","toHsv","c","push","_i","_c","theme","map","_ref","backgroundColor","mix","toHexString"],"mappings":"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","sourcesContent":["import { FastColor } from '@ant-design/fast-color';\nvar hueStep = 2; // 色相阶梯\nvar saturationStep = 0.16; // 饱和度阶梯，浅色部分\nvar saturationStep2 = 0.05; // 饱和度阶梯，深色部分\nvar brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\nvar brightnessStep2 = 0.15; // 亮度阶梯，深色部分\nvar lightColorCount = 5; // 浅色数量，主色上\nvar darkColorCount = 4; // 深色数量，主色下\n\n// 暗色主题颜色映射关系表\nvar darkColorMap = [{\n  index: 7,\n  amount: 15\n}, {\n  index: 6,\n  amount: 25\n}, {\n  index: 5,\n  amount: 30\n}, {\n  index: 5,\n  amount: 45\n}, {\n  index: 5,\n  amount: 65\n}, {\n  index: 5,\n  amount: 85\n}, {\n  index: 4,\n  amount: 90\n}, {\n  index: 3,\n  amount: 95\n}, {\n  index: 2,\n  amount: 97\n}, {\n  index: 1,\n  amount: 98\n}];\nfunction getHue(hsv, i, light) {\n  var hue;\n  // 根据色相不同，色相转向不同\n  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n  } else {\n    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n  }\n  if (hue < 0) {\n    hue += 360;\n  } else if (hue >= 360) {\n    hue -= 360;\n  }\n  return hue;\n}\nfunction getSaturation(hsv, i, light) {\n  // grey color don't change saturation\n  if (hsv.h === 0 && hsv.s === 0) {\n    return hsv.s;\n  }\n  var saturation;\n  if (light) {\n    saturation = hsv.s - saturationStep * i;\n  } else if (i === darkColorCount) {\n    saturation = hsv.s + saturationStep;\n  } else {\n    saturation = hsv.s + saturationStep2 * i;\n  }\n  // 边界值修正\n  if (saturation > 1) {\n    saturation = 1;\n  }\n  // 第一格的 s 限制在 0.06-0.1 之间\n  if (light && i === lightColorCount && saturation > 0.1) {\n    saturation = 0.1;\n  }\n  if (saturation < 0.06) {\n    saturation = 0.06;\n  }\n  return Math.round(saturation * 100) / 100;\n}\nfunction getValue(hsv, i, light) {\n  var value;\n  if (light) {\n    value = hsv.v + brightnessStep1 * i;\n  } else {\n    value = hsv.v - brightnessStep2 * i;\n  }\n  // Clamp value between 0 and 1\n  value = Math.max(0, Math.min(1, value));\n  return Math.round(value * 100) / 100;\n}\nexport default function generate(color) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var patterns = [];\n  var pColor = new FastColor(color);\n  var hsv = pColor.toHsv();\n  for (var i = lightColorCount; i > 0; i -= 1) {\n    var c = new FastColor({\n      h: getHue(hsv, i, true),\n      s: getSaturation(hsv, i, true),\n      v: getValue(hsv, i, true)\n    });\n    patterns.push(c);\n  }\n  patterns.push(pColor);\n  for (var _i = 1; _i <= darkColorCount; _i += 1) {\n    var _c = new FastColor({\n      h: getHue(hsv, _i),\n      s: getSaturation(hsv, _i),\n      v: getValue(hsv, _i)\n    });\n    patterns.push(_c);\n  }\n\n  // dark theme patterns\n  if (opts.theme === 'dark') {\n    return darkColorMap.map(function (_ref) {\n      var index = _ref.index,\n        amount = _ref.amount;\n      return new FastColor(opts.backgroundColor || '#141414').mix(patterns[index], amount).toHexString();\n    });\n  }\n  return patterns.map(function (c) {\n    return c.toHexString();\n  });\n}"]},"metadata":{},"sourceType":"module"}