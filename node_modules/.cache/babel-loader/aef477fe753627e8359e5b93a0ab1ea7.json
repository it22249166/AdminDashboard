{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useRef, useState } from 'react';\nvar MIN_SWIPE_DISTANCE = 0.1;\nvar STOP_SWIPE_DISTANCE = 0.01;\nvar REFRESH_INTERVAL = 20;\nvar SPEED_OFF_MULTIPLE = Math.pow(0.995, REFRESH_INTERVAL); // ================================= Hook =================================\n\nexport default function useTouchMove(ref, onOffset) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      touchPosition = _useState2[0],\n      setTouchPosition = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastTimestamp = _useState4[0],\n      setLastTimestamp = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastTimeDiff = _useState6[0],\n      setLastTimeDiff = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lastOffset = _useState8[0],\n      setLastOffset = _useState8[1];\n\n  var motionRef = useRef(); // ========================= Events =========================\n  // >>> Touch events\n\n  function onTouchStart(e) {\n    var _e$touches$ = e.touches[0],\n        screenX = _e$touches$.screenX,\n        screenY = _e$touches$.screenY;\n    setTouchPosition({\n      x: screenX,\n      y: screenY\n    });\n    window.clearInterval(motionRef.current);\n  }\n\n  function onTouchMove(e) {\n    if (!touchPosition) return; // e.preventDefault();\n\n    var _e$touches$2 = e.touches[0],\n        screenX = _e$touches$2.screenX,\n        screenY = _e$touches$2.screenY;\n    setTouchPosition({\n      x: screenX,\n      y: screenY\n    });\n    var offsetX = screenX - touchPosition.x;\n    var offsetY = screenY - touchPosition.y;\n    onOffset(offsetX, offsetY);\n    var now = Date.now();\n    setLastTimestamp(now);\n    setLastTimeDiff(now - lastTimestamp);\n    setLastOffset({\n      x: offsetX,\n      y: offsetY\n    });\n  }\n\n  function onTouchEnd() {\n    if (!touchPosition) return;\n    setTouchPosition(null);\n    setLastOffset(null); // Swipe if needed\n\n    if (lastOffset) {\n      var distanceX = lastOffset.x / lastTimeDiff;\n      var distanceY = lastOffset.y / lastTimeDiff;\n      var absX = Math.abs(distanceX);\n      var absY = Math.abs(distanceY); // Skip swipe if low distance\n\n      if (Math.max(absX, absY) < MIN_SWIPE_DISTANCE) return;\n      var currentX = distanceX;\n      var currentY = distanceY;\n      motionRef.current = window.setInterval(function () {\n        if (Math.abs(currentX) < STOP_SWIPE_DISTANCE && Math.abs(currentY) < STOP_SWIPE_DISTANCE) {\n          window.clearInterval(motionRef.current);\n          return;\n        }\n\n        currentX *= SPEED_OFF_MULTIPLE;\n        currentY *= SPEED_OFF_MULTIPLE;\n        onOffset(currentX * REFRESH_INTERVAL, currentY * REFRESH_INTERVAL);\n      }, REFRESH_INTERVAL);\n    }\n  } // >>> Wheel event\n\n\n  var lastWheelDirectionRef = useRef();\n\n  function onWheel(e) {\n    var deltaX = e.deltaX,\n        deltaY = e.deltaY; // Convert both to x & y since wheel only happened on PC\n\n    var mixed = 0;\n    var absX = Math.abs(deltaX);\n    var absY = Math.abs(deltaY);\n\n    if (absX === absY) {\n      mixed = lastWheelDirectionRef.current === 'x' ? deltaX : deltaY;\n    } else if (absX > absY) {\n      mixed = deltaX;\n      lastWheelDirectionRef.current = 'x';\n    } else {\n      mixed = deltaY;\n      lastWheelDirectionRef.current = 'y';\n    }\n\n    if (onOffset(-mixed, -mixed)) {\n      e.preventDefault();\n    }\n  } // ========================= Effect =========================\n\n\n  var touchEventsRef = useRef(null);\n  touchEventsRef.current = {\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd,\n    onWheel: onWheel\n  };\n  React.useEffect(function () {\n    function onProxyTouchStart(e) {\n      touchEventsRef.current.onTouchStart(e);\n    }\n\n    function onProxyTouchMove(e) {\n      touchEventsRef.current.onTouchMove(e);\n    }\n\n    function onProxyTouchEnd(e) {\n      touchEventsRef.current.onTouchEnd(e);\n    }\n\n    function onProxyWheel(e) {\n      touchEventsRef.current.onWheel(e);\n    }\n\n    document.addEventListener('touchmove', onProxyTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', onProxyTouchEnd, {\n      passive: true\n    }); // No need to clean up since element removed\n\n    ref.current.addEventListener('touchstart', onProxyTouchStart, {\n      passive: true\n    });\n    ref.current.addEventListener('wheel', onProxyWheel, {\n      passive: false\n    });\n    return function () {\n      document.removeEventListener('touchmove', onProxyTouchMove);\n      document.removeEventListener('touchend', onProxyTouchEnd);\n    };\n  }, []);\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-tabs/es/hooks/useTouchMove.js"],"names":["_slicedToArray","React","useRef","useState","MIN_SWIPE_DISTANCE","STOP_SWIPE_DISTANCE","REFRESH_INTERVAL","SPEED_OFF_MULTIPLE","Math","pow","useTouchMove","ref","onOffset","_useState","_useState2","touchPosition","setTouchPosition","_useState3","_useState4","lastTimestamp","setLastTimestamp","_useState5","_useState6","lastTimeDiff","setLastTimeDiff","_useState7","_useState8","lastOffset","setLastOffset","motionRef","onTouchStart","e","_e$touches$","touches","screenX","screenY","x","y","window","clearInterval","current","onTouchMove","_e$touches$2","offsetX","offsetY","now","Date","onTouchEnd","distanceX","distanceY","absX","abs","absY","max","currentX","currentY","setInterval","lastWheelDirectionRef","onWheel","deltaX","deltaY","mixed","preventDefault","touchEventsRef","useEffect","onProxyTouchStart","onProxyTouchMove","onProxyTouchEnd","onProxyWheel","document","addEventListener","passive","removeEventListener"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useRef, useState } from 'react';\nvar MIN_SWIPE_DISTANCE = 0.1;\nvar STOP_SWIPE_DISTANCE = 0.01;\nvar REFRESH_INTERVAL = 20;\nvar SPEED_OFF_MULTIPLE = Math.pow(0.995, REFRESH_INTERVAL);\n\n// ================================= Hook =================================\nexport default function useTouchMove(ref, onOffset) {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    touchPosition = _useState2[0],\n    setTouchPosition = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lastTimestamp = _useState4[0],\n    setLastTimestamp = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    lastTimeDiff = _useState6[0],\n    setLastTimeDiff = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    lastOffset = _useState8[0],\n    setLastOffset = _useState8[1];\n  var motionRef = useRef();\n\n  // ========================= Events =========================\n  // >>> Touch events\n  function onTouchStart(e) {\n    var _e$touches$ = e.touches[0],\n      screenX = _e$touches$.screenX,\n      screenY = _e$touches$.screenY;\n    setTouchPosition({\n      x: screenX,\n      y: screenY\n    });\n    window.clearInterval(motionRef.current);\n  }\n  function onTouchMove(e) {\n    if (!touchPosition) return;\n\n    // e.preventDefault();\n    var _e$touches$2 = e.touches[0],\n      screenX = _e$touches$2.screenX,\n      screenY = _e$touches$2.screenY;\n    setTouchPosition({\n      x: screenX,\n      y: screenY\n    });\n    var offsetX = screenX - touchPosition.x;\n    var offsetY = screenY - touchPosition.y;\n    onOffset(offsetX, offsetY);\n    var now = Date.now();\n    setLastTimestamp(now);\n    setLastTimeDiff(now - lastTimestamp);\n    setLastOffset({\n      x: offsetX,\n      y: offsetY\n    });\n  }\n  function onTouchEnd() {\n    if (!touchPosition) return;\n    setTouchPosition(null);\n    setLastOffset(null);\n\n    // Swipe if needed\n    if (lastOffset) {\n      var distanceX = lastOffset.x / lastTimeDiff;\n      var distanceY = lastOffset.y / lastTimeDiff;\n      var absX = Math.abs(distanceX);\n      var absY = Math.abs(distanceY);\n\n      // Skip swipe if low distance\n      if (Math.max(absX, absY) < MIN_SWIPE_DISTANCE) return;\n      var currentX = distanceX;\n      var currentY = distanceY;\n      motionRef.current = window.setInterval(function () {\n        if (Math.abs(currentX) < STOP_SWIPE_DISTANCE && Math.abs(currentY) < STOP_SWIPE_DISTANCE) {\n          window.clearInterval(motionRef.current);\n          return;\n        }\n        currentX *= SPEED_OFF_MULTIPLE;\n        currentY *= SPEED_OFF_MULTIPLE;\n        onOffset(currentX * REFRESH_INTERVAL, currentY * REFRESH_INTERVAL);\n      }, REFRESH_INTERVAL);\n    }\n  }\n\n  // >>> Wheel event\n  var lastWheelDirectionRef = useRef();\n  function onWheel(e) {\n    var deltaX = e.deltaX,\n      deltaY = e.deltaY;\n\n    // Convert both to x & y since wheel only happened on PC\n    var mixed = 0;\n    var absX = Math.abs(deltaX);\n    var absY = Math.abs(deltaY);\n    if (absX === absY) {\n      mixed = lastWheelDirectionRef.current === 'x' ? deltaX : deltaY;\n    } else if (absX > absY) {\n      mixed = deltaX;\n      lastWheelDirectionRef.current = 'x';\n    } else {\n      mixed = deltaY;\n      lastWheelDirectionRef.current = 'y';\n    }\n    if (onOffset(-mixed, -mixed)) {\n      e.preventDefault();\n    }\n  }\n\n  // ========================= Effect =========================\n  var touchEventsRef = useRef(null);\n  touchEventsRef.current = {\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd,\n    onWheel: onWheel\n  };\n  React.useEffect(function () {\n    function onProxyTouchStart(e) {\n      touchEventsRef.current.onTouchStart(e);\n    }\n    function onProxyTouchMove(e) {\n      touchEventsRef.current.onTouchMove(e);\n    }\n    function onProxyTouchEnd(e) {\n      touchEventsRef.current.onTouchEnd(e);\n    }\n    function onProxyWheel(e) {\n      touchEventsRef.current.onWheel(e);\n    }\n    document.addEventListener('touchmove', onProxyTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', onProxyTouchEnd, {\n      passive: true\n    });\n\n    // No need to clean up since element removed\n    ref.current.addEventListener('touchstart', onProxyTouchStart, {\n      passive: true\n    });\n    ref.current.addEventListener('wheel', onProxyWheel, {\n      passive: false\n    });\n    return function () {\n      document.removeEventListener('touchmove', onProxyTouchMove);\n      document.removeEventListener('touchend', onProxyTouchEnd);\n    };\n  }, []);\n}"]},"metadata":{},"sourceType":"module"}