{"ast":null,"code":"import * as React from 'react';\nimport { renderColumnTitle } from '../util';\n\nconst fillTitle = (columns, columnTitleProps) => {\n  const finalColumns = columns.map(column => {\n    const cloneColumn = Object.assign({}, column);\n    cloneColumn.title = renderColumnTitle(column.title, columnTitleProps);\n\n    if ('children' in cloneColumn) {\n      cloneColumn.children = fillTitle(cloneColumn.children, columnTitleProps);\n    }\n\n    return cloneColumn;\n  });\n  return finalColumns;\n};\n\nconst useTitleColumns = columnTitleProps => {\n  const filledColumns = React.useCallback(columns => fillTitle(columns, columnTitleProps), [columnTitleProps]);\n  return [filledColumns];\n};\n\nexport default useTitleColumns;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/table/hooks/useTitleColumns.js"],"names":["React","renderColumnTitle","fillTitle","columns","columnTitleProps","finalColumns","map","column","cloneColumn","Object","assign","title","children","useTitleColumns","filledColumns","useCallback"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT,QAAkC,SAAlC;;AACA,MAAMC,SAAS,GAAG,CAACC,OAAD,EAAUC,gBAAV,KAA+B;AAC/C,QAAMC,YAAY,GAAGF,OAAO,CAACG,GAAR,CAAYC,MAAM,IAAI;AACzC,UAAMC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAlB,CAApB;AACAC,IAAAA,WAAW,CAACG,KAAZ,GAAoBV,iBAAiB,CAACM,MAAM,CAACI,KAAR,EAAeP,gBAAf,CAArC;;AACA,QAAI,cAAcI,WAAlB,EAA+B;AAC7BA,MAAAA,WAAW,CAACI,QAAZ,GAAuBV,SAAS,CAACM,WAAW,CAACI,QAAb,EAAuBR,gBAAvB,CAAhC;AACD;;AACD,WAAOI,WAAP;AACD,GAPoB,CAArB;AAQA,SAAOH,YAAP;AACD,CAVD;;AAWA,MAAMQ,eAAe,GAAGT,gBAAgB,IAAI;AAC1C,QAAMU,aAAa,GAAGd,KAAK,CAACe,WAAN,CAAkBZ,OAAO,IAAID,SAAS,CAACC,OAAD,EAAUC,gBAAV,CAAtC,EAAmE,CAACA,gBAAD,CAAnE,CAAtB;AACA,SAAO,CAACU,aAAD,CAAP;AACD,CAHD;;AAIA,eAAeD,eAAf","sourcesContent":["import * as React from 'react';\nimport { renderColumnTitle } from '../util';\nconst fillTitle = (columns, columnTitleProps) => {\n  const finalColumns = columns.map(column => {\n    const cloneColumn = Object.assign({}, column);\n    cloneColumn.title = renderColumnTitle(column.title, columnTitleProps);\n    if ('children' in cloneColumn) {\n      cloneColumn.children = fillTitle(cloneColumn.children, columnTitleProps);\n    }\n    return cloneColumn;\n  });\n  return finalColumns;\n};\nconst useTitleColumns = columnTitleProps => {\n  const filledColumns = React.useCallback(columns => fillTitle(columns, columnTitleProps), [columnTitleProps]);\n  return [filledColumns];\n};\nexport default useTitleColumns;"]},"metadata":{},"sourceType":"module"}