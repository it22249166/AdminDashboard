{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n/**\n * Cursor rule:\n * 1. Only `showSearch` enabled\n * 2. Only `open` is `true`\n * 3. When typing, set `open` to `true` which hit rule of 2\n *\n * Accessibility:\n * - https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html\n */\n\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport useLock from \"../hooks/useLock\";\nimport { isValidateOpenKey } from \"../utils/keyUtil\";\nimport MultipleSelector from \"./MultipleSelector\";\nimport SingleSelector from \"./SingleSelector\";\n\nvar Selector = function Selector(props, ref) {\n  var inputRef = useRef(null);\n  var compositionStatusRef = useRef(false);\n  var prefixCls = props.prefixCls,\n      open = props.open,\n      mode = props.mode,\n      showSearch = props.showSearch,\n      tokenWithEnter = props.tokenWithEnter,\n      disabled = props.disabled,\n      prefix = props.prefix,\n      autoClearSearchValue = props.autoClearSearchValue,\n      onSearch = props.onSearch,\n      onSearchSubmit = props.onSearchSubmit,\n      onToggleOpen = props.onToggleOpen,\n      onInputKeyDown = props.onInputKeyDown,\n      onInputBlur = props.onInputBlur,\n      domRef = props.domRef; // ======================= Ref =======================\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus(options) {\n        inputRef.current.focus(options);\n      },\n      blur: function blur() {\n        inputRef.current.blur();\n      }\n    };\n  }); // ====================== Input ======================\n\n  var _useLock = useLock(0),\n      _useLock2 = _slicedToArray(_useLock, 2),\n      getInputMouseDown = _useLock2[0],\n      setInputMouseDown = _useLock2[1];\n\n  var onInternalInputKeyDown = function onInternalInputKeyDown(event) {\n    var which = event.which; // Compatible with multiple lines in TextArea\n\n    var isTextAreaElement = inputRef.current instanceof HTMLTextAreaElement;\n\n    if (!isTextAreaElement && open && (which === KeyCode.UP || which === KeyCode.DOWN)) {\n      event.preventDefault();\n    }\n\n    if (onInputKeyDown) {\n      onInputKeyDown(event);\n    }\n\n    if (which === KeyCode.ENTER && mode === 'tags' && !compositionStatusRef.current && !open) {\n      // When menu isn't open, OptionList won't trigger a value change\n      // So when enter is pressed, the tag's input value should be emitted here to let selector know\n      onSearchSubmit === null || onSearchSubmit === void 0 || onSearchSubmit(event.target.value);\n    } // Move within the text box\n\n\n    if (isTextAreaElement && !open && ~[KeyCode.UP, KeyCode.DOWN, KeyCode.LEFT, KeyCode.RIGHT].indexOf(which)) {\n      return;\n    }\n\n    if (isValidateOpenKey(which)) {\n      onToggleOpen(true);\n    }\n  };\n  /**\n   * We can not use `findDOMNode` sine it will get warning,\n   * have to use timer to check if is input element.\n   */\n\n\n  var onInternalInputMouseDown = function onInternalInputMouseDown() {\n    setInputMouseDown(true);\n  }; // When paste come, ignore next onChange\n\n\n  var pastedTextRef = useRef(null);\n\n  var triggerOnSearch = function triggerOnSearch(value) {\n    if (onSearch(value, true, compositionStatusRef.current) !== false) {\n      onToggleOpen(true);\n    }\n  };\n\n  var onInputCompositionStart = function onInputCompositionStart() {\n    compositionStatusRef.current = true;\n  };\n\n  var onInputCompositionEnd = function onInputCompositionEnd(e) {\n    compositionStatusRef.current = false; // Trigger search again to support `tokenSeparators` with typewriting\n\n    if (mode !== 'combobox') {\n      triggerOnSearch(e.target.value);\n    }\n  };\n\n  var onInputChange = function onInputChange(event) {\n    var value = event.target.value; // Pasted text should replace back to origin content\n\n    if (tokenWithEnter && pastedTextRef.current && /[\\r\\n]/.test(pastedTextRef.current)) {\n      // CRLF will be treated as a single space for input element\n      var replacedText = pastedTextRef.current.replace(/[\\r\\n]+$/, '').replace(/\\r\\n/g, ' ').replace(/[\\r\\n]/g, ' ');\n      value = value.replace(replacedText, pastedTextRef.current);\n    }\n\n    pastedTextRef.current = null;\n    triggerOnSearch(value);\n  };\n\n  var onInputPaste = function onInputPaste(e) {\n    var clipboardData = e.clipboardData;\n    var value = clipboardData === null || clipboardData === void 0 ? void 0 : clipboardData.getData('text');\n    pastedTextRef.current = value || '';\n  };\n\n  var onClick = function onClick(_ref) {\n    var target = _ref.target;\n\n    if (target !== inputRef.current) {\n      // Should focus input if click the selector\n      var isIE = document.body.style.msTouchAction !== undefined;\n\n      if (isIE) {\n        setTimeout(function () {\n          inputRef.current.focus();\n        });\n      } else {\n        inputRef.current.focus();\n      }\n    }\n  };\n\n  var onMouseDown = function onMouseDown(event) {\n    var inputMouseDown = getInputMouseDown(); // when mode is combobox and it is disabled, don't prevent default behavior\n    // https://github.com/ant-design/ant-design/issues/37320\n    // https://github.com/ant-design/ant-design/issues/48281\n\n    if (event.target !== inputRef.current && !inputMouseDown && !(mode === 'combobox' && disabled)) {\n      event.preventDefault();\n    }\n\n    if (mode !== 'combobox' && (!showSearch || !inputMouseDown) || !open) {\n      if (open && autoClearSearchValue !== false) {\n        onSearch('', true, false);\n      }\n\n      onToggleOpen();\n    }\n  }; // ================= Inner Selector ==================\n\n\n  var sharedProps = {\n    inputRef: inputRef,\n    onInputKeyDown: onInternalInputKeyDown,\n    onInputMouseDown: onInternalInputMouseDown,\n    onInputChange: onInputChange,\n    onInputPaste: onInputPaste,\n    onInputCompositionStart: onInputCompositionStart,\n    onInputCompositionEnd: onInputCompositionEnd,\n    onInputBlur: onInputBlur\n  };\n  var selectNode = mode === 'multiple' || mode === 'tags' ? /*#__PURE__*/React.createElement(MultipleSelector, _extends({}, props, sharedProps)) : /*#__PURE__*/React.createElement(SingleSelector, _extends({}, props, sharedProps));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: domRef,\n    className: \"\".concat(prefixCls, \"-selector\"),\n    onClick: onClick,\n    onMouseDown: onMouseDown\n  }, prefix && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-prefix\")\n  }, prefix), selectNode);\n};\n\nvar ForwardSelector = /*#__PURE__*/React.forwardRef(Selector);\n\nif (process.env.NODE_ENV !== 'production') {\n  ForwardSelector.displayName = 'Selector';\n}\n\nexport default ForwardSelector;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-select/es/Selector/index.js"],"names":["_extends","_slicedToArray","KeyCode","React","useRef","useLock","isValidateOpenKey","MultipleSelector","SingleSelector","Selector","props","ref","inputRef","compositionStatusRef","prefixCls","open","mode","showSearch","tokenWithEnter","disabled","prefix","autoClearSearchValue","onSearch","onSearchSubmit","onToggleOpen","onInputKeyDown","onInputBlur","domRef","useImperativeHandle","focus","options","current","blur","_useLock","_useLock2","getInputMouseDown","setInputMouseDown","onInternalInputKeyDown","event","which","isTextAreaElement","HTMLTextAreaElement","UP","DOWN","preventDefault","ENTER","target","value","LEFT","RIGHT","indexOf","onInternalInputMouseDown","pastedTextRef","triggerOnSearch","onInputCompositionStart","onInputCompositionEnd","e","onInputChange","test","replacedText","replace","onInputPaste","clipboardData","getData","onClick","_ref","isIE","document","body","style","msTouchAction","undefined","setTimeout","onMouseDown","inputMouseDown","sharedProps","onInputMouseDown","selectNode","createElement","className","concat","ForwardSelector","forwardRef","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n/**\n * Cursor rule:\n * 1. Only `showSearch` enabled\n * 2. Only `open` is `true`\n * 3. When typing, set `open` to `true` which hit rule of 2\n *\n * Accessibility:\n * - https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html\n */\n\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport useLock from \"../hooks/useLock\";\nimport { isValidateOpenKey } from \"../utils/keyUtil\";\nimport MultipleSelector from \"./MultipleSelector\";\nimport SingleSelector from \"./SingleSelector\";\nvar Selector = function Selector(props, ref) {\n  var inputRef = useRef(null);\n  var compositionStatusRef = useRef(false);\n  var prefixCls = props.prefixCls,\n    open = props.open,\n    mode = props.mode,\n    showSearch = props.showSearch,\n    tokenWithEnter = props.tokenWithEnter,\n    disabled = props.disabled,\n    prefix = props.prefix,\n    autoClearSearchValue = props.autoClearSearchValue,\n    onSearch = props.onSearch,\n    onSearchSubmit = props.onSearchSubmit,\n    onToggleOpen = props.onToggleOpen,\n    onInputKeyDown = props.onInputKeyDown,\n    onInputBlur = props.onInputBlur,\n    domRef = props.domRef;\n\n  // ======================= Ref =======================\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus(options) {\n        inputRef.current.focus(options);\n      },\n      blur: function blur() {\n        inputRef.current.blur();\n      }\n    };\n  });\n\n  // ====================== Input ======================\n  var _useLock = useLock(0),\n    _useLock2 = _slicedToArray(_useLock, 2),\n    getInputMouseDown = _useLock2[0],\n    setInputMouseDown = _useLock2[1];\n  var onInternalInputKeyDown = function onInternalInputKeyDown(event) {\n    var which = event.which;\n\n    // Compatible with multiple lines in TextArea\n    var isTextAreaElement = inputRef.current instanceof HTMLTextAreaElement;\n    if (!isTextAreaElement && open && (which === KeyCode.UP || which === KeyCode.DOWN)) {\n      event.preventDefault();\n    }\n    if (onInputKeyDown) {\n      onInputKeyDown(event);\n    }\n    if (which === KeyCode.ENTER && mode === 'tags' && !compositionStatusRef.current && !open) {\n      // When menu isn't open, OptionList won't trigger a value change\n      // So when enter is pressed, the tag's input value should be emitted here to let selector know\n      onSearchSubmit === null || onSearchSubmit === void 0 || onSearchSubmit(event.target.value);\n    }\n    // Move within the text box\n    if (isTextAreaElement && !open && ~[KeyCode.UP, KeyCode.DOWN, KeyCode.LEFT, KeyCode.RIGHT].indexOf(which)) {\n      return;\n    }\n    if (isValidateOpenKey(which)) {\n      onToggleOpen(true);\n    }\n  };\n\n  /**\n   * We can not use `findDOMNode` sine it will get warning,\n   * have to use timer to check if is input element.\n   */\n  var onInternalInputMouseDown = function onInternalInputMouseDown() {\n    setInputMouseDown(true);\n  };\n\n  // When paste come, ignore next onChange\n  var pastedTextRef = useRef(null);\n  var triggerOnSearch = function triggerOnSearch(value) {\n    if (onSearch(value, true, compositionStatusRef.current) !== false) {\n      onToggleOpen(true);\n    }\n  };\n  var onInputCompositionStart = function onInputCompositionStart() {\n    compositionStatusRef.current = true;\n  };\n  var onInputCompositionEnd = function onInputCompositionEnd(e) {\n    compositionStatusRef.current = false;\n\n    // Trigger search again to support `tokenSeparators` with typewriting\n    if (mode !== 'combobox') {\n      triggerOnSearch(e.target.value);\n    }\n  };\n  var onInputChange = function onInputChange(event) {\n    var value = event.target.value;\n\n    // Pasted text should replace back to origin content\n    if (tokenWithEnter && pastedTextRef.current && /[\\r\\n]/.test(pastedTextRef.current)) {\n      // CRLF will be treated as a single space for input element\n      var replacedText = pastedTextRef.current.replace(/[\\r\\n]+$/, '').replace(/\\r\\n/g, ' ').replace(/[\\r\\n]/g, ' ');\n      value = value.replace(replacedText, pastedTextRef.current);\n    }\n    pastedTextRef.current = null;\n    triggerOnSearch(value);\n  };\n  var onInputPaste = function onInputPaste(e) {\n    var clipboardData = e.clipboardData;\n    var value = clipboardData === null || clipboardData === void 0 ? void 0 : clipboardData.getData('text');\n    pastedTextRef.current = value || '';\n  };\n  var onClick = function onClick(_ref) {\n    var target = _ref.target;\n    if (target !== inputRef.current) {\n      // Should focus input if click the selector\n      var isIE = document.body.style.msTouchAction !== undefined;\n      if (isIE) {\n        setTimeout(function () {\n          inputRef.current.focus();\n        });\n      } else {\n        inputRef.current.focus();\n      }\n    }\n  };\n  var onMouseDown = function onMouseDown(event) {\n    var inputMouseDown = getInputMouseDown();\n\n    // when mode is combobox and it is disabled, don't prevent default behavior\n    // https://github.com/ant-design/ant-design/issues/37320\n    // https://github.com/ant-design/ant-design/issues/48281\n    if (event.target !== inputRef.current && !inputMouseDown && !(mode === 'combobox' && disabled)) {\n      event.preventDefault();\n    }\n    if (mode !== 'combobox' && (!showSearch || !inputMouseDown) || !open) {\n      if (open && autoClearSearchValue !== false) {\n        onSearch('', true, false);\n      }\n      onToggleOpen();\n    }\n  };\n\n  // ================= Inner Selector ==================\n  var sharedProps = {\n    inputRef: inputRef,\n    onInputKeyDown: onInternalInputKeyDown,\n    onInputMouseDown: onInternalInputMouseDown,\n    onInputChange: onInputChange,\n    onInputPaste: onInputPaste,\n    onInputCompositionStart: onInputCompositionStart,\n    onInputCompositionEnd: onInputCompositionEnd,\n    onInputBlur: onInputBlur\n  };\n  var selectNode = mode === 'multiple' || mode === 'tags' ? /*#__PURE__*/React.createElement(MultipleSelector, _extends({}, props, sharedProps)) : /*#__PURE__*/React.createElement(SingleSelector, _extends({}, props, sharedProps));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: domRef,\n    className: \"\".concat(prefixCls, \"-selector\"),\n    onClick: onClick,\n    onMouseDown: onMouseDown\n  }, prefix && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-prefix\")\n  }, prefix), selectNode);\n};\nvar ForwardSelector = /*#__PURE__*/React.forwardRef(Selector);\nif (process.env.NODE_ENV !== 'production') {\n  ForwardSelector.displayName = 'Selector';\n}\nexport default ForwardSelector;"]},"metadata":{},"sourceType":"module"}