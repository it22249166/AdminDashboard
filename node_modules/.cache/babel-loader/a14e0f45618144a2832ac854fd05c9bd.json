{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport CascaderContext from \"../context\";\n/**\n * Control the active open options path.\n */\n\nvar useActive = function useActive(multiple, open) {\n  var _React$useContext = React.useContext(CascaderContext),\n      values = _React$useContext.values;\n\n  var firstValueCells = values[0]; // Record current dropdown active options\n  // This also control the open status\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeValueCells = _React$useState2[0],\n      setActiveValueCells = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (!multiple) {\n      setActiveValueCells(firstValueCells || []);\n    }\n  },\n  /* eslint-disable react-hooks/exhaustive-deps */\n  [open, firstValueCells]\n  /* eslint-enable react-hooks/exhaustive-deps */\n  );\n  return [activeValueCells, setActiveValueCells];\n};\n\nexport default useActive;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-cascader/es/OptionList/useActive.js"],"names":["_slicedToArray","React","CascaderContext","useActive","multiple","open","_React$useContext","useContext","values","firstValueCells","_React$useState","useState","_React$useState2","activeValueCells","setActiveValueCells","useEffect"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,YAA5B;AAEA;AACA;AACA;;AACA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AACjD,MAAIC,iBAAiB,GAAGL,KAAK,CAACM,UAAN,CAAiBL,eAAjB,CAAxB;AAAA,MACEM,MAAM,GAAGF,iBAAiB,CAACE,MAD7B;;AAEA,MAAIC,eAAe,GAAGD,MAAM,CAAC,CAAD,CAA5B,CAHiD,CAKjD;AACA;;AACA,MAAIE,eAAe,GAAGT,KAAK,CAACU,QAAN,CAAe,EAAf,CAAtB;AAAA,MACEC,gBAAgB,GAAGZ,cAAc,CAACU,eAAD,EAAkB,CAAlB,CADnC;AAAA,MAEEG,gBAAgB,GAAGD,gBAAgB,CAAC,CAAD,CAFrC;AAAA,MAGEE,mBAAmB,GAAGF,gBAAgB,CAAC,CAAD,CAHxC;;AAIAX,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAY;AAC1B,QAAI,CAACX,QAAL,EAAe;AACbU,MAAAA,mBAAmB,CAACL,eAAe,IAAI,EAApB,CAAnB;AACD;AACF,GAJD;AAIG;AACH,GAACJ,IAAD,EAAOI,eAAP;AACA;AANA;AAQA,SAAO,CAACI,gBAAD,EAAmBC,mBAAnB,CAAP;AACD,CApBD;;AAqBA,eAAeX,SAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport CascaderContext from \"../context\";\n\n/**\n * Control the active open options path.\n */\nvar useActive = function useActive(multiple, open) {\n  var _React$useContext = React.useContext(CascaderContext),\n    values = _React$useContext.values;\n  var firstValueCells = values[0];\n\n  // Record current dropdown active options\n  // This also control the open status\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    activeValueCells = _React$useState2[0],\n    setActiveValueCells = _React$useState2[1];\n  React.useEffect(function () {\n    if (!multiple) {\n      setActiveValueCells(firstValueCells || []);\n    }\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [open, firstValueCells]\n  /* eslint-enable react-hooks/exhaustive-deps */);\n\n  return [activeValueCells, setActiveValueCells];\n};\nexport default useActive;"]},"metadata":{},"sourceType":"module"}