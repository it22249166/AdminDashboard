{"ast":null,"code":"import { responsiveArray } from '../../_util/responsiveObserver';\nexport default function useGutter(gutter, screens) {\n  const results = [undefined, undefined];\n  const normalizedGutter = Array.isArray(gutter) ? gutter : [gutter, undefined]; // By default use as `xs`\n\n  const mergedScreens = screens || {\n    xs: true,\n    sm: true,\n    md: true,\n    lg: true,\n    xl: true,\n    xxl: true\n  };\n  normalizedGutter.forEach((g, index) => {\n    if (typeof g === 'object' && g !== null) {\n      for (let i = 0; i < responsiveArray.length; i++) {\n        const breakpoint = responsiveArray[i];\n\n        if (mergedScreens[breakpoint] && g[breakpoint] !== undefined) {\n          results[index] = g[breakpoint];\n          break;\n        }\n      }\n    } else {\n      results[index] = g;\n    }\n  });\n  return results;\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/grid/hooks/useGutter.js"],"names":["responsiveArray","useGutter","gutter","screens","results","undefined","normalizedGutter","Array","isArray","mergedScreens","xs","sm","md","lg","xl","xxl","forEach","g","index","i","length","breakpoint"],"mappings":"AAAA,SAASA,eAAT,QAAgC,gCAAhC;AACA,eAAe,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,OAA3B,EAAoC;AACjD,QAAMC,OAAO,GAAG,CAACC,SAAD,EAAYA,SAAZ,CAAhB;AACA,QAAMC,gBAAgB,GAAGC,KAAK,CAACC,OAAN,CAAcN,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,EAASG,SAAT,CAA1D,CAFiD,CAGjD;;AACA,QAAMI,aAAa,GAAGN,OAAO,IAAI;AAC/BO,IAAAA,EAAE,EAAE,IAD2B;AAE/BC,IAAAA,EAAE,EAAE,IAF2B;AAG/BC,IAAAA,EAAE,EAAE,IAH2B;AAI/BC,IAAAA,EAAE,EAAE,IAJ2B;AAK/BC,IAAAA,EAAE,EAAE,IAL2B;AAM/BC,IAAAA,GAAG,EAAE;AAN0B,GAAjC;AAQAT,EAAAA,gBAAgB,CAACU,OAAjB,CAAyB,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACrC,QAAI,OAAOD,CAAP,KAAa,QAAb,IAAyBA,CAAC,KAAK,IAAnC,EAAyC;AACvC,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,eAAe,CAACoB,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,cAAME,UAAU,GAAGrB,eAAe,CAACmB,CAAD,CAAlC;;AACA,YAAIV,aAAa,CAACY,UAAD,CAAb,IAA6BJ,CAAC,CAACI,UAAD,CAAD,KAAkBhB,SAAnD,EAA8D;AAC5DD,UAAAA,OAAO,CAACc,KAAD,CAAP,GAAiBD,CAAC,CAACI,UAAD,CAAlB;AACA;AACD;AACF;AACF,KARD,MAQO;AACLjB,MAAAA,OAAO,CAACc,KAAD,CAAP,GAAiBD,CAAjB;AACD;AACF,GAZD;AAaA,SAAOb,OAAP;AACD","sourcesContent":["import { responsiveArray } from '../../_util/responsiveObserver';\nexport default function useGutter(gutter, screens) {\n  const results = [undefined, undefined];\n  const normalizedGutter = Array.isArray(gutter) ? gutter : [gutter, undefined];\n  // By default use as `xs`\n  const mergedScreens = screens || {\n    xs: true,\n    sm: true,\n    md: true,\n    lg: true,\n    xl: true,\n    xxl: true\n  };\n  normalizedGutter.forEach((g, index) => {\n    if (typeof g === 'object' && g !== null) {\n      for (let i = 0; i < responsiveArray.length; i++) {\n        const breakpoint = responsiveArray[i];\n        if (mergedScreens[breakpoint] && g[breakpoint] !== undefined) {\n          results[index] = g[breakpoint];\n          break;\n        }\n      }\n    } else {\n      results[index] = g;\n    }\n  });\n  return results;\n}"]},"metadata":{},"sourceType":"module"}