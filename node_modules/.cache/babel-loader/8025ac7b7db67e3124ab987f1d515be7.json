{"ast":null,"code":"import rules from \"../rule\";\nimport { isEmptyValue } from \"../util\";\n\nvar date = function date(rule, value, callback, source, options) {\n  // console.log('integer rule called %j', rule);\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field); // console.log('validate on %s value', value);\n\n  if (validate) {\n    if (isEmptyValue(value, 'date') && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (!isEmptyValue(value, 'date')) {\n      var dateObject;\n\n      if (value instanceof Date) {\n        dateObject = value;\n      } else {\n        dateObject = new Date(value);\n      }\n\n      rules.type(rule, dateObject, source, errors, options);\n\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n\n  callback(errors);\n};\n\nexport default date;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@rc-component/async-validator/es/validator/date.js"],"names":["rules","isEmptyValue","date","rule","value","callback","source","options","errors","validate","required","hasOwnProperty","field","dateObject","Date","type","range","getTime"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,YAAT,QAA6B,SAA7B;;AACA,IAAIC,IAAI,GAAG,SAASA,IAAT,CAAcC,IAAd,EAAoBC,KAApB,EAA2BC,QAA3B,EAAqCC,MAArC,EAA6CC,OAA7C,EAAsD;AAC/D;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,QAAQ,GAAGN,IAAI,CAACO,QAAL,IAAiB,CAACP,IAAI,CAACO,QAAN,IAAkBJ,MAAM,CAACK,cAAP,CAAsBR,IAAI,CAACS,KAA3B,CAAlD,CAH+D,CAI/D;;AACA,MAAIH,QAAJ,EAAc;AACZ,QAAIR,YAAY,CAACG,KAAD,EAAQ,MAAR,CAAZ,IAA+B,CAACD,IAAI,CAACO,QAAzC,EAAmD;AACjD,aAAOL,QAAQ,EAAf;AACD;;AACDL,IAAAA,KAAK,CAACU,QAAN,CAAeP,IAAf,EAAqBC,KAArB,EAA4BE,MAA5B,EAAoCE,MAApC,EAA4CD,OAA5C;;AACA,QAAI,CAACN,YAAY,CAACG,KAAD,EAAQ,MAAR,CAAjB,EAAkC;AAChC,UAAIS,UAAJ;;AACA,UAAIT,KAAK,YAAYU,IAArB,EAA2B;AACzBD,QAAAA,UAAU,GAAGT,KAAb;AACD,OAFD,MAEO;AACLS,QAAAA,UAAU,GAAG,IAAIC,IAAJ,CAASV,KAAT,CAAb;AACD;;AACDJ,MAAAA,KAAK,CAACe,IAAN,CAAWZ,IAAX,EAAiBU,UAAjB,EAA6BP,MAA7B,EAAqCE,MAArC,EAA6CD,OAA7C;;AACA,UAAIM,UAAJ,EAAgB;AACdb,QAAAA,KAAK,CAACgB,KAAN,CAAYb,IAAZ,EAAkBU,UAAU,CAACI,OAAX,EAAlB,EAAwCX,MAAxC,EAAgDE,MAAhD,EAAwDD,OAAxD;AACD;AACF;AACF;;AACDF,EAAAA,QAAQ,CAACG,MAAD,CAAR;AACD,CAxBD;;AAyBA,eAAeN,IAAf","sourcesContent":["import rules from \"../rule\";\nimport { isEmptyValue } from \"../util\";\nvar date = function date(rule, value, callback, source, options) {\n  // console.log('integer rule called %j', rule);\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  // console.log('validate on %s value', value);\n  if (validate) {\n    if (isEmptyValue(value, 'date') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'date')) {\n      var dateObject;\n      if (value instanceof Date) {\n        dateObject = value;\n      } else {\n        dateObject = new Date(value);\n      }\n      rules.type(rule, dateObject, source, errors, options);\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\nexport default date;"]},"metadata":{},"sourceType":"module"}