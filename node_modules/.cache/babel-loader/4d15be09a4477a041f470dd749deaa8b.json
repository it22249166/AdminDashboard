{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport addEventListener from \"rc-util/es/Dom/addEventListener\";\nimport getScrollBarSize from \"rc-util/es/getScrollBarSize\";\nimport * as React from 'react';\nimport TableContext from \"./context/TableContext\";\nimport { useLayoutState } from \"./hooks/useFrame\";\nimport raf from \"rc-util/es/raf\";\nimport { getOffset } from \"./utils/offsetUtil\";\nimport { getDOM } from \"rc-util/es/Dom/findDOMNode\";\n\nvar StickyScrollBar = function StickyScrollBar(_ref, ref) {\n  var _scrollBodyRef$curren, _scrollBodyRef$curren2;\n\n  var scrollBodyRef = _ref.scrollBodyRef,\n      onScroll = _ref.onScroll,\n      offsetScroll = _ref.offsetScroll,\n      container = _ref.container,\n      direction = _ref.direction;\n  var prefixCls = useContext(TableContext, 'prefixCls');\n  var bodyScrollWidth = ((_scrollBodyRef$curren = scrollBodyRef.current) === null || _scrollBodyRef$curren === void 0 ? void 0 : _scrollBodyRef$curren.scrollWidth) || 0;\n  var bodyWidth = ((_scrollBodyRef$curren2 = scrollBodyRef.current) === null || _scrollBodyRef$curren2 === void 0 ? void 0 : _scrollBodyRef$curren2.clientWidth) || 0;\n  var scrollBarWidth = bodyScrollWidth && bodyWidth * (bodyWidth / bodyScrollWidth);\n  var scrollBarRef = React.useRef();\n\n  var _useLayoutState = useLayoutState({\n    scrollLeft: 0,\n    isHiddenScrollBar: true\n  }),\n      _useLayoutState2 = _slicedToArray(_useLayoutState, 2),\n      scrollState = _useLayoutState2[0],\n      setScrollState = _useLayoutState2[1];\n\n  var refState = React.useRef({\n    delta: 0,\n    x: 0\n  });\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isActive = _React$useState2[0],\n      setActive = _React$useState2[1];\n\n  var rafRef = React.useRef(null);\n  React.useEffect(function () {\n    return function () {\n      raf.cancel(rafRef.current);\n    };\n  }, []);\n\n  var onMouseUp = function onMouseUp() {\n    setActive(false);\n  };\n\n  var onMouseDown = function onMouseDown(event) {\n    event.persist();\n    refState.current.delta = event.pageX - scrollState.scrollLeft;\n    refState.current.x = 0;\n    setActive(true);\n    event.preventDefault();\n  };\n\n  var onMouseMove = function onMouseMove(event) {\n    var _window; // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n\n\n    var _ref2 = event || ((_window = window) === null || _window === void 0 ? void 0 : _window.event),\n        buttons = _ref2.buttons;\n\n    if (!isActive || buttons === 0) {\n      // If out body mouse up, we can set isActive false when mouse move\n      if (isActive) {\n        setActive(false);\n      }\n\n      return;\n    }\n\n    var left = refState.current.x + event.pageX - refState.current.x - refState.current.delta;\n    var isRTL = direction === 'rtl'; // Limit scroll range\n\n    left = Math.max(isRTL ? scrollBarWidth - bodyWidth : 0, Math.min(isRTL ? 0 : bodyWidth - scrollBarWidth, left)); // Calculate the scroll position and update\n\n    var shouldScroll = !isRTL || Math.abs(left) + Math.abs(scrollBarWidth) < bodyWidth;\n\n    if (shouldScroll) {\n      onScroll({\n        scrollLeft: left / bodyWidth * (bodyScrollWidth + 2)\n      });\n      refState.current.x = event.pageX;\n    }\n  };\n\n  var checkScrollBarVisible = function checkScrollBarVisible() {\n    raf.cancel(rafRef.current);\n    rafRef.current = raf(function () {\n      if (!scrollBodyRef.current) {\n        return;\n      }\n\n      var tableOffsetTop = getOffset(scrollBodyRef.current).top;\n      var tableBottomOffset = tableOffsetTop + scrollBodyRef.current.offsetHeight;\n      var currentClientOffset = container === window ? document.documentElement.scrollTop + window.innerHeight : getOffset(container).top + container.clientHeight;\n\n      if (tableBottomOffset - getScrollBarSize() <= currentClientOffset || tableOffsetTop >= currentClientOffset - offsetScroll) {\n        setScrollState(function (state) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isHiddenScrollBar: true\n          });\n        });\n      } else {\n        setScrollState(function (state) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isHiddenScrollBar: false\n          });\n        });\n      }\n    });\n  };\n\n  var setScrollLeft = function setScrollLeft(left) {\n    setScrollState(function (state) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        scrollLeft: left / bodyScrollWidth * bodyWidth || 0\n      });\n    });\n  };\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      setScrollLeft: setScrollLeft,\n      checkScrollBarVisible: checkScrollBarVisible\n    };\n  });\n  React.useEffect(function () {\n    var onMouseUpListener = addEventListener(document.body, 'mouseup', onMouseUp, false);\n    var onMouseMoveListener = addEventListener(document.body, 'mousemove', onMouseMove, false);\n    checkScrollBarVisible();\n    return function () {\n      onMouseUpListener.remove();\n      onMouseMoveListener.remove();\n    };\n  }, [scrollBarWidth, isActive]); // Loop for scroll event check\n\n  React.useEffect(function () {\n    if (!scrollBodyRef.current) return;\n    var scrollParents = [];\n    var parent = getDOM(scrollBodyRef.current);\n\n    while (parent) {\n      scrollParents.push(parent);\n      parent = parent.parentElement;\n    }\n\n    scrollParents.forEach(function (p) {\n      return p.addEventListener('scroll', checkScrollBarVisible, false);\n    });\n    window.addEventListener('resize', checkScrollBarVisible, false);\n    window.addEventListener('scroll', checkScrollBarVisible, false);\n    container.addEventListener('scroll', checkScrollBarVisible, false);\n    return function () {\n      scrollParents.forEach(function (p) {\n        return p.removeEventListener('scroll', checkScrollBarVisible);\n      });\n      window.removeEventListener('resize', checkScrollBarVisible);\n      window.removeEventListener('scroll', checkScrollBarVisible);\n      container.removeEventListener('scroll', checkScrollBarVisible);\n    };\n  }, [container]);\n  React.useEffect(function () {\n    if (!scrollState.isHiddenScrollBar) {\n      setScrollState(function (state) {\n        var bodyNode = scrollBodyRef.current;\n\n        if (!bodyNode) {\n          return state;\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          scrollLeft: bodyNode.scrollLeft / bodyNode.scrollWidth * bodyNode.clientWidth\n        });\n      });\n    }\n  }, [scrollState.isHiddenScrollBar]);\n\n  if (bodyScrollWidth <= bodyWidth || !scrollBarWidth || scrollState.isHiddenScrollBar) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: getScrollBarSize(),\n      width: bodyWidth,\n      bottom: offsetScroll\n    },\n    className: \"\".concat(prefixCls, \"-sticky-scroll\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: onMouseDown,\n    ref: scrollBarRef,\n    className: classNames(\"\".concat(prefixCls, \"-sticky-scroll-bar\"), _defineProperty({}, \"\".concat(prefixCls, \"-sticky-scroll-bar-active\"), isActive)),\n    style: {\n      width: \"\".concat(scrollBarWidth, \"px\"),\n      transform: \"translate3d(\".concat(scrollState.scrollLeft, \"px, 0, 0)\")\n    }\n  }));\n};\n\nexport default /*#__PURE__*/React.forwardRef(StickyScrollBar);","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-table/es/stickyScrollBar.js"],"names":["_defineProperty","_objectSpread","_slicedToArray","useContext","classNames","addEventListener","getScrollBarSize","React","TableContext","useLayoutState","raf","getOffset","getDOM","StickyScrollBar","_ref","ref","_scrollBodyRef$curren","_scrollBodyRef$curren2","scrollBodyRef","onScroll","offsetScroll","container","direction","prefixCls","bodyScrollWidth","current","scrollWidth","bodyWidth","clientWidth","scrollBarWidth","scrollBarRef","useRef","_useLayoutState","scrollLeft","isHiddenScrollBar","_useLayoutState2","scrollState","setScrollState","refState","delta","x","_React$useState","useState","_React$useState2","isActive","setActive","rafRef","useEffect","cancel","onMouseUp","onMouseDown","event","persist","pageX","preventDefault","onMouseMove","_window","_ref2","window","buttons","left","isRTL","Math","max","min","shouldScroll","abs","checkScrollBarVisible","tableOffsetTop","top","tableBottomOffset","offsetHeight","currentClientOffset","document","documentElement","scrollTop","innerHeight","clientHeight","state","setScrollLeft","useImperativeHandle","onMouseUpListener","body","onMouseMoveListener","remove","scrollParents","parent","push","parentElement","forEach","p","removeEventListener","bodyNode","createElement","style","height","width","bottom","className","concat","transform","forwardRef"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport addEventListener from \"rc-util/es/Dom/addEventListener\";\nimport getScrollBarSize from \"rc-util/es/getScrollBarSize\";\nimport * as React from 'react';\nimport TableContext from \"./context/TableContext\";\nimport { useLayoutState } from \"./hooks/useFrame\";\nimport raf from \"rc-util/es/raf\";\nimport { getOffset } from \"./utils/offsetUtil\";\nimport { getDOM } from \"rc-util/es/Dom/findDOMNode\";\nvar StickyScrollBar = function StickyScrollBar(_ref, ref) {\n  var _scrollBodyRef$curren, _scrollBodyRef$curren2;\n  var scrollBodyRef = _ref.scrollBodyRef,\n    onScroll = _ref.onScroll,\n    offsetScroll = _ref.offsetScroll,\n    container = _ref.container,\n    direction = _ref.direction;\n  var prefixCls = useContext(TableContext, 'prefixCls');\n  var bodyScrollWidth = ((_scrollBodyRef$curren = scrollBodyRef.current) === null || _scrollBodyRef$curren === void 0 ? void 0 : _scrollBodyRef$curren.scrollWidth) || 0;\n  var bodyWidth = ((_scrollBodyRef$curren2 = scrollBodyRef.current) === null || _scrollBodyRef$curren2 === void 0 ? void 0 : _scrollBodyRef$curren2.clientWidth) || 0;\n  var scrollBarWidth = bodyScrollWidth && bodyWidth * (bodyWidth / bodyScrollWidth);\n  var scrollBarRef = React.useRef();\n  var _useLayoutState = useLayoutState({\n      scrollLeft: 0,\n      isHiddenScrollBar: true\n    }),\n    _useLayoutState2 = _slicedToArray(_useLayoutState, 2),\n    scrollState = _useLayoutState2[0],\n    setScrollState = _useLayoutState2[1];\n  var refState = React.useRef({\n    delta: 0,\n    x: 0\n  });\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isActive = _React$useState2[0],\n    setActive = _React$useState2[1];\n  var rafRef = React.useRef(null);\n  React.useEffect(function () {\n    return function () {\n      raf.cancel(rafRef.current);\n    };\n  }, []);\n  var onMouseUp = function onMouseUp() {\n    setActive(false);\n  };\n  var onMouseDown = function onMouseDown(event) {\n    event.persist();\n    refState.current.delta = event.pageX - scrollState.scrollLeft;\n    refState.current.x = 0;\n    setActive(true);\n    event.preventDefault();\n  };\n  var onMouseMove = function onMouseMove(event) {\n    var _window;\n    // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n    var _ref2 = event || ((_window = window) === null || _window === void 0 ? void 0 : _window.event),\n      buttons = _ref2.buttons;\n    if (!isActive || buttons === 0) {\n      // If out body mouse up, we can set isActive false when mouse move\n      if (isActive) {\n        setActive(false);\n      }\n      return;\n    }\n    var left = refState.current.x + event.pageX - refState.current.x - refState.current.delta;\n    var isRTL = direction === 'rtl';\n    // Limit scroll range\n    left = Math.max(isRTL ? scrollBarWidth - bodyWidth : 0, Math.min(isRTL ? 0 : bodyWidth - scrollBarWidth, left));\n    // Calculate the scroll position and update\n    var shouldScroll = !isRTL || Math.abs(left) + Math.abs(scrollBarWidth) < bodyWidth;\n    if (shouldScroll) {\n      onScroll({\n        scrollLeft: left / bodyWidth * (bodyScrollWidth + 2)\n      });\n      refState.current.x = event.pageX;\n    }\n  };\n  var checkScrollBarVisible = function checkScrollBarVisible() {\n    raf.cancel(rafRef.current);\n    rafRef.current = raf(function () {\n      if (!scrollBodyRef.current) {\n        return;\n      }\n      var tableOffsetTop = getOffset(scrollBodyRef.current).top;\n      var tableBottomOffset = tableOffsetTop + scrollBodyRef.current.offsetHeight;\n      var currentClientOffset = container === window ? document.documentElement.scrollTop + window.innerHeight : getOffset(container).top + container.clientHeight;\n      if (tableBottomOffset - getScrollBarSize() <= currentClientOffset || tableOffsetTop >= currentClientOffset - offsetScroll) {\n        setScrollState(function (state) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isHiddenScrollBar: true\n          });\n        });\n      } else {\n        setScrollState(function (state) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isHiddenScrollBar: false\n          });\n        });\n      }\n    });\n  };\n  var setScrollLeft = function setScrollLeft(left) {\n    setScrollState(function (state) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        scrollLeft: left / bodyScrollWidth * bodyWidth || 0\n      });\n    });\n  };\n  React.useImperativeHandle(ref, function () {\n    return {\n      setScrollLeft: setScrollLeft,\n      checkScrollBarVisible: checkScrollBarVisible\n    };\n  });\n  React.useEffect(function () {\n    var onMouseUpListener = addEventListener(document.body, 'mouseup', onMouseUp, false);\n    var onMouseMoveListener = addEventListener(document.body, 'mousemove', onMouseMove, false);\n    checkScrollBarVisible();\n    return function () {\n      onMouseUpListener.remove();\n      onMouseMoveListener.remove();\n    };\n  }, [scrollBarWidth, isActive]);\n\n  // Loop for scroll event check\n  React.useEffect(function () {\n    if (!scrollBodyRef.current) return;\n    var scrollParents = [];\n    var parent = getDOM(scrollBodyRef.current);\n    while (parent) {\n      scrollParents.push(parent);\n      parent = parent.parentElement;\n    }\n    scrollParents.forEach(function (p) {\n      return p.addEventListener('scroll', checkScrollBarVisible, false);\n    });\n    window.addEventListener('resize', checkScrollBarVisible, false);\n    window.addEventListener('scroll', checkScrollBarVisible, false);\n    container.addEventListener('scroll', checkScrollBarVisible, false);\n    return function () {\n      scrollParents.forEach(function (p) {\n        return p.removeEventListener('scroll', checkScrollBarVisible);\n      });\n      window.removeEventListener('resize', checkScrollBarVisible);\n      window.removeEventListener('scroll', checkScrollBarVisible);\n      container.removeEventListener('scroll', checkScrollBarVisible);\n    };\n  }, [container]);\n  React.useEffect(function () {\n    if (!scrollState.isHiddenScrollBar) {\n      setScrollState(function (state) {\n        var bodyNode = scrollBodyRef.current;\n        if (!bodyNode) {\n          return state;\n        }\n        return _objectSpread(_objectSpread({}, state), {}, {\n          scrollLeft: bodyNode.scrollLeft / bodyNode.scrollWidth * bodyNode.clientWidth\n        });\n      });\n    }\n  }, [scrollState.isHiddenScrollBar]);\n  if (bodyScrollWidth <= bodyWidth || !scrollBarWidth || scrollState.isHiddenScrollBar) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: getScrollBarSize(),\n      width: bodyWidth,\n      bottom: offsetScroll\n    },\n    className: \"\".concat(prefixCls, \"-sticky-scroll\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: onMouseDown,\n    ref: scrollBarRef,\n    className: classNames(\"\".concat(prefixCls, \"-sticky-scroll-bar\"), _defineProperty({}, \"\".concat(prefixCls, \"-sticky-scroll-bar-active\"), isActive)),\n    style: {\n      width: \"\".concat(scrollBarWidth, \"px\"),\n      transform: \"translate3d(\".concat(scrollState.scrollLeft, \"px, 0, 0)\")\n    }\n  }));\n};\nexport default /*#__PURE__*/React.forwardRef(StickyScrollBar);"]},"metadata":{},"sourceType":"module"}