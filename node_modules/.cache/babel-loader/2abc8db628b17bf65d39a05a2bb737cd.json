{"ast":null,"code":"export function toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n\n  return Array.isArray(val) ? val : [val];\n}\nexport function getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n\n  return dom || needDom && defaultNode;\n}\n/**\n * Check for element is native ellipsis\n * ref:\n * - https://github.com/ant-design/ant-design/issues/50143\n * - https://github.com/ant-design/ant-design/issues/50414\n */\n\nexport function isEleEllipsis(ele) {\n  // Create a new div to get the size\n  const childDiv = document.createElement('em');\n  ele.appendChild(childDiv); // For test case\n\n  if (process.env.NODE_ENV !== 'production') {\n    childDiv.className = 'ant-typography-css-ellipsis-content-measure';\n  }\n\n  const rect = ele.getBoundingClientRect();\n  const childRect = childDiv.getBoundingClientRect(); // Reset\n\n  ele.removeChild(childDiv); // Range checker\n\n  return (// Horizontal out of range\n    rect.left > childRect.left || childRect.right > rect.right || // Vertical out of range\n    rect.top > childRect.top || childRect.bottom > rect.bottom\n  );\n}\nexport const isValidText = val => ['string', 'number'].includes(typeof val);","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/typography/Base/util.js"],"names":["toList","val","Array","isArray","getNode","dom","defaultNode","needDom","undefined","isEleEllipsis","ele","childDiv","document","createElement","appendChild","process","env","NODE_ENV","className","rect","getBoundingClientRect","childRect","removeChild","left","right","top","bottom","isValidText","includes"],"mappings":"AAAA,OAAO,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAC1B,MAAIA,GAAG,KAAK,KAAZ,EAAmB;AACjB,WAAO,CAAC,KAAD,EAAQ,KAAR,CAAP;AACD;;AACD,SAAOC,KAAK,CAACC,OAAN,CAAcF,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD,CAAlC;AACD;AACD,OAAO,SAASG,OAAT,CAAiBC,GAAjB,EAAsBC,WAAtB,EAAmCC,OAAnC,EAA4C;AACjD,MAAIF,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKG,SAA5B,EAAuC;AACrC,WAAOF,WAAP;AACD;;AACD,SAAOD,GAAG,IAAIE,OAAO,IAAID,WAAzB;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASG,aAAT,CAAuBC,GAAvB,EAA4B;AACjC;AACA,QAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAjB;AACAH,EAAAA,GAAG,CAACI,WAAJ,CAAgBH,QAAhB,EAHiC,CAIjC;;AACA,MAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCN,IAAAA,QAAQ,CAACO,SAAT,GAAqB,6CAArB;AACD;;AACD,QAAMC,IAAI,GAAGT,GAAG,CAACU,qBAAJ,EAAb;AACA,QAAMC,SAAS,GAAGV,QAAQ,CAACS,qBAAT,EAAlB,CATiC,CAUjC;;AACAV,EAAAA,GAAG,CAACY,WAAJ,CAAgBX,QAAhB,EAXiC,CAYjC;;AACA,SACE;AACAQ,IAAAA,IAAI,CAACI,IAAL,GAAYF,SAAS,CAACE,IAAtB,IAA8BF,SAAS,CAACG,KAAV,GAAkBL,IAAI,CAACK,KAArD,IACA;AACAL,IAAAA,IAAI,CAACM,GAAL,GAAWJ,SAAS,CAACI,GAFrB,IAE4BJ,SAAS,CAACK,MAAV,GAAmBP,IAAI,CAACO;AAJtD;AAMD;AACD,OAAO,MAAMC,WAAW,GAAG1B,GAAG,IAAI,CAAC,QAAD,EAAW,QAAX,EAAqB2B,QAArB,CAA8B,OAAO3B,GAArC,CAA3B","sourcesContent":["export function toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n  return Array.isArray(val) ? val : [val];\n}\nexport function getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n  return dom || needDom && defaultNode;\n}\n/**\n * Check for element is native ellipsis\n * ref:\n * - https://github.com/ant-design/ant-design/issues/50143\n * - https://github.com/ant-design/ant-design/issues/50414\n */\nexport function isEleEllipsis(ele) {\n  // Create a new div to get the size\n  const childDiv = document.createElement('em');\n  ele.appendChild(childDiv);\n  // For test case\n  if (process.env.NODE_ENV !== 'production') {\n    childDiv.className = 'ant-typography-css-ellipsis-content-measure';\n  }\n  const rect = ele.getBoundingClientRect();\n  const childRect = childDiv.getBoundingClientRect();\n  // Reset\n  ele.removeChild(childDiv);\n  // Range checker\n  return (\n    // Horizontal out of range\n    rect.left > childRect.left || childRect.right > rect.right ||\n    // Vertical out of range\n    rect.top > childRect.top || childRect.bottom > rect.bottom\n  );\n}\nexport const isValidText = val => ['string', 'number'].includes(typeof val);"]},"metadata":{},"sourceType":"module"}