{"ast":null,"code":"import { FastColor } from '@ant-design/fast-color';\nexport default function genColorMapToken(seed, _ref) {\n  let {\n    generateColorPalettes,\n    generateNeutralColorPalettes\n  } = _ref;\n  const {\n    colorSuccess: colorSuccessBase,\n    colorWarning: colorWarningBase,\n    colorError: colorErrorBase,\n    colorInfo: colorInfoBase,\n    colorPrimary: colorPrimaryBase,\n    colorBgBase,\n    colorTextBase\n  } = seed;\n  const primaryColors = generateColorPalettes(colorPrimaryBase);\n  const successColors = generateColorPalettes(colorSuccessBase);\n  const warningColors = generateColorPalettes(colorWarningBase);\n  const errorColors = generateColorPalettes(colorErrorBase);\n  const infoColors = generateColorPalettes(colorInfoBase);\n  const neutralColors = generateNeutralColorPalettes(colorBgBase, colorTextBase); // Color Link\n\n  const colorLink = seed.colorLink || seed.colorInfo;\n  const linkColors = generateColorPalettes(colorLink);\n  const colorErrorBgFilledHover = new FastColor(errorColors[1]).mix(new FastColor(errorColors[3]), 50).toHexString();\n  return Object.assign(Object.assign({}, neutralColors), {\n    colorPrimaryBg: primaryColors[1],\n    colorPrimaryBgHover: primaryColors[2],\n    colorPrimaryBorder: primaryColors[3],\n    colorPrimaryBorderHover: primaryColors[4],\n    colorPrimaryHover: primaryColors[5],\n    colorPrimary: primaryColors[6],\n    colorPrimaryActive: primaryColors[7],\n    colorPrimaryTextHover: primaryColors[8],\n    colorPrimaryText: primaryColors[9],\n    colorPrimaryTextActive: primaryColors[10],\n    colorSuccessBg: successColors[1],\n    colorSuccessBgHover: successColors[2],\n    colorSuccessBorder: successColors[3],\n    colorSuccessBorderHover: successColors[4],\n    colorSuccessHover: successColors[4],\n    colorSuccess: successColors[6],\n    colorSuccessActive: successColors[7],\n    colorSuccessTextHover: successColors[8],\n    colorSuccessText: successColors[9],\n    colorSuccessTextActive: successColors[10],\n    colorErrorBg: errorColors[1],\n    colorErrorBgHover: errorColors[2],\n    colorErrorBgFilledHover,\n    colorErrorBgActive: errorColors[3],\n    colorErrorBorder: errorColors[3],\n    colorErrorBorderHover: errorColors[4],\n    colorErrorHover: errorColors[5],\n    colorError: errorColors[6],\n    colorErrorActive: errorColors[7],\n    colorErrorTextHover: errorColors[8],\n    colorErrorText: errorColors[9],\n    colorErrorTextActive: errorColors[10],\n    colorWarningBg: warningColors[1],\n    colorWarningBgHover: warningColors[2],\n    colorWarningBorder: warningColors[3],\n    colorWarningBorderHover: warningColors[4],\n    colorWarningHover: warningColors[4],\n    colorWarning: warningColors[6],\n    colorWarningActive: warningColors[7],\n    colorWarningTextHover: warningColors[8],\n    colorWarningText: warningColors[9],\n    colorWarningTextActive: warningColors[10],\n    colorInfoBg: infoColors[1],\n    colorInfoBgHover: infoColors[2],\n    colorInfoBorder: infoColors[3],\n    colorInfoBorderHover: infoColors[4],\n    colorInfoHover: infoColors[4],\n    colorInfo: infoColors[6],\n    colorInfoActive: infoColors[7],\n    colorInfoTextHover: infoColors[8],\n    colorInfoText: infoColors[9],\n    colorInfoTextActive: infoColors[10],\n    colorLinkHover: linkColors[4],\n    colorLink: linkColors[6],\n    colorLinkActive: linkColors[7],\n    colorBgMask: new FastColor('#000').setA(0.45).toRgbString(),\n    colorWhite: '#fff'\n  });\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/theme/themes/shared/genColorMapToken.js"],"names":["FastColor","genColorMapToken","seed","_ref","generateColorPalettes","generateNeutralColorPalettes","colorSuccess","colorSuccessBase","colorWarning","colorWarningBase","colorError","colorErrorBase","colorInfo","colorInfoBase","colorPrimary","colorPrimaryBase","colorBgBase","colorTextBase","primaryColors","successColors","warningColors","errorColors","infoColors","neutralColors","colorLink","linkColors","colorErrorBgFilledHover","mix","toHexString","Object","assign","colorPrimaryBg","colorPrimaryBgHover","colorPrimaryBorder","colorPrimaryBorderHover","colorPrimaryHover","colorPrimaryActive","colorPrimaryTextHover","colorPrimaryText","colorPrimaryTextActive","colorSuccessBg","colorSuccessBgHover","colorSuccessBorder","colorSuccessBorderHover","colorSuccessHover","colorSuccessActive","colorSuccessTextHover","colorSuccessText","colorSuccessTextActive","colorErrorBg","colorErrorBgHover","colorErrorBgActive","colorErrorBorder","colorErrorBorderHover","colorErrorHover","colorErrorActive","colorErrorTextHover","colorErrorText","colorErrorTextActive","colorWarningBg","colorWarningBgHover","colorWarningBorder","colorWarningBorderHover","colorWarningHover","colorWarningActive","colorWarningTextHover","colorWarningText","colorWarningTextActive","colorInfoBg","colorInfoBgHover","colorInfoBorder","colorInfoBorderHover","colorInfoHover","colorInfoActive","colorInfoTextHover","colorInfoText","colorInfoTextActive","colorLinkHover","colorLinkActive","colorBgMask","setA","toRgbString","colorWhite"],"mappings":"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","sourcesContent":["import { FastColor } from '@ant-design/fast-color';\nexport default function genColorMapToken(seed, _ref) {\n  let {\n    generateColorPalettes,\n    generateNeutralColorPalettes\n  } = _ref;\n  const {\n    colorSuccess: colorSuccessBase,\n    colorWarning: colorWarningBase,\n    colorError: colorErrorBase,\n    colorInfo: colorInfoBase,\n    colorPrimary: colorPrimaryBase,\n    colorBgBase,\n    colorTextBase\n  } = seed;\n  const primaryColors = generateColorPalettes(colorPrimaryBase);\n  const successColors = generateColorPalettes(colorSuccessBase);\n  const warningColors = generateColorPalettes(colorWarningBase);\n  const errorColors = generateColorPalettes(colorErrorBase);\n  const infoColors = generateColorPalettes(colorInfoBase);\n  const neutralColors = generateNeutralColorPalettes(colorBgBase, colorTextBase);\n  // Color Link\n  const colorLink = seed.colorLink || seed.colorInfo;\n  const linkColors = generateColorPalettes(colorLink);\n  const colorErrorBgFilledHover = new FastColor(errorColors[1]).mix(new FastColor(errorColors[3]), 50).toHexString();\n  return Object.assign(Object.assign({}, neutralColors), {\n    colorPrimaryBg: primaryColors[1],\n    colorPrimaryBgHover: primaryColors[2],\n    colorPrimaryBorder: primaryColors[3],\n    colorPrimaryBorderHover: primaryColors[4],\n    colorPrimaryHover: primaryColors[5],\n    colorPrimary: primaryColors[6],\n    colorPrimaryActive: primaryColors[7],\n    colorPrimaryTextHover: primaryColors[8],\n    colorPrimaryText: primaryColors[9],\n    colorPrimaryTextActive: primaryColors[10],\n    colorSuccessBg: successColors[1],\n    colorSuccessBgHover: successColors[2],\n    colorSuccessBorder: successColors[3],\n    colorSuccessBorderHover: successColors[4],\n    colorSuccessHover: successColors[4],\n    colorSuccess: successColors[6],\n    colorSuccessActive: successColors[7],\n    colorSuccessTextHover: successColors[8],\n    colorSuccessText: successColors[9],\n    colorSuccessTextActive: successColors[10],\n    colorErrorBg: errorColors[1],\n    colorErrorBgHover: errorColors[2],\n    colorErrorBgFilledHover,\n    colorErrorBgActive: errorColors[3],\n    colorErrorBorder: errorColors[3],\n    colorErrorBorderHover: errorColors[4],\n    colorErrorHover: errorColors[5],\n    colorError: errorColors[6],\n    colorErrorActive: errorColors[7],\n    colorErrorTextHover: errorColors[8],\n    colorErrorText: errorColors[9],\n    colorErrorTextActive: errorColors[10],\n    colorWarningBg: warningColors[1],\n    colorWarningBgHover: warningColors[2],\n    colorWarningBorder: warningColors[3],\n    colorWarningBorderHover: warningColors[4],\n    colorWarningHover: warningColors[4],\n    colorWarning: warningColors[6],\n    colorWarningActive: warningColors[7],\n    colorWarningTextHover: warningColors[8],\n    colorWarningText: warningColors[9],\n    colorWarningTextActive: warningColors[10],\n    colorInfoBg: infoColors[1],\n    colorInfoBgHover: infoColors[2],\n    colorInfoBorder: infoColors[3],\n    colorInfoBorderHover: infoColors[4],\n    colorInfoHover: infoColors[4],\n    colorInfo: infoColors[6],\n    colorInfoActive: infoColors[7],\n    colorInfoTextHover: infoColors[8],\n    colorInfoText: infoColors[9],\n    colorInfoTextActive: infoColors[10],\n    colorLinkHover: linkColors[4],\n    colorLink: linkColors[6],\n    colorLinkActive: linkColors[7],\n    colorBgMask: new FastColor('#000').setA(0.45).toRgbString(),\n    colorWhite: '#fff'\n  });\n}"]},"metadata":{},"sourceType":"module"}