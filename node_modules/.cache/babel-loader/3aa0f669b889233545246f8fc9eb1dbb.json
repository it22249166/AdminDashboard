{"ast":null,"code":"\"use client\";\n\nimport React, { useMemo } from 'react';\nimport { ColorBlock, Color as RcColor } from '@rc-component/color-picker';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Collapse from '../../collapse';\nimport { useLocale } from '../../locale';\nimport { useToken } from '../../theme/internal';\nimport { generateColor } from '../util';\n\nconst genPresetColor = list => list.map(value => {\n  value.colors = value.colors.map(generateColor);\n  return value;\n});\n\nexport const isBright = (value, bgColorToken) => {\n  const {\n    r,\n    g,\n    b,\n    a\n  } = value.toRgb();\n  const hsv = new RcColor(value.toRgbString()).onBackground(bgColorToken).toHsv();\n\n  if (a <= 0.5) {\n    // Adapted to dark mode\n    return hsv.v > 0.5;\n  }\n\n  return r * 0.299 + g * 0.587 + b * 0.114 > 192;\n};\n\nconst genCollapsePanelKey = (preset, index) => {\n  var _a;\n\n  const mergedKey = (_a = preset.key) !== null && _a !== void 0 ? _a : index;\n  return `panel-${mergedKey}`;\n};\n\nconst ColorPresets = _ref => {\n  let {\n    prefixCls,\n    presets,\n    value: color,\n    onChange\n  } = _ref;\n  const [locale] = useLocale('ColorPicker');\n  const [, token] = useToken();\n  const [presetsValue] = useMergedState(genPresetColor(presets), {\n    value: genPresetColor(presets),\n    postState: genPresetColor\n  });\n  const colorPresetsPrefixCls = `${prefixCls}-presets`;\n  const activeKeys = useMemo(() => presetsValue.reduce((acc, preset, index) => {\n    const {\n      defaultOpen = true\n    } = preset;\n\n    if (defaultOpen) {\n      acc.push(genCollapsePanelKey(preset, index));\n    }\n\n    return acc;\n  }, []), [presetsValue]);\n\n  const handleClick = colorValue => {\n    onChange === null || onChange === void 0 ? void 0 : onChange(colorValue);\n  };\n\n  const items = presetsValue.map((preset, index) => {\n    var _a;\n\n    return {\n      key: genCollapsePanelKey(preset, index),\n      label: /*#__PURE__*/React.createElement(\"div\", {\n        className: `${colorPresetsPrefixCls}-label`\n      }, preset === null || preset === void 0 ? void 0 : preset.label),\n      children: /*#__PURE__*/React.createElement(\"div\", {\n        className: `${colorPresetsPrefixCls}-items`\n      }, Array.isArray(preset === null || preset === void 0 ? void 0 : preset.colors) && ((_a = preset.colors) === null || _a === void 0 ? void 0 : _a.length) > 0 ? preset.colors.map((presetColor, index) => /*#__PURE__*/React.createElement(ColorBlock // eslint-disable-next-line react/no-array-index-key\n      , {\n        // eslint-disable-next-line react/no-array-index-key\n        key: `preset-${index}-${presetColor.toHexString()}`,\n        color: generateColor(presetColor).toRgbString(),\n        prefixCls: prefixCls,\n        className: classNames(`${colorPresetsPrefixCls}-color`, {\n          [`${colorPresetsPrefixCls}-color-checked`]: presetColor.toHexString() === (color === null || color === void 0 ? void 0 : color.toHexString()),\n          [`${colorPresetsPrefixCls}-color-bright`]: isBright(presetColor, token.colorBgElevated)\n        }),\n        onClick: () => handleClick(presetColor)\n      })) : /*#__PURE__*/React.createElement(\"span\", {\n        className: `${colorPresetsPrefixCls}-empty`\n      }, locale.presetEmpty))\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: colorPresetsPrefixCls\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: activeKeys,\n    ghost: true,\n    items: items\n  }));\n};\n\nexport default ColorPresets;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/color-picker/components/ColorPresets.js"],"names":["React","useMemo","ColorBlock","Color","RcColor","classNames","useMergedState","Collapse","useLocale","useToken","generateColor","genPresetColor","list","map","value","colors","isBright","bgColorToken","r","g","b","a","toRgb","hsv","toRgbString","onBackground","toHsv","v","genCollapsePanelKey","preset","index","_a","mergedKey","key","ColorPresets","_ref","prefixCls","presets","color","onChange","locale","token","presetsValue","postState","colorPresetsPrefixCls","activeKeys","reduce","acc","defaultOpen","push","handleClick","colorValue","items","label","createElement","className","children","Array","isArray","length","presetColor","toHexString","colorBgElevated","onClick","presetEmpty","defaultActiveKey","ghost"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React, { useMemo } from 'react';\nimport { ColorBlock, Color as RcColor } from '@rc-component/color-picker';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Collapse from '../../collapse';\nimport { useLocale } from '../../locale';\nimport { useToken } from '../../theme/internal';\nimport { generateColor } from '../util';\nconst genPresetColor = list => list.map(value => {\n  value.colors = value.colors.map(generateColor);\n  return value;\n});\nexport const isBright = (value, bgColorToken) => {\n  const {\n    r,\n    g,\n    b,\n    a\n  } = value.toRgb();\n  const hsv = new RcColor(value.toRgbString()).onBackground(bgColorToken).toHsv();\n  if (a <= 0.5) {\n    // Adapted to dark mode\n    return hsv.v > 0.5;\n  }\n  return r * 0.299 + g * 0.587 + b * 0.114 > 192;\n};\nconst genCollapsePanelKey = (preset, index) => {\n  var _a;\n  const mergedKey = (_a = preset.key) !== null && _a !== void 0 ? _a : index;\n  return `panel-${mergedKey}`;\n};\nconst ColorPresets = _ref => {\n  let {\n    prefixCls,\n    presets,\n    value: color,\n    onChange\n  } = _ref;\n  const [locale] = useLocale('ColorPicker');\n  const [, token] = useToken();\n  const [presetsValue] = useMergedState(genPresetColor(presets), {\n    value: genPresetColor(presets),\n    postState: genPresetColor\n  });\n  const colorPresetsPrefixCls = `${prefixCls}-presets`;\n  const activeKeys = useMemo(() => presetsValue.reduce((acc, preset, index) => {\n    const {\n      defaultOpen = true\n    } = preset;\n    if (defaultOpen) {\n      acc.push(genCollapsePanelKey(preset, index));\n    }\n    return acc;\n  }, []), [presetsValue]);\n  const handleClick = colorValue => {\n    onChange === null || onChange === void 0 ? void 0 : onChange(colorValue);\n  };\n  const items = presetsValue.map((preset, index) => {\n    var _a;\n    return {\n      key: genCollapsePanelKey(preset, index),\n      label: /*#__PURE__*/React.createElement(\"div\", {\n        className: `${colorPresetsPrefixCls}-label`\n      }, preset === null || preset === void 0 ? void 0 : preset.label),\n      children: (/*#__PURE__*/React.createElement(\"div\", {\n        className: `${colorPresetsPrefixCls}-items`\n      }, Array.isArray(preset === null || preset === void 0 ? void 0 : preset.colors) && ((_a = preset.colors) === null || _a === void 0 ? void 0 : _a.length) > 0 ? preset.colors.map((presetColor, index) => (/*#__PURE__*/React.createElement(ColorBlock\n      // eslint-disable-next-line react/no-array-index-key\n      , {\n        // eslint-disable-next-line react/no-array-index-key\n        key: `preset-${index}-${presetColor.toHexString()}`,\n        color: generateColor(presetColor).toRgbString(),\n        prefixCls: prefixCls,\n        className: classNames(`${colorPresetsPrefixCls}-color`, {\n          [`${colorPresetsPrefixCls}-color-checked`]: presetColor.toHexString() === (color === null || color === void 0 ? void 0 : color.toHexString()),\n          [`${colorPresetsPrefixCls}-color-bright`]: isBright(presetColor, token.colorBgElevated)\n        }),\n        onClick: () => handleClick(presetColor)\n      }))) : (/*#__PURE__*/React.createElement(\"span\", {\n        className: `${colorPresetsPrefixCls}-empty`\n      }, locale.presetEmpty))))\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: colorPresetsPrefixCls\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: activeKeys,\n    ghost: true,\n    items: items\n  }));\n};\nexport default ColorPresets;"]},"metadata":{},"sourceType":"module"}