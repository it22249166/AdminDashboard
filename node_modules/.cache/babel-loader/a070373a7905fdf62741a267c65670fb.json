{"ast":null,"code":"\"use client\";\n\nimport React, { forwardRef } from 'react';\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport IconWrapper from './IconWrapper';\nconst InnerLoadingIcon = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    prefixCls,\n    className,\n    style,\n    iconClassName\n  } = props;\n  const mergedIconCls = classNames(`${prefixCls}-loading-icon`, className);\n  return /*#__PURE__*/React.createElement(IconWrapper, {\n    prefixCls: prefixCls,\n    className: mergedIconCls,\n    style: style,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: iconClassName\n  }));\n});\n\nconst getCollapsedWidth = () => ({\n  width: 0,\n  opacity: 0,\n  transform: 'scale(0)'\n});\n\nconst getRealWidth = node => ({\n  width: node.scrollWidth,\n  opacity: 1,\n  transform: 'scale(1)'\n});\n\nconst DefaultLoadingIcon = props => {\n  const {\n    prefixCls,\n    loading,\n    existIcon,\n    className,\n    style,\n    mount\n  } = props;\n  const visible = !!loading;\n\n  if (existIcon) {\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: className,\n      style: style\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    // Used for minus flex gap style only\n    motionName: `${prefixCls}-loading-icon-motion`,\n    motionAppear: !mount,\n    motionEnter: !mount,\n    motionLeave: !mount,\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, (_ref, ref) => {\n    let {\n      className: motionCls,\n      style: motionStyle\n    } = _ref;\n    const mergedStyle = Object.assign(Object.assign({}, style), motionStyle);\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: classNames(className, motionCls),\n      style: mergedStyle,\n      ref: ref\n    });\n  });\n};\n\nexport default DefaultLoadingIcon;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/button/DefaultLoadingIcon.js"],"names":["React","forwardRef","LoadingOutlined","classNames","CSSMotion","IconWrapper","InnerLoadingIcon","props","ref","prefixCls","className","style","iconClassName","mergedIconCls","createElement","getCollapsedWidth","width","opacity","transform","getRealWidth","node","scrollWidth","DefaultLoadingIcon","loading","existIcon","mount","visible","motionName","motionAppear","motionEnter","motionLeave","removeOnLeave","onAppearStart","onAppearActive","onEnterStart","onEnterActive","onLeaveStart","onLeaveActive","_ref","motionCls","motionStyle","mergedStyle","Object","assign"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React, { forwardRef } from 'react';\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport IconWrapper from './IconWrapper';\nconst InnerLoadingIcon = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    prefixCls,\n    className,\n    style,\n    iconClassName\n  } = props;\n  const mergedIconCls = classNames(`${prefixCls}-loading-icon`, className);\n  return /*#__PURE__*/React.createElement(IconWrapper, {\n    prefixCls: prefixCls,\n    className: mergedIconCls,\n    style: style,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: iconClassName\n  }));\n});\nconst getCollapsedWidth = () => ({\n  width: 0,\n  opacity: 0,\n  transform: 'scale(0)'\n});\nconst getRealWidth = node => ({\n  width: node.scrollWidth,\n  opacity: 1,\n  transform: 'scale(1)'\n});\nconst DefaultLoadingIcon = props => {\n  const {\n    prefixCls,\n    loading,\n    existIcon,\n    className,\n    style,\n    mount\n  } = props;\n  const visible = !!loading;\n  if (existIcon) {\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: className,\n      style: style\n    });\n  }\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    // Used for minus flex gap style only\n    motionName: `${prefixCls}-loading-icon-motion`,\n    motionAppear: !mount,\n    motionEnter: !mount,\n    motionLeave: !mount,\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, (_ref, ref) => {\n    let {\n      className: motionCls,\n      style: motionStyle\n    } = _ref;\n    const mergedStyle = Object.assign(Object.assign({}, style), motionStyle);\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: classNames(className, motionCls),\n      style: mergedStyle,\n      ref: ref\n    });\n  });\n};\nexport default DefaultLoadingIcon;"]},"metadata":{},"sourceType":"module"}