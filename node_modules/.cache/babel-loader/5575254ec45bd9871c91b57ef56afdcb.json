{"ast":null,"code":"\"use client\";\n\nimport { useRef } from 'react';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useForceUpdate from '../../_util/hooks/useForceUpdate';\nimport useResponsiveObserver from '../../_util/responsiveObserver';\n\nfunction useBreakpoint() {\n  let refreshOnChange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  let defaultScreens = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const screensRef = useRef(defaultScreens);\n  const forceUpdate = useForceUpdate();\n  const responsiveObserver = useResponsiveObserver();\n  useLayoutEffect(() => {\n    const token = responsiveObserver.subscribe(supportScreens => {\n      screensRef.current = supportScreens;\n\n      if (refreshOnChange) {\n        forceUpdate();\n      }\n    });\n    return () => responsiveObserver.unsubscribe(token);\n  }, []);\n  return screensRef.current;\n}\n\nexport default useBreakpoint;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/grid/hooks/useBreakpoint.js"],"names":["useRef","useLayoutEffect","useForceUpdate","useResponsiveObserver","useBreakpoint","refreshOnChange","arguments","length","undefined","defaultScreens","screensRef","forceUpdate","responsiveObserver","token","subscribe","supportScreens","current","unsubscribe"],"mappings":"AAAA;;AAEA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,qBAAP,MAAkC,gCAAlC;;AACA,SAASC,aAAT,GAAyB;AACvB,MAAIC,eAAe,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAA1F;AACA,MAAIG,cAAc,GAAGH,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAzF;AACA,QAAMI,UAAU,GAAGV,MAAM,CAACS,cAAD,CAAzB;AACA,QAAME,WAAW,GAAGT,cAAc,EAAlC;AACA,QAAMU,kBAAkB,GAAGT,qBAAqB,EAAhD;AACAF,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMY,KAAK,GAAGD,kBAAkB,CAACE,SAAnB,CAA6BC,cAAc,IAAI;AAC3DL,MAAAA,UAAU,CAACM,OAAX,GAAqBD,cAArB;;AACA,UAAIV,eAAJ,EAAqB;AACnBM,QAAAA,WAAW;AACZ;AACF,KALa,CAAd;AAMA,WAAO,MAAMC,kBAAkB,CAACK,WAAnB,CAA+BJ,KAA/B,CAAb;AACD,GARc,EAQZ,EARY,CAAf;AASA,SAAOH,UAAU,CAACM,OAAlB;AACD;;AACD,eAAeZ,aAAf","sourcesContent":["\"use client\";\n\nimport { useRef } from 'react';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useForceUpdate from '../../_util/hooks/useForceUpdate';\nimport useResponsiveObserver from '../../_util/responsiveObserver';\nfunction useBreakpoint() {\n  let refreshOnChange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  let defaultScreens = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const screensRef = useRef(defaultScreens);\n  const forceUpdate = useForceUpdate();\n  const responsiveObserver = useResponsiveObserver();\n  useLayoutEffect(() => {\n    const token = responsiveObserver.subscribe(supportScreens => {\n      screensRef.current = supportScreens;\n      if (refreshOnChange) {\n        forceUpdate();\n      }\n    });\n    return () => responsiveObserver.unsubscribe(token);\n  }, []);\n  return screensRef.current;\n}\nexport default useBreakpoint;"]},"metadata":{},"sourceType":"module"}