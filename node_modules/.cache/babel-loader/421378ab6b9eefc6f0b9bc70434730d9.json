{"ast":null,"code":"import { useContext } from 'react';\nimport { genStyleUtils } from '@ant-design/cssinjs-utils';\nimport { ConfigContext, defaultIconPrefixCls } from '../../config-provider/context';\nimport { genCommonStyle, genIconStyle, genLinkStyle } from '../../style';\nimport useLocalToken, { unitless } from '../useToken';\nexport const {\n  genStyleHooks,\n  genComponentStyleHook,\n  genSubStyleComponent\n} = genStyleUtils({\n  usePrefix: () => {\n    const {\n      getPrefixCls,\n      iconPrefixCls\n    } = useContext(ConfigContext);\n    const rootPrefixCls = getPrefixCls();\n    return {\n      rootPrefixCls,\n      iconPrefixCls\n    };\n  },\n  useToken: () => {\n    const [theme, realToken, hashId, token, cssVar] = useLocalToken();\n    return {\n      theme,\n      realToken,\n      hashId,\n      token,\n      cssVar\n    };\n  },\n  useCSP: () => {\n    const {\n      csp\n    } = useContext(ConfigContext);\n    return csp !== null && csp !== void 0 ? csp : {};\n  },\n  getResetStyles: (token, config) => {\n    var _a;\n\n    const linkStyle = genLinkStyle(token);\n    return [linkStyle, {\n      '&': linkStyle\n    }, genIconStyle((_a = config === null || config === void 0 ? void 0 : config.prefix.iconPrefixCls) !== null && _a !== void 0 ? _a : defaultIconPrefixCls)];\n  },\n  getCommonStyle: genCommonStyle,\n  getCompUnitless: () => unitless\n});","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/theme/util/genStyleUtils.js"],"names":["useContext","genStyleUtils","ConfigContext","defaultIconPrefixCls","genCommonStyle","genIconStyle","genLinkStyle","useLocalToken","unitless","genStyleHooks","genComponentStyleHook","genSubStyleComponent","usePrefix","getPrefixCls","iconPrefixCls","rootPrefixCls","useToken","theme","realToken","hashId","token","cssVar","useCSP","csp","getResetStyles","config","_a","linkStyle","prefix","getCommonStyle","getCompUnitless"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,aAAT,EAAwBC,oBAAxB,QAAoD,+BAApD;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,YAAvC,QAA2D,aAA3D;AACA,OAAOC,aAAP,IAAwBC,QAAxB,QAAwC,aAAxC;AACA,OAAO,MAAM;AACXC,EAAAA,aADW;AAEXC,EAAAA,qBAFW;AAGXC,EAAAA;AAHW,IAITV,aAAa,CAAC;AAChBW,EAAAA,SAAS,EAAE,MAAM;AACf,UAAM;AACJC,MAAAA,YADI;AAEJC,MAAAA;AAFI,QAGFd,UAAU,CAACE,aAAD,CAHd;AAIA,UAAMa,aAAa,GAAGF,YAAY,EAAlC;AACA,WAAO;AACLE,MAAAA,aADK;AAELD,MAAAA;AAFK,KAAP;AAID,GAXe;AAYhBE,EAAAA,QAAQ,EAAE,MAAM;AACd,UAAM,CAACC,KAAD,EAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,KAA3B,EAAkCC,MAAlC,IAA4Cd,aAAa,EAA/D;AACA,WAAO;AACLU,MAAAA,KADK;AAELC,MAAAA,SAFK;AAGLC,MAAAA,MAHK;AAILC,MAAAA,KAJK;AAKLC,MAAAA;AALK,KAAP;AAOD,GArBe;AAsBhBC,EAAAA,MAAM,EAAE,MAAM;AACZ,UAAM;AACJC,MAAAA;AADI,QAEFvB,UAAU,CAACE,aAAD,CAFd;AAGA,WAAOqB,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,KAAK,CAA7B,GAAiCA,GAAjC,GAAuC,EAA9C;AACD,GA3Be;AA4BhBC,EAAAA,cAAc,EAAE,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AACjC,QAAIC,EAAJ;;AACA,UAAMC,SAAS,GAAGrB,YAAY,CAACc,KAAD,CAA9B;AACA,WAAO,CAACO,SAAD,EAAY;AACjB,WAAKA;AADY,KAAZ,EAEJtB,YAAY,CAAC,CAACqB,EAAE,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACG,MAAP,CAAcd,aAApE,MAAuF,IAAvF,IAA+FY,EAAE,KAAK,KAAK,CAA3G,GAA+GA,EAA/G,GAAoHvB,oBAArH,CAFR,CAAP;AAGD,GAlCe;AAmChB0B,EAAAA,cAAc,EAAEzB,cAnCA;AAoChB0B,EAAAA,eAAe,EAAE,MAAMtB;AApCP,CAAD,CAJV","sourcesContent":["import { useContext } from 'react';\nimport { genStyleUtils } from '@ant-design/cssinjs-utils';\nimport { ConfigContext, defaultIconPrefixCls } from '../../config-provider/context';\nimport { genCommonStyle, genIconStyle, genLinkStyle } from '../../style';\nimport useLocalToken, { unitless } from '../useToken';\nexport const {\n  genStyleHooks,\n  genComponentStyleHook,\n  genSubStyleComponent\n} = genStyleUtils({\n  usePrefix: () => {\n    const {\n      getPrefixCls,\n      iconPrefixCls\n    } = useContext(ConfigContext);\n    const rootPrefixCls = getPrefixCls();\n    return {\n      rootPrefixCls,\n      iconPrefixCls\n    };\n  },\n  useToken: () => {\n    const [theme, realToken, hashId, token, cssVar] = useLocalToken();\n    return {\n      theme,\n      realToken,\n      hashId,\n      token,\n      cssVar\n    };\n  },\n  useCSP: () => {\n    const {\n      csp\n    } = useContext(ConfigContext);\n    return csp !== null && csp !== void 0 ? csp : {};\n  },\n  getResetStyles: (token, config) => {\n    var _a;\n    const linkStyle = genLinkStyle(token);\n    return [linkStyle, {\n      '&': linkStyle\n    }, genIconStyle((_a = config === null || config === void 0 ? void 0 : config.prefix.iconPrefixCls) !== null && _a !== void 0 ? _a : defaultIconPrefixCls)];\n  },\n  getCommonStyle: genCommonStyle,\n  getCompUnitless: () => unitless\n});"]},"metadata":{},"sourceType":"module"}