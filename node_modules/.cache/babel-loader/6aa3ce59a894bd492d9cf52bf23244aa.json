{"ast":null,"code":"export function getCellFixedInfo(colStart, colEnd, columns, stickyOffsets, direction) {\n  var startColumn = columns[colStart] || {};\n  var endColumn = columns[colEnd] || {};\n  var fixLeft;\n  var fixRight;\n\n  if (startColumn.fixed === 'left') {\n    fixLeft = stickyOffsets.left[direction === 'rtl' ? colEnd : colStart];\n  } else if (endColumn.fixed === 'right') {\n    fixRight = stickyOffsets.right[direction === 'rtl' ? colStart : colEnd];\n  }\n\n  var lastFixLeft = false;\n  var firstFixRight = false;\n  var lastFixRight = false;\n  var firstFixLeft = false;\n  var nextColumn = columns[colEnd + 1];\n  var prevColumn = columns[colStart - 1]; // need show shadow only when canLastFix is true\n\n  var canLastFix = nextColumn && !nextColumn.fixed || prevColumn && !prevColumn.fixed || columns.every(function (col) {\n    return col.fixed === 'left';\n  });\n\n  if (direction === 'rtl') {\n    if (fixLeft !== undefined) {\n      var prevFixLeft = prevColumn && prevColumn.fixed === 'left';\n      firstFixLeft = !prevFixLeft && canLastFix;\n    } else if (fixRight !== undefined) {\n      var nextFixRight = nextColumn && nextColumn.fixed === 'right';\n      lastFixRight = !nextFixRight && canLastFix;\n    }\n  } else if (fixLeft !== undefined) {\n    var nextFixLeft = nextColumn && nextColumn.fixed === 'left';\n    lastFixLeft = !nextFixLeft && canLastFix;\n  } else if (fixRight !== undefined) {\n    var prevFixRight = prevColumn && prevColumn.fixed === 'right';\n    firstFixRight = !prevFixRight && canLastFix;\n  }\n\n  return {\n    fixLeft: fixLeft,\n    fixRight: fixRight,\n    lastFixLeft: lastFixLeft,\n    firstFixRight: firstFixRight,\n    lastFixRight: lastFixRight,\n    firstFixLeft: firstFixLeft,\n    isSticky: stickyOffsets.isSticky\n  };\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-table/es/utils/fixUtil.js"],"names":["getCellFixedInfo","colStart","colEnd","columns","stickyOffsets","direction","startColumn","endColumn","fixLeft","fixRight","fixed","left","right","lastFixLeft","firstFixRight","lastFixRight","firstFixLeft","nextColumn","prevColumn","canLastFix","every","col","undefined","prevFixLeft","nextFixRight","nextFixLeft","prevFixRight","isSticky"],"mappings":"AAAA,OAAO,SAASA,gBAAT,CAA0BC,QAA1B,EAAoCC,MAApC,EAA4CC,OAA5C,EAAqDC,aAArD,EAAoEC,SAApE,EAA+E;AACpF,MAAIC,WAAW,GAAGH,OAAO,CAACF,QAAD,CAAP,IAAqB,EAAvC;AACA,MAAIM,SAAS,GAAGJ,OAAO,CAACD,MAAD,CAAP,IAAmB,EAAnC;AACA,MAAIM,OAAJ;AACA,MAAIC,QAAJ;;AACA,MAAIH,WAAW,CAACI,KAAZ,KAAsB,MAA1B,EAAkC;AAChCF,IAAAA,OAAO,GAAGJ,aAAa,CAACO,IAAd,CAAmBN,SAAS,KAAK,KAAd,GAAsBH,MAAtB,GAA+BD,QAAlD,CAAV;AACD,GAFD,MAEO,IAAIM,SAAS,CAACG,KAAV,KAAoB,OAAxB,EAAiC;AACtCD,IAAAA,QAAQ,GAAGL,aAAa,CAACQ,KAAd,CAAoBP,SAAS,KAAK,KAAd,GAAsBJ,QAAtB,GAAiCC,MAArD,CAAX;AACD;;AACD,MAAIW,WAAW,GAAG,KAAlB;AACA,MAAIC,aAAa,GAAG,KAApB;AACA,MAAIC,YAAY,GAAG,KAAnB;AACA,MAAIC,YAAY,GAAG,KAAnB;AACA,MAAIC,UAAU,GAAGd,OAAO,CAACD,MAAM,GAAG,CAAV,CAAxB;AACA,MAAIgB,UAAU,GAAGf,OAAO,CAACF,QAAQ,GAAG,CAAZ,CAAxB,CAfoF,CAiBpF;;AACA,MAAIkB,UAAU,GAAGF,UAAU,IAAI,CAACA,UAAU,CAACP,KAA1B,IAAmCQ,UAAU,IAAI,CAACA,UAAU,CAACR,KAA7D,IAAsEP,OAAO,CAACiB,KAAR,CAAc,UAAUC,GAAV,EAAe;AAClH,WAAOA,GAAG,CAACX,KAAJ,KAAc,MAArB;AACD,GAFsF,CAAvF;;AAGA,MAAIL,SAAS,KAAK,KAAlB,EAAyB;AACvB,QAAIG,OAAO,KAAKc,SAAhB,EAA2B;AACzB,UAAIC,WAAW,GAAGL,UAAU,IAAIA,UAAU,CAACR,KAAX,KAAqB,MAArD;AACAM,MAAAA,YAAY,GAAG,CAACO,WAAD,IAAgBJ,UAA/B;AACD,KAHD,MAGO,IAAIV,QAAQ,KAAKa,SAAjB,EAA4B;AACjC,UAAIE,YAAY,GAAGP,UAAU,IAAIA,UAAU,CAACP,KAAX,KAAqB,OAAtD;AACAK,MAAAA,YAAY,GAAG,CAACS,YAAD,IAAiBL,UAAhC;AACD;AACF,GARD,MAQO,IAAIX,OAAO,KAAKc,SAAhB,EAA2B;AAChC,QAAIG,WAAW,GAAGR,UAAU,IAAIA,UAAU,CAACP,KAAX,KAAqB,MAArD;AACAG,IAAAA,WAAW,GAAG,CAACY,WAAD,IAAgBN,UAA9B;AACD,GAHM,MAGA,IAAIV,QAAQ,KAAKa,SAAjB,EAA4B;AACjC,QAAII,YAAY,GAAGR,UAAU,IAAIA,UAAU,CAACR,KAAX,KAAqB,OAAtD;AACAI,IAAAA,aAAa,GAAG,CAACY,YAAD,IAAiBP,UAAjC;AACD;;AACD,SAAO;AACLX,IAAAA,OAAO,EAAEA,OADJ;AAELC,IAAAA,QAAQ,EAAEA,QAFL;AAGLI,IAAAA,WAAW,EAAEA,WAHR;AAILC,IAAAA,aAAa,EAAEA,aAJV;AAKLC,IAAAA,YAAY,EAAEA,YALT;AAMLC,IAAAA,YAAY,EAAEA,YANT;AAOLW,IAAAA,QAAQ,EAAEvB,aAAa,CAACuB;AAPnB,GAAP;AASD","sourcesContent":["export function getCellFixedInfo(colStart, colEnd, columns, stickyOffsets, direction) {\n  var startColumn = columns[colStart] || {};\n  var endColumn = columns[colEnd] || {};\n  var fixLeft;\n  var fixRight;\n  if (startColumn.fixed === 'left') {\n    fixLeft = stickyOffsets.left[direction === 'rtl' ? colEnd : colStart];\n  } else if (endColumn.fixed === 'right') {\n    fixRight = stickyOffsets.right[direction === 'rtl' ? colStart : colEnd];\n  }\n  var lastFixLeft = false;\n  var firstFixRight = false;\n  var lastFixRight = false;\n  var firstFixLeft = false;\n  var nextColumn = columns[colEnd + 1];\n  var prevColumn = columns[colStart - 1];\n\n  // need show shadow only when canLastFix is true\n  var canLastFix = nextColumn && !nextColumn.fixed || prevColumn && !prevColumn.fixed || columns.every(function (col) {\n    return col.fixed === 'left';\n  });\n  if (direction === 'rtl') {\n    if (fixLeft !== undefined) {\n      var prevFixLeft = prevColumn && prevColumn.fixed === 'left';\n      firstFixLeft = !prevFixLeft && canLastFix;\n    } else if (fixRight !== undefined) {\n      var nextFixRight = nextColumn && nextColumn.fixed === 'right';\n      lastFixRight = !nextFixRight && canLastFix;\n    }\n  } else if (fixLeft !== undefined) {\n    var nextFixLeft = nextColumn && nextColumn.fixed === 'left';\n    lastFixLeft = !nextFixLeft && canLastFix;\n  } else if (fixRight !== undefined) {\n    var prevFixRight = prevColumn && prevColumn.fixed === 'right';\n    firstFixRight = !prevFixRight && canLastFix;\n  }\n  return {\n    fixLeft: fixLeft,\n    fixRight: fixRight,\n    lastFixLeft: lastFixLeft,\n    firstFixRight: firstFixRight,\n    lastFixRight: lastFixRight,\n    firstFixLeft: firstFixLeft,\n    isSticky: stickyOffsets.isSticky\n  };\n}"]},"metadata":{},"sourceType":"module"}