{"ast":null,"code":"import * as React from 'react';\nimport isEqual from \"rc-util/es/isEqual\";\n/**\n * Singleton cache will only take latest `cacheParams` as key\n * and return the result for callback matching.\n */\n\nexport default function useSingletonCache() {\n  const cacheRef = React.useRef([null, null]);\n\n  const getCache = (cacheKeys, callback) => {\n    const filteredKeys = cacheKeys.map(item => item instanceof HTMLElement || Number.isNaN(item) ? '' : item);\n\n    if (!isEqual(cacheRef.current[0], filteredKeys)) {\n      cacheRef.current = [filteredKeys, callback()];\n    }\n\n    return cacheRef.current[1];\n  };\n\n  return getCache;\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/watermark/useSingletonCache.js"],"names":["React","isEqual","useSingletonCache","cacheRef","useRef","getCache","cacheKeys","callback","filteredKeys","map","item","HTMLElement","Number","isNaN","current"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,iBAAT,GAA6B;AAC1C,QAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa,CAAC,IAAD,EAAO,IAAP,CAAb,CAAjB;;AACA,QAAMC,QAAQ,GAAG,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AACxC,UAAMC,YAAY,GAAGF,SAAS,CAACG,GAAV,CAAcC,IAAI,IAAIA,IAAI,YAAYC,WAAhB,IAA+BC,MAAM,CAACC,KAAP,CAAaH,IAAb,CAA/B,GAAoD,EAApD,GAAyDA,IAA/E,CAArB;;AACA,QAAI,CAACT,OAAO,CAACE,QAAQ,CAACW,OAAT,CAAiB,CAAjB,CAAD,EAAsBN,YAAtB,CAAZ,EAAiD;AAC/CL,MAAAA,QAAQ,CAACW,OAAT,GAAmB,CAACN,YAAD,EAAeD,QAAQ,EAAvB,CAAnB;AACD;;AACD,WAAOJ,QAAQ,CAACW,OAAT,CAAiB,CAAjB,CAAP;AACD,GAND;;AAOA,SAAOT,QAAP;AACD","sourcesContent":["import * as React from 'react';\nimport isEqual from \"rc-util/es/isEqual\";\n/**\n * Singleton cache will only take latest `cacheParams` as key\n * and return the result for callback matching.\n */\nexport default function useSingletonCache() {\n  const cacheRef = React.useRef([null, null]);\n  const getCache = (cacheKeys, callback) => {\n    const filteredKeys = cacheKeys.map(item => item instanceof HTMLElement || Number.isNaN(item) ? '' : item);\n    if (!isEqual(cacheRef.current[0], filteredKeys)) {\n      cacheRef.current = [filteredKeys, callback()];\n    }\n    return cacheRef.current[1];\n  };\n  return getCache;\n}"]},"metadata":{},"sourceType":"module"}