{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { cloneElement } from '../_util/reactNode';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport Popover from '../popover';\nimport Avatar from './Avatar';\nimport AvatarContext from './AvatarContext';\nimport useStyle from './style';\n\nconst AvatarContextProvider = props => {\n  const {\n    size,\n    shape\n  } = React.useContext(AvatarContext);\n  const avatarContextValue = React.useMemo(() => ({\n    size: props.size || size,\n    shape: props.shape || shape\n  }), [props.size, props.shape, size, shape]);\n  return /*#__PURE__*/React.createElement(AvatarContext.Provider, {\n    value: avatarContextValue\n  }, props.children);\n};\n\nconst AvatarGroup = props => {\n  var _a, _b, _c, _d;\n\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    maxCount,\n    maxStyle,\n    size,\n    shape,\n    maxPopoverPlacement,\n    maxPopoverTrigger,\n    children,\n    max\n  } = props;\n\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Avatar.Group');\n    [['maxCount', 'max={{ count: number }}'], ['maxStyle', 'max={{ style: CSSProperties }}'], ['maxPopoverPlacement', 'max={{ popover: PopoverProps }}'], ['maxPopoverTrigger', 'max={{ popover: PopoverProps }}']].forEach(_ref => {\n      let [deprecatedName, newName] = _ref;\n      warning.deprecated(!(deprecatedName in props), deprecatedName, newName);\n    });\n  }\n\n  const prefixCls = getPrefixCls('avatar', customizePrefixCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const cls = classNames(groupPrefixCls, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl'\n  }, cssVarCls, rootCls, className, rootClassName, hashId);\n  const childrenWithProps = toArray(children).map((child, index) => cloneElement(child, {\n    // eslint-disable-next-line react/no-array-index-key\n    key: `avatar-key-${index}`\n  }));\n  const mergeCount = (max === null || max === void 0 ? void 0 : max.count) || maxCount;\n  const numOfChildren = childrenWithProps.length;\n\n  if (mergeCount && mergeCount < numOfChildren) {\n    const childrenShow = childrenWithProps.slice(0, mergeCount);\n    const childrenHidden = childrenWithProps.slice(mergeCount, numOfChildren);\n    const mergeStyle = (max === null || max === void 0 ? void 0 : max.style) || maxStyle;\n    const mergePopoverTrigger = ((_a = max === null || max === void 0 ? void 0 : max.popover) === null || _a === void 0 ? void 0 : _a.trigger) || maxPopoverTrigger || 'hover';\n    const mergePopoverPlacement = ((_b = max === null || max === void 0 ? void 0 : max.popover) === null || _b === void 0 ? void 0 : _b.placement) || maxPopoverPlacement || 'top';\n    const mergeProps = Object.assign(Object.assign({\n      content: childrenHidden\n    }, max === null || max === void 0 ? void 0 : max.popover), {\n      classNames: {\n        root: classNames(`${groupPrefixCls}-popover`, (_d = (_c = max === null || max === void 0 ? void 0 : max.popover) === null || _c === void 0 ? void 0 : _c.classNames) === null || _d === void 0 ? void 0 : _d.root)\n      },\n      placement: mergePopoverPlacement,\n      trigger: mergePopoverTrigger\n    });\n    childrenShow.push( /*#__PURE__*/React.createElement(Popover, Object.assign({\n      key: \"avatar-popover-key\",\n      destroyTooltipOnHide: true\n    }, mergeProps), /*#__PURE__*/React.createElement(Avatar, {\n      style: mergeStyle\n    }, `+${numOfChildren - mergeCount}`)));\n    return wrapCSSVar( /*#__PURE__*/React.createElement(AvatarContextProvider, {\n      shape: shape,\n      size: size\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, childrenShow)));\n  }\n\n  return wrapCSSVar( /*#__PURE__*/React.createElement(AvatarContextProvider, {\n    shape: shape,\n    size: size\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: style\n  }, childrenWithProps)));\n};\n\nexport default AvatarGroup;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/avatar/AvatarGroup.js"],"names":["React","classNames","toArray","cloneElement","devUseWarning","ConfigContext","useCSSVarCls","Popover","Avatar","AvatarContext","useStyle","AvatarContextProvider","props","size","shape","useContext","avatarContextValue","useMemo","createElement","Provider","value","children","AvatarGroup","_a","_b","_c","_d","getPrefixCls","direction","prefixCls","customizePrefixCls","className","rootClassName","style","maxCount","maxStyle","maxPopoverPlacement","maxPopoverTrigger","max","process","env","NODE_ENV","warning","forEach","_ref","deprecatedName","newName","deprecated","groupPrefixCls","rootCls","wrapCSSVar","hashId","cssVarCls","cls","childrenWithProps","map","child","index","key","mergeCount","count","numOfChildren","length","childrenShow","slice","childrenHidden","mergeStyle","mergePopoverTrigger","popover","trigger","mergePopoverPlacement","placement","mergeProps","Object","assign","content","root","push","destroyTooltipOnHide"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { cloneElement } from '../_util/reactNode';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport Popover from '../popover';\nimport Avatar from './Avatar';\nimport AvatarContext from './AvatarContext';\nimport useStyle from './style';\nconst AvatarContextProvider = props => {\n  const {\n    size,\n    shape\n  } = React.useContext(AvatarContext);\n  const avatarContextValue = React.useMemo(() => ({\n    size: props.size || size,\n    shape: props.shape || shape\n  }), [props.size, props.shape, size, shape]);\n  return /*#__PURE__*/React.createElement(AvatarContext.Provider, {\n    value: avatarContextValue\n  }, props.children);\n};\nconst AvatarGroup = props => {\n  var _a, _b, _c, _d;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    maxCount,\n    maxStyle,\n    size,\n    shape,\n    maxPopoverPlacement,\n    maxPopoverTrigger,\n    children,\n    max\n  } = props;\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Avatar.Group');\n    [['maxCount', 'max={{ count: number }}'], ['maxStyle', 'max={{ style: CSSProperties }}'], ['maxPopoverPlacement', 'max={{ popover: PopoverProps }}'], ['maxPopoverTrigger', 'max={{ popover: PopoverProps }}']].forEach(_ref => {\n      let [deprecatedName, newName] = _ref;\n      warning.deprecated(!(deprecatedName in props), deprecatedName, newName);\n    });\n  }\n  const prefixCls = getPrefixCls('avatar', customizePrefixCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const cls = classNames(groupPrefixCls, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl'\n  }, cssVarCls, rootCls, className, rootClassName, hashId);\n  const childrenWithProps = toArray(children).map((child, index) => cloneElement(child, {\n    // eslint-disable-next-line react/no-array-index-key\n    key: `avatar-key-${index}`\n  }));\n  const mergeCount = (max === null || max === void 0 ? void 0 : max.count) || maxCount;\n  const numOfChildren = childrenWithProps.length;\n  if (mergeCount && mergeCount < numOfChildren) {\n    const childrenShow = childrenWithProps.slice(0, mergeCount);\n    const childrenHidden = childrenWithProps.slice(mergeCount, numOfChildren);\n    const mergeStyle = (max === null || max === void 0 ? void 0 : max.style) || maxStyle;\n    const mergePopoverTrigger = ((_a = max === null || max === void 0 ? void 0 : max.popover) === null || _a === void 0 ? void 0 : _a.trigger) || maxPopoverTrigger || 'hover';\n    const mergePopoverPlacement = ((_b = max === null || max === void 0 ? void 0 : max.popover) === null || _b === void 0 ? void 0 : _b.placement) || maxPopoverPlacement || 'top';\n    const mergeProps = Object.assign(Object.assign({\n      content: childrenHidden\n    }, max === null || max === void 0 ? void 0 : max.popover), {\n      classNames: {\n        root: classNames(`${groupPrefixCls}-popover`, (_d = (_c = max === null || max === void 0 ? void 0 : max.popover) === null || _c === void 0 ? void 0 : _c.classNames) === null || _d === void 0 ? void 0 : _d.root)\n      },\n      placement: mergePopoverPlacement,\n      trigger: mergePopoverTrigger\n    });\n    childrenShow.push(/*#__PURE__*/React.createElement(Popover, Object.assign({\n      key: \"avatar-popover-key\",\n      destroyTooltipOnHide: true\n    }, mergeProps), /*#__PURE__*/React.createElement(Avatar, {\n      style: mergeStyle\n    }, `+${numOfChildren - mergeCount}`)));\n    return wrapCSSVar(/*#__PURE__*/React.createElement(AvatarContextProvider, {\n      shape: shape,\n      size: size\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, childrenShow)));\n  }\n  return wrapCSSVar(/*#__PURE__*/React.createElement(AvatarContextProvider, {\n    shape: shape,\n    size: size\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: style\n  }, childrenWithProps)));\n};\nexport default AvatarGroup;"]},"metadata":{},"sourceType":"module"}