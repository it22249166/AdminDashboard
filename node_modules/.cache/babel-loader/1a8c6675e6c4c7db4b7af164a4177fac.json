{"ast":null,"code":"import rules from \"../rule\";\nimport { isEmptyValue } from \"../util\";\nvar ENUM = 'enum';\n\nvar enumerable = function enumerable(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules[ENUM](rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n};\n\nexport default enumerable;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@rc-component/async-validator/es/validator/enum.js"],"names":["rules","isEmptyValue","ENUM","enumerable","rule","value","callback","source","options","errors","validate","required","hasOwnProperty","field","undefined"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,IAAIC,IAAI,GAAG,MAAX;;AACA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,QAAjC,EAA2CC,MAA3C,EAAmDC,OAAnD,EAA4D;AAC3E,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,QAAQ,GAAGN,IAAI,CAACO,QAAL,IAAiB,CAACP,IAAI,CAACO,QAAN,IAAkBJ,MAAM,CAACK,cAAP,CAAsBR,IAAI,CAACS,KAA3B,CAAlD;;AACA,MAAIH,QAAJ,EAAc;AACZ,QAAIT,YAAY,CAACI,KAAD,CAAZ,IAAuB,CAACD,IAAI,CAACO,QAAjC,EAA2C;AACzC,aAAOL,QAAQ,EAAf;AACD;;AACDN,IAAAA,KAAK,CAACW,QAAN,CAAeP,IAAf,EAAqBC,KAArB,EAA4BE,MAA5B,EAAoCE,MAApC,EAA4CD,OAA5C;;AACA,QAAIH,KAAK,KAAKS,SAAd,EAAyB;AACvBd,MAAAA,KAAK,CAACE,IAAD,CAAL,CAAYE,IAAZ,EAAkBC,KAAlB,EAAyBE,MAAzB,EAAiCE,MAAjC,EAAyCD,OAAzC;AACD;AACF;;AACDF,EAAAA,QAAQ,CAACG,MAAD,CAAR;AACD,CAbD;;AAcA,eAAeN,UAAf","sourcesContent":["import rules from \"../rule\";\nimport { isEmptyValue } from \"../util\";\nvar ENUM = 'enum';\nvar enumerable = function enumerable(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules[ENUM](rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nexport default enumerable;"]},"metadata":{},"sourceType":"module"}