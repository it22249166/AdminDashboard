{"ast":null,"code":"export function getLineHeight(fontSize) {\n  return (fontSize + 8) / fontSize;\n} // https://zhuanlan.zhihu.com/p/32746810\n\nexport default function getFontSizes(base) {\n  const fontSizes = Array.from({\n    length: 10\n  }).map((_, index) => {\n    const i = index - 1;\n    const baseSize = base * Math.pow(Math.E, i / 5);\n    const intSize = index > 1 ? Math.floor(baseSize) : Math.ceil(baseSize); // Convert to even\n\n    return Math.floor(intSize / 2) * 2;\n  });\n  fontSizes[1] = base;\n  return fontSizes.map(size => ({\n    size,\n    lineHeight: getLineHeight(size)\n  }));\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/theme/themes/shared/genFontSizes.js"],"names":["getLineHeight","fontSize","getFontSizes","base","fontSizes","Array","from","length","map","_","index","i","baseSize","Math","pow","E","intSize","floor","ceil","size","lineHeight"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,QAAvB,EAAiC;AACtC,SAAO,CAACA,QAAQ,GAAG,CAAZ,IAAiBA,QAAxB;AACD,C,CACD;;AACA,eAAe,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACzC,QAAMC,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAW;AAC3BC,IAAAA,MAAM,EAAE;AADmB,GAAX,EAEfC,GAFe,CAEX,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACnB,UAAMC,CAAC,GAAGD,KAAK,GAAG,CAAlB;AACA,UAAME,QAAQ,GAAGT,IAAI,GAAGU,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,CAAd,EAAiBJ,CAAC,GAAG,CAArB,CAAxB;AACA,UAAMK,OAAO,GAAGN,KAAK,GAAG,CAAR,GAAYG,IAAI,CAACI,KAAL,CAAWL,QAAX,CAAZ,GAAmCC,IAAI,CAACK,IAAL,CAAUN,QAAV,CAAnD,CAHmB,CAInB;;AACA,WAAOC,IAAI,CAACI,KAAL,CAAWD,OAAO,GAAG,CAArB,IAA0B,CAAjC;AACD,GARiB,CAAlB;AASAZ,EAAAA,SAAS,CAAC,CAAD,CAAT,GAAeD,IAAf;AACA,SAAOC,SAAS,CAACI,GAAV,CAAcW,IAAI,KAAK;AAC5BA,IAAAA,IAD4B;AAE5BC,IAAAA,UAAU,EAAEpB,aAAa,CAACmB,IAAD;AAFG,GAAL,CAAlB,CAAP;AAID","sourcesContent":["export function getLineHeight(fontSize) {\n  return (fontSize + 8) / fontSize;\n}\n// https://zhuanlan.zhihu.com/p/32746810\nexport default function getFontSizes(base) {\n  const fontSizes = Array.from({\n    length: 10\n  }).map((_, index) => {\n    const i = index - 1;\n    const baseSize = base * Math.pow(Math.E, i / 5);\n    const intSize = index > 1 ? Math.floor(baseSize) : Math.ceil(baseSize);\n    // Convert to even\n    return Math.floor(intSize / 2) * 2;\n  });\n  fontSizes[1] = base;\n  return fontSizes.map(size => ({\n    size,\n    lineHeight: getLineHeight(size)\n  }));\n}"]},"metadata":{},"sourceType":"module"}