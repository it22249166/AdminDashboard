{"ast":null,"code":"import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { CONTAINER_MAX_OFFSET } from '../../_util/hooks/useZIndex';\nimport { genFocusStyle, resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport genNotificationPlacementStyle from './placement';\nimport genStackStyle from './stack';\nexport const genNoticeStyle = token => {\n  const {\n    iconCls,\n    componentCls,\n    // .ant-notification\n    boxShadow,\n    fontSizeLG,\n    notificationMarginBottom,\n    borderRadiusLG,\n    colorSuccess,\n    colorInfo,\n    colorWarning,\n    colorError,\n    colorTextHeading,\n    notificationBg,\n    notificationPadding,\n    notificationMarginEdge,\n    notificationProgressBg,\n    notificationProgressHeight,\n    fontSize,\n    lineHeight,\n    width,\n    notificationIconSize,\n    colorText\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  return {\n    position: 'relative',\n    marginBottom: notificationMarginBottom,\n    marginInlineStart: 'auto',\n    background: notificationBg,\n    borderRadius: borderRadiusLG,\n    boxShadow,\n    [noticeCls]: {\n      padding: notificationPadding,\n      width,\n      maxWidth: `calc(100vw - ${unit(token.calc(notificationMarginEdge).mul(2).equal())})`,\n      overflow: 'hidden',\n      lineHeight,\n      wordWrap: 'break-word'\n    },\n    [`${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      color: colorTextHeading,\n      fontSize: fontSizeLG,\n      lineHeight: token.lineHeightLG\n    },\n    [`${noticeCls}-description`]: {\n      fontSize,\n      color: colorText\n    },\n    [`${noticeCls}-closable ${noticeCls}-message`]: {\n      paddingInlineEnd: token.paddingLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      marginInlineStart: token.calc(token.marginSM).add(notificationIconSize).equal(),\n      fontSize: fontSizeLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-description`]: {\n      marginInlineStart: token.calc(token.marginSM).add(notificationIconSize).equal(),\n      fontSize\n    },\n    // Icon & color style in different selector level\n    // https://github.com/ant-design/ant-design/issues/16503\n    // https://github.com/ant-design/ant-design/issues/15512\n    [`${noticeCls}-icon`]: {\n      position: 'absolute',\n      fontSize: notificationIconSize,\n      lineHeight: 1,\n      // icon-font\n      [`&-success${iconCls}`]: {\n        color: colorSuccess\n      },\n      [`&-info${iconCls}`]: {\n        color: colorInfo\n      },\n      [`&-warning${iconCls}`]: {\n        color: colorWarning\n      },\n      [`&-error${iconCls}`]: {\n        color: colorError\n      }\n    },\n    [`${noticeCls}-close`]: Object.assign({\n      position: 'absolute',\n      top: token.notificationPaddingVertical,\n      insetInlineEnd: token.notificationPaddingHorizontal,\n      color: token.colorIcon,\n      outline: 'none',\n      width: token.notificationCloseButtonSize,\n      height: token.notificationCloseButtonSize,\n      borderRadius: token.borderRadiusSM,\n      transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      background: 'none',\n      border: 'none',\n      '&:hover': {\n        color: token.colorIconHover,\n        backgroundColor: token.colorBgTextHover\n      },\n      '&:active': {\n        backgroundColor: token.colorBgTextActive\n      }\n    }, genFocusStyle(token)),\n    [`${noticeCls}-progress`]: {\n      position: 'absolute',\n      display: 'block',\n      appearance: 'none',\n      inlineSize: `calc(100% - ${unit(borderRadiusLG)} * 2)`,\n      left: {\n        _skip_check_: true,\n        value: borderRadiusLG\n      },\n      right: {\n        _skip_check_: true,\n        value: borderRadiusLG\n      },\n      bottom: 0,\n      blockSize: notificationProgressHeight,\n      border: 0,\n      '&, &::-webkit-progress-bar': {\n        borderRadius: borderRadiusLG,\n        backgroundColor: `rgba(0, 0, 0, 0.04)`\n      },\n      '&::-moz-progress-bar': {\n        background: notificationProgressBg\n      },\n      '&::-webkit-progress-value': {\n        borderRadius: borderRadiusLG,\n        background: notificationProgressBg\n      }\n    },\n    [`${noticeCls}-actions`]: {\n      float: 'right',\n      marginTop: token.marginSM\n    }\n  };\n};\n\nconst genNotificationStyle = token => {\n  const {\n    componentCls,\n    // .ant-notification\n    notificationMarginBottom,\n    notificationMarginEdge,\n    motionDurationMid,\n    motionEaseInOut\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  const fadeOut = new Keyframes('antNotificationFadeOut', {\n    '0%': {\n      maxHeight: token.animationMaxHeight,\n      marginBottom: notificationMarginBottom\n    },\n    '100%': {\n      maxHeight: 0,\n      marginBottom: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      opacity: 0\n    }\n  });\n  return [// ============================ Holder ============================\n  {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'fixed',\n      zIndex: token.zIndexPopup,\n      marginRight: {\n        value: notificationMarginEdge,\n        _skip_check_: true\n      },\n      [`${componentCls}-hook-holder`]: {\n        position: 'relative'\n      },\n      //  animation\n      [`${componentCls}-fade-appear-prepare`]: {\n        opacity: '0 !important'\n      },\n      [`${componentCls}-fade-enter, ${componentCls}-fade-appear`]: {\n        animationDuration: token.motionDurationMid,\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        opacity: 0,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-leave`]: {\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        animationDuration: motionDurationMid,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n        animationPlayState: 'running'\n      },\n      [`${componentCls}-fade-leave${componentCls}-fade-leave-active`]: {\n        animationName: fadeOut,\n        animationPlayState: 'running'\n      },\n      // RTL\n      '&-rtl': {\n        direction: 'rtl',\n        [`${noticeCls}-actions`]: {\n          float: 'left'\n        }\n      }\n    })\n  }, // ============================ Notice ============================\n  {\n    [componentCls]: {\n      [`${noticeCls}-wrapper`]: Object.assign({}, genNoticeStyle(token))\n    }\n  }];\n}; // ============================== Export ==============================\n\n\nexport const prepareComponentToken = token => ({\n  zIndexPopup: token.zIndexPopupBase + CONTAINER_MAX_OFFSET + 50,\n  width: 384\n});\nexport const prepareNotificationToken = token => {\n  const notificationPaddingVertical = token.paddingMD;\n  const notificationPaddingHorizontal = token.paddingLG;\n  const notificationToken = mergeToken(token, {\n    notificationBg: token.colorBgElevated,\n    notificationPaddingVertical,\n    notificationPaddingHorizontal,\n    notificationIconSize: token.calc(token.fontSizeLG).mul(token.lineHeightLG).equal(),\n    notificationCloseButtonSize: token.calc(token.controlHeightLG).mul(0.55).equal(),\n    notificationMarginBottom: token.margin,\n    notificationPadding: `${unit(token.paddingMD)} ${unit(token.paddingContentHorizontalLG)}`,\n    notificationMarginEdge: token.marginLG,\n    animationMaxHeight: 150,\n    notificationStackLayer: 3,\n    notificationProgressHeight: 2,\n    notificationProgressBg: `linear-gradient(90deg, ${token.colorPrimaryBorderHover}, ${token.colorPrimary})`\n  });\n  return notificationToken;\n};\nexport default genStyleHooks('Notification', token => {\n  const notificationToken = prepareNotificationToken(token);\n  return [genNotificationStyle(notificationToken), genNotificationPlacementStyle(notificationToken), genStackStyle(notificationToken)];\n}, prepareComponentToken);","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/notification/style/index.js"],"names":["Keyframes","unit","CONTAINER_MAX_OFFSET","genFocusStyle","resetComponent","genStyleHooks","mergeToken","genNotificationPlacementStyle","genStackStyle","genNoticeStyle","token","iconCls","componentCls","boxShadow","fontSizeLG","notificationMarginBottom","borderRadiusLG","colorSuccess","colorInfo","colorWarning","colorError","colorTextHeading","notificationBg","notificationPadding","notificationMarginEdge","notificationProgressBg","notificationProgressHeight","fontSize","lineHeight","width","notificationIconSize","colorText","noticeCls","position","marginBottom","marginInlineStart","background","borderRadius","padding","maxWidth","calc","mul","equal","overflow","wordWrap","marginXS","color","lineHeightLG","paddingInlineEnd","paddingLG","marginSM","add","Object","assign","top","notificationPaddingVertical","insetInlineEnd","notificationPaddingHorizontal","colorIcon","outline","notificationCloseButtonSize","height","borderRadiusSM","transition","motionDurationMid","display","alignItems","justifyContent","border","colorIconHover","backgroundColor","colorBgTextHover","colorBgTextActive","appearance","inlineSize","left","_skip_check_","value","right","bottom","blockSize","float","marginTop","genNotificationStyle","motionEaseInOut","fadeOut","maxHeight","animationMaxHeight","paddingTop","paddingBottom","opacity","zIndex","zIndexPopup","marginRight","animationDuration","animationTimingFunction","animationFillMode","animationPlayState","animationName","direction","prepareComponentToken","zIndexPopupBase","prepareNotificationToken","paddingMD","notificationToken","colorBgElevated","controlHeightLG","margin","paddingContentHorizontalLG","marginLG","notificationStackLayer","colorPrimaryBorderHover","colorPrimary"],"mappings":"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","sourcesContent":["import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { CONTAINER_MAX_OFFSET } from '../../_util/hooks/useZIndex';\nimport { genFocusStyle, resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport genNotificationPlacementStyle from './placement';\nimport genStackStyle from './stack';\nexport const genNoticeStyle = token => {\n  const {\n    iconCls,\n    componentCls,\n    // .ant-notification\n    boxShadow,\n    fontSizeLG,\n    notificationMarginBottom,\n    borderRadiusLG,\n    colorSuccess,\n    colorInfo,\n    colorWarning,\n    colorError,\n    colorTextHeading,\n    notificationBg,\n    notificationPadding,\n    notificationMarginEdge,\n    notificationProgressBg,\n    notificationProgressHeight,\n    fontSize,\n    lineHeight,\n    width,\n    notificationIconSize,\n    colorText\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  return {\n    position: 'relative',\n    marginBottom: notificationMarginBottom,\n    marginInlineStart: 'auto',\n    background: notificationBg,\n    borderRadius: borderRadiusLG,\n    boxShadow,\n    [noticeCls]: {\n      padding: notificationPadding,\n      width,\n      maxWidth: `calc(100vw - ${unit(token.calc(notificationMarginEdge).mul(2).equal())})`,\n      overflow: 'hidden',\n      lineHeight,\n      wordWrap: 'break-word'\n    },\n    [`${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      color: colorTextHeading,\n      fontSize: fontSizeLG,\n      lineHeight: token.lineHeightLG\n    },\n    [`${noticeCls}-description`]: {\n      fontSize,\n      color: colorText\n    },\n    [`${noticeCls}-closable ${noticeCls}-message`]: {\n      paddingInlineEnd: token.paddingLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      marginInlineStart: token.calc(token.marginSM).add(notificationIconSize).equal(),\n      fontSize: fontSizeLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-description`]: {\n      marginInlineStart: token.calc(token.marginSM).add(notificationIconSize).equal(),\n      fontSize\n    },\n    // Icon & color style in different selector level\n    // https://github.com/ant-design/ant-design/issues/16503\n    // https://github.com/ant-design/ant-design/issues/15512\n    [`${noticeCls}-icon`]: {\n      position: 'absolute',\n      fontSize: notificationIconSize,\n      lineHeight: 1,\n      // icon-font\n      [`&-success${iconCls}`]: {\n        color: colorSuccess\n      },\n      [`&-info${iconCls}`]: {\n        color: colorInfo\n      },\n      [`&-warning${iconCls}`]: {\n        color: colorWarning\n      },\n      [`&-error${iconCls}`]: {\n        color: colorError\n      }\n    },\n    [`${noticeCls}-close`]: Object.assign({\n      position: 'absolute',\n      top: token.notificationPaddingVertical,\n      insetInlineEnd: token.notificationPaddingHorizontal,\n      color: token.colorIcon,\n      outline: 'none',\n      width: token.notificationCloseButtonSize,\n      height: token.notificationCloseButtonSize,\n      borderRadius: token.borderRadiusSM,\n      transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      background: 'none',\n      border: 'none',\n      '&:hover': {\n        color: token.colorIconHover,\n        backgroundColor: token.colorBgTextHover\n      },\n      '&:active': {\n        backgroundColor: token.colorBgTextActive\n      }\n    }, genFocusStyle(token)),\n    [`${noticeCls}-progress`]: {\n      position: 'absolute',\n      display: 'block',\n      appearance: 'none',\n      inlineSize: `calc(100% - ${unit(borderRadiusLG)} * 2)`,\n      left: {\n        _skip_check_: true,\n        value: borderRadiusLG\n      },\n      right: {\n        _skip_check_: true,\n        value: borderRadiusLG\n      },\n      bottom: 0,\n      blockSize: notificationProgressHeight,\n      border: 0,\n      '&, &::-webkit-progress-bar': {\n        borderRadius: borderRadiusLG,\n        backgroundColor: `rgba(0, 0, 0, 0.04)`\n      },\n      '&::-moz-progress-bar': {\n        background: notificationProgressBg\n      },\n      '&::-webkit-progress-value': {\n        borderRadius: borderRadiusLG,\n        background: notificationProgressBg\n      }\n    },\n    [`${noticeCls}-actions`]: {\n      float: 'right',\n      marginTop: token.marginSM\n    }\n  };\n};\nconst genNotificationStyle = token => {\n  const {\n    componentCls,\n    // .ant-notification\n    notificationMarginBottom,\n    notificationMarginEdge,\n    motionDurationMid,\n    motionEaseInOut\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  const fadeOut = new Keyframes('antNotificationFadeOut', {\n    '0%': {\n      maxHeight: token.animationMaxHeight,\n      marginBottom: notificationMarginBottom\n    },\n    '100%': {\n      maxHeight: 0,\n      marginBottom: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      opacity: 0\n    }\n  });\n  return [\n  // ============================ Holder ============================\n  {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'fixed',\n      zIndex: token.zIndexPopup,\n      marginRight: {\n        value: notificationMarginEdge,\n        _skip_check_: true\n      },\n      [`${componentCls}-hook-holder`]: {\n        position: 'relative'\n      },\n      //  animation\n      [`${componentCls}-fade-appear-prepare`]: {\n        opacity: '0 !important'\n      },\n      [`${componentCls}-fade-enter, ${componentCls}-fade-appear`]: {\n        animationDuration: token.motionDurationMid,\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        opacity: 0,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-leave`]: {\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        animationDuration: motionDurationMid,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n        animationPlayState: 'running'\n      },\n      [`${componentCls}-fade-leave${componentCls}-fade-leave-active`]: {\n        animationName: fadeOut,\n        animationPlayState: 'running'\n      },\n      // RTL\n      '&-rtl': {\n        direction: 'rtl',\n        [`${noticeCls}-actions`]: {\n          float: 'left'\n        }\n      }\n    })\n  },\n  // ============================ Notice ============================\n  {\n    [componentCls]: {\n      [`${noticeCls}-wrapper`]: Object.assign({}, genNoticeStyle(token))\n    }\n  }];\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = token => ({\n  zIndexPopup: token.zIndexPopupBase + CONTAINER_MAX_OFFSET + 50,\n  width: 384\n});\nexport const prepareNotificationToken = token => {\n  const notificationPaddingVertical = token.paddingMD;\n  const notificationPaddingHorizontal = token.paddingLG;\n  const notificationToken = mergeToken(token, {\n    notificationBg: token.colorBgElevated,\n    notificationPaddingVertical,\n    notificationPaddingHorizontal,\n    notificationIconSize: token.calc(token.fontSizeLG).mul(token.lineHeightLG).equal(),\n    notificationCloseButtonSize: token.calc(token.controlHeightLG).mul(0.55).equal(),\n    notificationMarginBottom: token.margin,\n    notificationPadding: `${unit(token.paddingMD)} ${unit(token.paddingContentHorizontalLG)}`,\n    notificationMarginEdge: token.marginLG,\n    animationMaxHeight: 150,\n    notificationStackLayer: 3,\n    notificationProgressHeight: 2,\n    notificationProgressBg: `linear-gradient(90deg, ${token.colorPrimaryBorderHover}, ${token.colorPrimary})`\n  });\n  return notificationToken;\n};\nexport default genStyleHooks('Notification', token => {\n  const notificationToken = prepareNotificationToken(token);\n  return [genNotificationStyle(notificationToken), genNotificationPlacementStyle(notificationToken), genStackStyle(notificationToken)];\n}, prepareComponentToken);"]},"metadata":{},"sourceType":"module"}