{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"columnType\"];\nimport * as React from 'react';\nimport { INTERNAL_COL_DEFINE } from \"./utils/legacyUtil\";\nimport { useContext } from '@rc-component/context';\nimport TableContext from \"./context/TableContext\";\n\nfunction ColGroup(_ref) {\n  var colWidths = _ref.colWidths,\n      columns = _ref.columns,\n      columCount = _ref.columCount;\n\n  var _useContext = useContext(TableContext, ['tableLayout']),\n      tableLayout = _useContext.tableLayout;\n\n  var cols = [];\n  var len = columCount || columns.length; // Only insert col with width & additional props\n  // Skip if rest col do not have any useful info\n\n  var mustInsert = false;\n\n  for (var i = len - 1; i >= 0; i -= 1) {\n    var width = colWidths[i];\n    var column = columns && columns[i];\n    var additionalProps = void 0;\n    var minWidth = void 0;\n\n    if (column) {\n      additionalProps = column[INTERNAL_COL_DEFINE]; // fixed will cause layout problems\n\n      if (tableLayout === 'auto') {\n        minWidth = column.minWidth;\n      }\n    }\n\n    if (width || minWidth || additionalProps || mustInsert) {\n      var _ref2 = additionalProps || {},\n          columnType = _ref2.columnType,\n          restAdditionalProps = _objectWithoutProperties(_ref2, _excluded);\n\n      cols.unshift( /*#__PURE__*/React.createElement(\"col\", _extends({\n        key: i,\n        style: {\n          width: width,\n          minWidth: minWidth\n        }\n      }, restAdditionalProps)));\n      mustInsert = true;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"colgroup\", null, cols);\n}\n\nexport default ColGroup;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-table/es/ColGroup.js"],"names":["_extends","_objectWithoutProperties","_excluded","React","INTERNAL_COL_DEFINE","useContext","TableContext","ColGroup","_ref","colWidths","columns","columCount","_useContext","tableLayout","cols","len","length","mustInsert","i","width","column","additionalProps","minWidth","_ref2","columnType","restAdditionalProps","unshift","createElement","key","style"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,IAAIC,SAAS,GAAG,CAAC,YAAD,CAAhB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AACA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACEC,OAAO,GAAGF,IAAI,CAACE,OADjB;AAAA,MAEEC,UAAU,GAAGH,IAAI,CAACG,UAFpB;;AAGA,MAAIC,WAAW,GAAGP,UAAU,CAACC,YAAD,EAAe,CAAC,aAAD,CAAf,CAA5B;AAAA,MACEO,WAAW,GAAGD,WAAW,CAACC,WAD5B;;AAEA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,GAAG,GAAGJ,UAAU,IAAID,OAAO,CAACM,MAAhC,CAPsB,CAStB;AACA;;AACA,MAAIC,UAAU,GAAG,KAAjB;;AACA,OAAK,IAAIC,CAAC,GAAGH,GAAG,GAAG,CAAnB,EAAsBG,CAAC,IAAI,CAA3B,EAA8BA,CAAC,IAAI,CAAnC,EAAsC;AACpC,QAAIC,KAAK,GAAGV,SAAS,CAACS,CAAD,CAArB;AACA,QAAIE,MAAM,GAAGV,OAAO,IAAIA,OAAO,CAACQ,CAAD,CAA/B;AACA,QAAIG,eAAe,GAAG,KAAK,CAA3B;AACA,QAAIC,QAAQ,GAAG,KAAK,CAApB;;AACA,QAAIF,MAAJ,EAAY;AACVC,MAAAA,eAAe,GAAGD,MAAM,CAAChB,mBAAD,CAAxB,CADU,CAGV;;AACA,UAAIS,WAAW,KAAK,MAApB,EAA4B;AAC1BS,QAAAA,QAAQ,GAAGF,MAAM,CAACE,QAAlB;AACD;AACF;;AACD,QAAIH,KAAK,IAAIG,QAAT,IAAqBD,eAArB,IAAwCJ,UAA5C,EAAwD;AACtD,UAAIM,KAAK,GAAGF,eAAe,IAAI,EAA/B;AAAA,UACEG,UAAU,GAAGD,KAAK,CAACC,UADrB;AAAA,UAEEC,mBAAmB,GAAGxB,wBAAwB,CAACsB,KAAD,EAAQrB,SAAR,CAFhD;;AAGAY,MAAAA,IAAI,CAACY,OAAL,EAAc,aAAavB,KAAK,CAACwB,aAAN,CAAoB,KAApB,EAA2B3B,QAAQ,CAAC;AAC7D4B,QAAAA,GAAG,EAAEV,CADwD;AAE7DW,QAAAA,KAAK,EAAE;AACLV,UAAAA,KAAK,EAAEA,KADF;AAELG,UAAAA,QAAQ,EAAEA;AAFL;AAFsD,OAAD,EAM3DG,mBAN2D,CAAnC,CAA3B;AAOAR,MAAAA,UAAU,GAAG,IAAb;AACD;AACF;;AACD,SAAO,aAAad,KAAK,CAACwB,aAAN,CAAoB,UAApB,EAAgC,IAAhC,EAAsCb,IAAtC,CAApB;AACD;;AACD,eAAeP,QAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"columnType\"];\nimport * as React from 'react';\nimport { INTERNAL_COL_DEFINE } from \"./utils/legacyUtil\";\nimport { useContext } from '@rc-component/context';\nimport TableContext from \"./context/TableContext\";\nfunction ColGroup(_ref) {\n  var colWidths = _ref.colWidths,\n    columns = _ref.columns,\n    columCount = _ref.columCount;\n  var _useContext = useContext(TableContext, ['tableLayout']),\n    tableLayout = _useContext.tableLayout;\n  var cols = [];\n  var len = columCount || columns.length;\n\n  // Only insert col with width & additional props\n  // Skip if rest col do not have any useful info\n  var mustInsert = false;\n  for (var i = len - 1; i >= 0; i -= 1) {\n    var width = colWidths[i];\n    var column = columns && columns[i];\n    var additionalProps = void 0;\n    var minWidth = void 0;\n    if (column) {\n      additionalProps = column[INTERNAL_COL_DEFINE];\n\n      // fixed will cause layout problems\n      if (tableLayout === 'auto') {\n        minWidth = column.minWidth;\n      }\n    }\n    if (width || minWidth || additionalProps || mustInsert) {\n      var _ref2 = additionalProps || {},\n        columnType = _ref2.columnType,\n        restAdditionalProps = _objectWithoutProperties(_ref2, _excluded);\n      cols.unshift( /*#__PURE__*/React.createElement(\"col\", _extends({\n        key: i,\n        style: {\n          width: width,\n          minWidth: minWidth\n        }\n      }, restAdditionalProps)));\n      mustInsert = true;\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"colgroup\", null, cols);\n}\nexport default ColGroup;"]},"metadata":{},"sourceType":"module"}