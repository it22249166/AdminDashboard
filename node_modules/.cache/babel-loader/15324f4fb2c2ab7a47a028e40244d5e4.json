{"ast":null,"code":"\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport RcTreeSelect, { SHOW_ALL, SHOW_CHILD, SHOW_PARENT, TreeNode } from 'rc-tree-select';\nimport omit from \"rc-util/es/omit\";\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport { getTransitionName } from '../_util/motion';\nimport genPurePanel from '../_util/PurePanel';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useSize from '../config-provider/hooks/useSize';\nimport { FormItemInputContext } from '../form/context';\nimport useVariant from '../form/hooks/useVariants';\nimport mergedBuiltinPlacements from '../select/mergedBuiltinPlacements';\nimport useSelectStyle from '../select/style';\nimport useIcons from '../select/useIcons';\nimport useShowArrow from '../select/useShowArrow';\nimport { useCompactItemContext } from '../space/Compact';\nimport { useToken } from '../theme/internal';\nimport SwitcherIconCom from '../tree/utils/iconUtil';\nimport useStyle from './style';\n\nconst InternalTreeSelect = (props, ref) => {\n  var _a;\n\n  const {\n    prefixCls: customizePrefixCls,\n    size: customizeSize,\n    disabled: customDisabled,\n    bordered = true,\n    className,\n    rootClassName,\n    treeCheckable,\n    multiple,\n    listHeight = 256,\n    listItemHeight: customListItemHeight,\n    placement,\n    notFoundContent,\n    switcherIcon,\n    treeLine,\n    getPopupContainer,\n    popupClassName,\n    dropdownClassName,\n    treeIcon = false,\n    transitionName,\n    choiceTransitionName = '',\n    status: customStatus,\n    treeExpandAction,\n    builtinPlacements,\n    dropdownMatchSelectWidth,\n    popupMatchSelectWidth,\n    allowClear,\n    variant: customVariant,\n    dropdownStyle,\n    tagRender,\n    maxCount,\n    showCheckedStrategy,\n    treeCheckStrictly\n  } = props,\n        restProps = __rest(props, [\"prefixCls\", \"size\", \"disabled\", \"bordered\", \"className\", \"rootClassName\", \"treeCheckable\", \"multiple\", \"listHeight\", \"listItemHeight\", \"placement\", \"notFoundContent\", \"switcherIcon\", \"treeLine\", \"getPopupContainer\", \"popupClassName\", \"dropdownClassName\", \"treeIcon\", \"transitionName\", \"choiceTransitionName\", \"status\", \"treeExpandAction\", \"builtinPlacements\", \"dropdownMatchSelectWidth\", \"popupMatchSelectWidth\", \"allowClear\", \"variant\", \"dropdownStyle\", \"tagRender\", \"maxCount\", \"showCheckedStrategy\", \"treeCheckStrictly\"]);\n\n  const {\n    getPopupContainer: getContextPopupContainer,\n    getPrefixCls,\n    renderEmpty,\n    direction,\n    virtual,\n    popupMatchSelectWidth: contextPopupMatchSelectWidth,\n    popupOverflow\n  } = React.useContext(ConfigContext);\n  const [, token] = useToken();\n  const listItemHeight = customListItemHeight !== null && customListItemHeight !== void 0 ? customListItemHeight : (token === null || token === void 0 ? void 0 : token.controlHeightSM) + (token === null || token === void 0 ? void 0 : token.paddingXXS);\n\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('TreeSelect');\n    process.env.NODE_ENV !== \"production\" ? warning(multiple !== false || !treeCheckable, 'usage', '`multiple` will always be `true` when `treeCheckable` is true') : void 0;\n    warning.deprecated(!dropdownClassName, 'dropdownClassName', 'popupClassName');\n    warning.deprecated(dropdownMatchSelectWidth === undefined, 'dropdownMatchSelectWidth', 'popupMatchSelectWidth');\n    process.env.NODE_ENV !== \"production\" ? warning(!('showArrow' in props), 'deprecated', '`showArrow` is deprecated which will be removed in next major version. It will be a default behavior, you can hide it by setting `suffixIcon` to null.') : void 0;\n    warning.deprecated(!('bordered' in props), 'bordered', 'variant');\n  }\n\n  const rootPrefixCls = getPrefixCls();\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  const treePrefixCls = getPrefixCls('select-tree', customizePrefixCls);\n  const treeSelectPrefixCls = getPrefixCls('tree-select', customizePrefixCls);\n  const {\n    compactSize,\n    compactItemClassnames\n  } = useCompactItemContext(prefixCls, direction);\n  const rootCls = useCSSVarCls(prefixCls);\n  const treeSelectRootCls = useCSSVarCls(treeSelectPrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useSelectStyle(prefixCls, rootCls);\n  const [treeSelectWrapCSSVar] = useStyle(treeSelectPrefixCls, treePrefixCls, treeSelectRootCls);\n  const [variant, enableVariantCls] = useVariant('treeSelect', customVariant, bordered);\n  const mergedDropdownClassName = classNames(popupClassName || dropdownClassName, `${treeSelectPrefixCls}-dropdown`, {\n    [`${treeSelectPrefixCls}-dropdown-rtl`]: direction === 'rtl'\n  }, rootClassName, cssVarCls, rootCls, treeSelectRootCls, hashId);\n  const isMultiple = !!(treeCheckable || multiple);\n  const mergedMaxCount = React.useMemo(() => {\n    if (maxCount && (showCheckedStrategy === 'SHOW_ALL' && !treeCheckStrictly || showCheckedStrategy === 'SHOW_PARENT')) {\n      return undefined;\n    }\n\n    return maxCount;\n  }, [maxCount, showCheckedStrategy, treeCheckStrictly]);\n  const showSuffixIcon = useShowArrow(props.suffixIcon, props.showArrow);\n  const mergedPopupMatchSelectWidth = (_a = popupMatchSelectWidth !== null && popupMatchSelectWidth !== void 0 ? popupMatchSelectWidth : dropdownMatchSelectWidth) !== null && _a !== void 0 ? _a : contextPopupMatchSelectWidth; // ===================== Form =====================\n\n  const {\n    status: contextStatus,\n    hasFeedback,\n    isFormItemInput,\n    feedbackIcon\n  } = React.useContext(FormItemInputContext);\n  const mergedStatus = getMergedStatus(contextStatus, customStatus); // ===================== Icons =====================\n\n  const {\n    suffixIcon,\n    removeIcon,\n    clearIcon\n  } = useIcons(Object.assign(Object.assign({}, restProps), {\n    multiple: isMultiple,\n    showSuffixIcon,\n    hasFeedback,\n    feedbackIcon,\n    prefixCls,\n    componentName: 'TreeSelect'\n  }));\n  const mergedAllowClear = allowClear === true ? {\n    clearIcon\n  } : allowClear; // ===================== Empty =====================\n\n  let mergedNotFound;\n\n  if (notFoundContent !== undefined) {\n    mergedNotFound = notFoundContent;\n  } else {\n    mergedNotFound = (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Select')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n      componentName: \"Select\"\n    });\n  } // ==================== Render =====================\n\n\n  const selectProps = omit(restProps, ['suffixIcon', 'removeIcon', 'clearIcon', 'itemIcon', 'switcherIcon']); // ===================== Placement =====================\n\n  const memoizedPlacement = React.useMemo(() => {\n    if (placement !== undefined) {\n      return placement;\n    }\n\n    return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n  }, [placement, direction]);\n  const mergedSize = useSize(ctx => {\n    var _a;\n\n    return (_a = customizeSize !== null && customizeSize !== void 0 ? customizeSize : compactSize) !== null && _a !== void 0 ? _a : ctx;\n  }); // ===================== Disabled =====================\n\n  const disabled = React.useContext(DisabledContext);\n  const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  const mergedClassName = classNames(!customizePrefixCls && treeSelectPrefixCls, {\n    [`${prefixCls}-lg`]: mergedSize === 'large',\n    [`${prefixCls}-sm`]: mergedSize === 'small',\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-${variant}`]: enableVariantCls,\n    [`${prefixCls}-in-form-item`]: isFormItemInput\n  }, getStatusClassNames(prefixCls, mergedStatus, hasFeedback), compactItemClassnames, className, rootClassName, cssVarCls, rootCls, treeSelectRootCls, hashId);\n\n  const renderSwitcherIcon = nodeProps => /*#__PURE__*/React.createElement(SwitcherIconCom, {\n    prefixCls: treePrefixCls,\n    switcherIcon: switcherIcon,\n    treeNodeProps: nodeProps,\n    showLine: treeLine\n  }); // ============================ zIndex ============================\n\n\n  const [zIndex] = useZIndex('SelectLike', dropdownStyle === null || dropdownStyle === void 0 ? void 0 : dropdownStyle.zIndex);\n  const returnNode = /*#__PURE__*/React.createElement(RcTreeSelect, Object.assign({\n    virtual: virtual,\n    disabled: mergedDisabled\n  }, selectProps, {\n    dropdownMatchSelectWidth: mergedPopupMatchSelectWidth,\n    builtinPlacements: mergedBuiltinPlacements(builtinPlacements, popupOverflow),\n    ref: ref,\n    prefixCls: prefixCls,\n    className: mergedClassName,\n    listHeight: listHeight,\n    listItemHeight: listItemHeight,\n    treeCheckable: treeCheckable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-tree-checkbox-inner`\n    }) : treeCheckable,\n    treeLine: !!treeLine,\n    suffixIcon: suffixIcon,\n    multiple: isMultiple,\n    placement: memoizedPlacement,\n    removeIcon: removeIcon,\n    allowClear: mergedAllowClear,\n    switcherIcon: renderSwitcherIcon,\n    showTreeIcon: treeIcon,\n    notFoundContent: mergedNotFound,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    treeMotion: null,\n    dropdownClassName: mergedDropdownClassName,\n    dropdownStyle: Object.assign(Object.assign({}, dropdownStyle), {\n      zIndex\n    }),\n    choiceTransitionName: getTransitionName(rootPrefixCls, '', choiceTransitionName),\n    transitionName: getTransitionName(rootPrefixCls, 'slide-up', transitionName),\n    treeExpandAction: treeExpandAction,\n    tagRender: isMultiple ? tagRender : undefined,\n    maxCount: mergedMaxCount,\n    showCheckedStrategy: showCheckedStrategy,\n    treeCheckStrictly: treeCheckStrictly\n  }));\n  return wrapCSSVar(treeSelectWrapCSSVar(returnNode));\n};\n\nconst TreeSelectRef = /*#__PURE__*/React.forwardRef(InternalTreeSelect);\nconst TreeSelect = TreeSelectRef; // We don't care debug panel\n\n/* istanbul ignore next */\n\nconst PurePanel = genPurePanel(TreeSelect, 'dropdownAlign', props => omit(props, ['visible']));\nTreeSelect.TreeNode = TreeNode;\nTreeSelect.SHOW_ALL = SHOW_ALL;\nTreeSelect.SHOW_PARENT = SHOW_PARENT;\nTreeSelect.SHOW_CHILD = SHOW_CHILD;\nTreeSelect._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\n\nif (process.env.NODE_ENV !== 'production') {\n  TreeSelect.displayName = 'TreeSelect';\n}\n\nexport { TreeNode };\nexport default TreeSelect;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/tree-select/index.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","RcTreeSelect","SHOW_ALL","SHOW_CHILD","SHOW_PARENT","TreeNode","omit","useZIndex","getTransitionName","genPurePanel","getMergedStatus","getStatusClassNames","devUseWarning","ConfigContext","DefaultRenderEmpty","DisabledContext","useCSSVarCls","useSize","FormItemInputContext","useVariant","mergedBuiltinPlacements","useSelectStyle","useIcons","useShowArrow","useCompactItemContext","useToken","SwitcherIconCom","useStyle","InternalTreeSelect","props","ref","_a","prefixCls","customizePrefixCls","size","customizeSize","disabled","customDisabled","bordered","className","rootClassName","treeCheckable","multiple","listHeight","listItemHeight","customListItemHeight","placement","notFoundContent","switcherIcon","treeLine","getPopupContainer","popupClassName","dropdownClassName","treeIcon","transitionName","choiceTransitionName","status","customStatus","treeExpandAction","builtinPlacements","dropdownMatchSelectWidth","popupMatchSelectWidth","allowClear","variant","customVariant","dropdownStyle","tagRender","maxCount","showCheckedStrategy","treeCheckStrictly","restProps","getContextPopupContainer","getPrefixCls","renderEmpty","direction","virtual","contextPopupMatchSelectWidth","popupOverflow","useContext","token","controlHeightSM","paddingXXS","process","env","NODE_ENV","warning","deprecated","undefined","rootPrefixCls","treePrefixCls","treeSelectPrefixCls","compactSize","compactItemClassnames","rootCls","treeSelectRootCls","wrapCSSVar","hashId","cssVarCls","treeSelectWrapCSSVar","enableVariantCls","mergedDropdownClassName","isMultiple","mergedMaxCount","useMemo","showSuffixIcon","suffixIcon","showArrow","mergedPopupMatchSelectWidth","contextStatus","hasFeedback","isFormItemInput","feedbackIcon","mergedStatus","removeIcon","clearIcon","assign","componentName","mergedAllowClear","mergedNotFound","createElement","selectProps","memoizedPlacement","mergedSize","ctx","mergedDisabled","mergedClassName","renderSwitcherIcon","nodeProps","treeNodeProps","showLine","zIndex","returnNode","showTreeIcon","treeMotion","TreeSelectRef","forwardRef","TreeSelect","PurePanel","_InternalPanelDoNotUseOrYouWillBeFired","displayName"],"mappings":"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","sourcesContent":["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport RcTreeSelect, { SHOW_ALL, SHOW_CHILD, SHOW_PARENT, TreeNode } from 'rc-tree-select';\nimport omit from \"rc-util/es/omit\";\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport { getTransitionName } from '../_util/motion';\nimport genPurePanel from '../_util/PurePanel';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useSize from '../config-provider/hooks/useSize';\nimport { FormItemInputContext } from '../form/context';\nimport useVariant from '../form/hooks/useVariants';\nimport mergedBuiltinPlacements from '../select/mergedBuiltinPlacements';\nimport useSelectStyle from '../select/style';\nimport useIcons from '../select/useIcons';\nimport useShowArrow from '../select/useShowArrow';\nimport { useCompactItemContext } from '../space/Compact';\nimport { useToken } from '../theme/internal';\nimport SwitcherIconCom from '../tree/utils/iconUtil';\nimport useStyle from './style';\nconst InternalTreeSelect = (props, ref) => {\n  var _a;\n  const {\n      prefixCls: customizePrefixCls,\n      size: customizeSize,\n      disabled: customDisabled,\n      bordered = true,\n      className,\n      rootClassName,\n      treeCheckable,\n      multiple,\n      listHeight = 256,\n      listItemHeight: customListItemHeight,\n      placement,\n      notFoundContent,\n      switcherIcon,\n      treeLine,\n      getPopupContainer,\n      popupClassName,\n      dropdownClassName,\n      treeIcon = false,\n      transitionName,\n      choiceTransitionName = '',\n      status: customStatus,\n      treeExpandAction,\n      builtinPlacements,\n      dropdownMatchSelectWidth,\n      popupMatchSelectWidth,\n      allowClear,\n      variant: customVariant,\n      dropdownStyle,\n      tagRender,\n      maxCount,\n      showCheckedStrategy,\n      treeCheckStrictly\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"size\", \"disabled\", \"bordered\", \"className\", \"rootClassName\", \"treeCheckable\", \"multiple\", \"listHeight\", \"listItemHeight\", \"placement\", \"notFoundContent\", \"switcherIcon\", \"treeLine\", \"getPopupContainer\", \"popupClassName\", \"dropdownClassName\", \"treeIcon\", \"transitionName\", \"choiceTransitionName\", \"status\", \"treeExpandAction\", \"builtinPlacements\", \"dropdownMatchSelectWidth\", \"popupMatchSelectWidth\", \"allowClear\", \"variant\", \"dropdownStyle\", \"tagRender\", \"maxCount\", \"showCheckedStrategy\", \"treeCheckStrictly\"]);\n  const {\n    getPopupContainer: getContextPopupContainer,\n    getPrefixCls,\n    renderEmpty,\n    direction,\n    virtual,\n    popupMatchSelectWidth: contextPopupMatchSelectWidth,\n    popupOverflow\n  } = React.useContext(ConfigContext);\n  const [, token] = useToken();\n  const listItemHeight = customListItemHeight !== null && customListItemHeight !== void 0 ? customListItemHeight : (token === null || token === void 0 ? void 0 : token.controlHeightSM) + (token === null || token === void 0 ? void 0 : token.paddingXXS);\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('TreeSelect');\n    process.env.NODE_ENV !== \"production\" ? warning(multiple !== false || !treeCheckable, 'usage', '`multiple` will always be `true` when `treeCheckable` is true') : void 0;\n    warning.deprecated(!dropdownClassName, 'dropdownClassName', 'popupClassName');\n    warning.deprecated(dropdownMatchSelectWidth === undefined, 'dropdownMatchSelectWidth', 'popupMatchSelectWidth');\n    process.env.NODE_ENV !== \"production\" ? warning(!('showArrow' in props), 'deprecated', '`showArrow` is deprecated which will be removed in next major version. It will be a default behavior, you can hide it by setting `suffixIcon` to null.') : void 0;\n    warning.deprecated(!('bordered' in props), 'bordered', 'variant');\n  }\n  const rootPrefixCls = getPrefixCls();\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  const treePrefixCls = getPrefixCls('select-tree', customizePrefixCls);\n  const treeSelectPrefixCls = getPrefixCls('tree-select', customizePrefixCls);\n  const {\n    compactSize,\n    compactItemClassnames\n  } = useCompactItemContext(prefixCls, direction);\n  const rootCls = useCSSVarCls(prefixCls);\n  const treeSelectRootCls = useCSSVarCls(treeSelectPrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useSelectStyle(prefixCls, rootCls);\n  const [treeSelectWrapCSSVar] = useStyle(treeSelectPrefixCls, treePrefixCls, treeSelectRootCls);\n  const [variant, enableVariantCls] = useVariant('treeSelect', customVariant, bordered);\n  const mergedDropdownClassName = classNames(popupClassName || dropdownClassName, `${treeSelectPrefixCls}-dropdown`, {\n    [`${treeSelectPrefixCls}-dropdown-rtl`]: direction === 'rtl'\n  }, rootClassName, cssVarCls, rootCls, treeSelectRootCls, hashId);\n  const isMultiple = !!(treeCheckable || multiple);\n  const mergedMaxCount = React.useMemo(() => {\n    if (maxCount && (showCheckedStrategy === 'SHOW_ALL' && !treeCheckStrictly || showCheckedStrategy === 'SHOW_PARENT')) {\n      return undefined;\n    }\n    return maxCount;\n  }, [maxCount, showCheckedStrategy, treeCheckStrictly]);\n  const showSuffixIcon = useShowArrow(props.suffixIcon, props.showArrow);\n  const mergedPopupMatchSelectWidth = (_a = popupMatchSelectWidth !== null && popupMatchSelectWidth !== void 0 ? popupMatchSelectWidth : dropdownMatchSelectWidth) !== null && _a !== void 0 ? _a : contextPopupMatchSelectWidth;\n  // ===================== Form =====================\n  const {\n    status: contextStatus,\n    hasFeedback,\n    isFormItemInput,\n    feedbackIcon\n  } = React.useContext(FormItemInputContext);\n  const mergedStatus = getMergedStatus(contextStatus, customStatus);\n  // ===================== Icons =====================\n  const {\n    suffixIcon,\n    removeIcon,\n    clearIcon\n  } = useIcons(Object.assign(Object.assign({}, restProps), {\n    multiple: isMultiple,\n    showSuffixIcon,\n    hasFeedback,\n    feedbackIcon,\n    prefixCls,\n    componentName: 'TreeSelect'\n  }));\n  const mergedAllowClear = allowClear === true ? {\n    clearIcon\n  } : allowClear;\n  // ===================== Empty =====================\n  let mergedNotFound;\n  if (notFoundContent !== undefined) {\n    mergedNotFound = notFoundContent;\n  } else {\n    mergedNotFound = (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Select')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n      componentName: \"Select\"\n    });\n  }\n  // ==================== Render =====================\n  const selectProps = omit(restProps, ['suffixIcon', 'removeIcon', 'clearIcon', 'itemIcon', 'switcherIcon']);\n  // ===================== Placement =====================\n  const memoizedPlacement = React.useMemo(() => {\n    if (placement !== undefined) {\n      return placement;\n    }\n    return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n  }, [placement, direction]);\n  const mergedSize = useSize(ctx => {\n    var _a;\n    return (_a = customizeSize !== null && customizeSize !== void 0 ? customizeSize : compactSize) !== null && _a !== void 0 ? _a : ctx;\n  });\n  // ===================== Disabled =====================\n  const disabled = React.useContext(DisabledContext);\n  const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  const mergedClassName = classNames(!customizePrefixCls && treeSelectPrefixCls, {\n    [`${prefixCls}-lg`]: mergedSize === 'large',\n    [`${prefixCls}-sm`]: mergedSize === 'small',\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-${variant}`]: enableVariantCls,\n    [`${prefixCls}-in-form-item`]: isFormItemInput\n  }, getStatusClassNames(prefixCls, mergedStatus, hasFeedback), compactItemClassnames, className, rootClassName, cssVarCls, rootCls, treeSelectRootCls, hashId);\n  const renderSwitcherIcon = nodeProps => (/*#__PURE__*/React.createElement(SwitcherIconCom, {\n    prefixCls: treePrefixCls,\n    switcherIcon: switcherIcon,\n    treeNodeProps: nodeProps,\n    showLine: treeLine\n  }));\n  // ============================ zIndex ============================\n  const [zIndex] = useZIndex('SelectLike', dropdownStyle === null || dropdownStyle === void 0 ? void 0 : dropdownStyle.zIndex);\n  const returnNode = /*#__PURE__*/React.createElement(RcTreeSelect, Object.assign({\n    virtual: virtual,\n    disabled: mergedDisabled\n  }, selectProps, {\n    dropdownMatchSelectWidth: mergedPopupMatchSelectWidth,\n    builtinPlacements: mergedBuiltinPlacements(builtinPlacements, popupOverflow),\n    ref: ref,\n    prefixCls: prefixCls,\n    className: mergedClassName,\n    listHeight: listHeight,\n    listItemHeight: listItemHeight,\n    treeCheckable: treeCheckable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-tree-checkbox-inner`\n    }) : treeCheckable,\n    treeLine: !!treeLine,\n    suffixIcon: suffixIcon,\n    multiple: isMultiple,\n    placement: memoizedPlacement,\n    removeIcon: removeIcon,\n    allowClear: mergedAllowClear,\n    switcherIcon: renderSwitcherIcon,\n    showTreeIcon: treeIcon,\n    notFoundContent: mergedNotFound,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    treeMotion: null,\n    dropdownClassName: mergedDropdownClassName,\n    dropdownStyle: Object.assign(Object.assign({}, dropdownStyle), {\n      zIndex\n    }),\n    choiceTransitionName: getTransitionName(rootPrefixCls, '', choiceTransitionName),\n    transitionName: getTransitionName(rootPrefixCls, 'slide-up', transitionName),\n    treeExpandAction: treeExpandAction,\n    tagRender: isMultiple ? tagRender : undefined,\n    maxCount: mergedMaxCount,\n    showCheckedStrategy: showCheckedStrategy,\n    treeCheckStrictly: treeCheckStrictly\n  }));\n  return wrapCSSVar(treeSelectWrapCSSVar(returnNode));\n};\nconst TreeSelectRef = /*#__PURE__*/React.forwardRef(InternalTreeSelect);\nconst TreeSelect = TreeSelectRef;\n// We don't care debug panel\n/* istanbul ignore next */\nconst PurePanel = genPurePanel(TreeSelect, 'dropdownAlign', props => omit(props, ['visible']));\nTreeSelect.TreeNode = TreeNode;\nTreeSelect.SHOW_ALL = SHOW_ALL;\nTreeSelect.SHOW_PARENT = SHOW_PARENT;\nTreeSelect.SHOW_CHILD = SHOW_CHILD;\nTreeSelect._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  TreeSelect.displayName = 'TreeSelect';\n}\nexport { TreeNode };\nexport default TreeSelect;"]},"metadata":{},"sourceType":"module"}