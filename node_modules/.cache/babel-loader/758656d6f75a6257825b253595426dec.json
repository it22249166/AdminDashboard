{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport { UnstableContext } from \"../context\";\n/** Drag to delete offset. It's a user experience number for dragging out */\n\nvar REMOVE_DIST = 130;\n\nfunction getPosition(e) {\n  var obj = 'targetTouches' in e ? e.targetTouches[0] : e;\n  return {\n    pageX: obj.pageX,\n    pageY: obj.pageY\n  };\n}\n\nfunction useDrag(containerRef, direction, rawValues, min, max, formatValue, triggerChange, finishChange, offsetValues, editable, minCount) {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      draggingValue = _React$useState2[0],\n      setDraggingValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      draggingIndex = _React$useState4[0],\n      setDraggingIndex = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      draggingDelete = _React$useState6[0],\n      setDraggingDelete = _React$useState6[1];\n\n  var _React$useState7 = React.useState(rawValues),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      cacheValues = _React$useState8[0],\n      setCacheValues = _React$useState8[1];\n\n  var _React$useState9 = React.useState(rawValues),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      originValues = _React$useState10[0],\n      setOriginValues = _React$useState10[1];\n\n  var mouseMoveEventRef = React.useRef(null);\n  var mouseUpEventRef = React.useRef(null);\n  var touchEventTargetRef = React.useRef(null);\n\n  var _React$useContext = React.useContext(UnstableContext),\n      onDragStart = _React$useContext.onDragStart,\n      onDragChange = _React$useContext.onDragChange;\n\n  useLayoutEffect(function () {\n    if (draggingIndex === -1) {\n      setCacheValues(rawValues);\n    }\n  }, [rawValues, draggingIndex]); // Clean up event\n\n  React.useEffect(function () {\n    return function () {\n      document.removeEventListener('mousemove', mouseMoveEventRef.current);\n      document.removeEventListener('mouseup', mouseUpEventRef.current);\n\n      if (touchEventTargetRef.current) {\n        touchEventTargetRef.current.removeEventListener('touchmove', mouseMoveEventRef.current);\n        touchEventTargetRef.current.removeEventListener('touchend', mouseUpEventRef.current);\n      }\n    };\n  }, []);\n\n  var flushValues = function flushValues(nextValues, nextValue, deleteMark) {\n    // Perf: Only update state when value changed\n    if (nextValue !== undefined) {\n      setDraggingValue(nextValue);\n    }\n\n    setCacheValues(nextValues);\n    var changeValues = nextValues;\n\n    if (deleteMark) {\n      changeValues = nextValues.filter(function (_, i) {\n        return i !== draggingIndex;\n      });\n    }\n\n    triggerChange(changeValues);\n\n    if (onDragChange) {\n      onDragChange({\n        rawValues: nextValues,\n        deleteIndex: deleteMark ? draggingIndex : -1,\n        draggingIndex: draggingIndex,\n        draggingValue: nextValue\n      });\n    }\n  };\n\n  var updateCacheValue = useEvent(function (valueIndex, offsetPercent, deleteMark) {\n    if (valueIndex === -1) {\n      // >>>> Dragging on the track\n      var startValue = originValues[0];\n      var endValue = originValues[originValues.length - 1];\n      var maxStartOffset = min - startValue;\n      var maxEndOffset = max - endValue; // Get valid offset\n\n      var offset = offsetPercent * (max - min);\n      offset = Math.max(offset, maxStartOffset);\n      offset = Math.min(offset, maxEndOffset); // Use first value to revert back of valid offset (like steps marks)\n\n      var formatStartValue = formatValue(startValue + offset);\n      offset = formatStartValue - startValue;\n      var cloneCacheValues = originValues.map(function (val) {\n        return val + offset;\n      });\n      flushValues(cloneCacheValues);\n    } else {\n      // >>>> Dragging on the handle\n      var offsetDist = (max - min) * offsetPercent; // Always start with the valueIndex origin value\n\n      var cloneValues = _toConsumableArray(cacheValues);\n\n      cloneValues[valueIndex] = originValues[valueIndex];\n      var next = offsetValues(cloneValues, offsetDist, valueIndex, 'dist');\n      flushValues(next.values, next.value, deleteMark);\n    }\n  });\n\n  var onStartMove = function onStartMove(e, valueIndex, startValues) {\n    e.stopPropagation(); // 如果是点击 track 触发的，需要传入变化后的初始值，而不能直接用 rawValues\n\n    var initialValues = startValues || rawValues;\n    var originValue = initialValues[valueIndex];\n    setDraggingIndex(valueIndex);\n    setDraggingValue(originValue);\n    setOriginValues(initialValues);\n    setCacheValues(initialValues);\n    setDraggingDelete(false);\n\n    var _getPosition = getPosition(e),\n        startX = _getPosition.pageX,\n        startY = _getPosition.pageY; // We declare it here since closure can't get outer latest value\n\n\n    var deleteMark = false; // Internal trigger event\n\n    if (onDragStart) {\n      onDragStart({\n        rawValues: initialValues,\n        draggingIndex: valueIndex,\n        draggingValue: originValue\n      });\n    } // Moving\n\n\n    var onMouseMove = function onMouseMove(event) {\n      event.preventDefault();\n\n      var _getPosition2 = getPosition(event),\n          moveX = _getPosition2.pageX,\n          moveY = _getPosition2.pageY;\n\n      var offsetX = moveX - startX;\n      var offsetY = moveY - startY;\n\n      var _containerRef$current = containerRef.current.getBoundingClientRect(),\n          width = _containerRef$current.width,\n          height = _containerRef$current.height;\n\n      var offSetPercent;\n      var removeDist;\n\n      switch (direction) {\n        case 'btt':\n          offSetPercent = -offsetY / height;\n          removeDist = offsetX;\n          break;\n\n        case 'ttb':\n          offSetPercent = offsetY / height;\n          removeDist = offsetX;\n          break;\n\n        case 'rtl':\n          offSetPercent = -offsetX / width;\n          removeDist = offsetY;\n          break;\n\n        default:\n          offSetPercent = offsetX / width;\n          removeDist = offsetY;\n      } // Check if need mark remove\n\n\n      deleteMark = editable ? Math.abs(removeDist) > REMOVE_DIST && minCount < cacheValues.length : false;\n      setDraggingDelete(deleteMark);\n      updateCacheValue(valueIndex, offSetPercent, deleteMark);\n    }; // End\n\n\n    var onMouseUp = function onMouseUp(event) {\n      event.preventDefault();\n      document.removeEventListener('mouseup', onMouseUp);\n      document.removeEventListener('mousemove', onMouseMove);\n\n      if (touchEventTargetRef.current) {\n        touchEventTargetRef.current.removeEventListener('touchmove', mouseMoveEventRef.current);\n        touchEventTargetRef.current.removeEventListener('touchend', mouseUpEventRef.current);\n      }\n\n      mouseMoveEventRef.current = null;\n      mouseUpEventRef.current = null;\n      touchEventTargetRef.current = null;\n      finishChange(deleteMark);\n      setDraggingIndex(-1);\n      setDraggingDelete(false);\n    };\n\n    document.addEventListener('mouseup', onMouseUp);\n    document.addEventListener('mousemove', onMouseMove);\n    e.currentTarget.addEventListener('touchend', onMouseUp);\n    e.currentTarget.addEventListener('touchmove', onMouseMove);\n    mouseMoveEventRef.current = onMouseMove;\n    mouseUpEventRef.current = onMouseUp;\n    touchEventTargetRef.current = e.currentTarget;\n  }; // Only return cache value when it mapping with rawValues\n\n\n  var returnValues = React.useMemo(function () {\n    var sourceValues = _toConsumableArray(rawValues).sort(function (a, b) {\n      return a - b;\n    });\n\n    var targetValues = _toConsumableArray(cacheValues).sort(function (a, b) {\n      return a - b;\n    });\n\n    var counts = {};\n    targetValues.forEach(function (val) {\n      counts[val] = (counts[val] || 0) + 1;\n    });\n    sourceValues.forEach(function (val) {\n      counts[val] = (counts[val] || 0) - 1;\n    });\n    var maxDiffCount = editable ? 1 : 0;\n    var diffCount = Object.values(counts).reduce(function (prev, next) {\n      return prev + Math.abs(next);\n    }, 0);\n    return diffCount <= maxDiffCount ? cacheValues : rawValues;\n  }, [rawValues, cacheValues, editable]);\n  return [draggingIndex, draggingValue, draggingDelete, returnValues, onStartMove];\n}\n\nexport default useDrag;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-slider/es/hooks/useDrag.js"],"names":["_toConsumableArray","_slicedToArray","React","useEvent","useLayoutEffect","UnstableContext","REMOVE_DIST","getPosition","e","obj","targetTouches","pageX","pageY","useDrag","containerRef","direction","rawValues","min","max","formatValue","triggerChange","finishChange","offsetValues","editable","minCount","_React$useState","useState","_React$useState2","draggingValue","setDraggingValue","_React$useState3","_React$useState4","draggingIndex","setDraggingIndex","_React$useState5","_React$useState6","draggingDelete","setDraggingDelete","_React$useState7","_React$useState8","cacheValues","setCacheValues","_React$useState9","_React$useState10","originValues","setOriginValues","mouseMoveEventRef","useRef","mouseUpEventRef","touchEventTargetRef","_React$useContext","useContext","onDragStart","onDragChange","useEffect","document","removeEventListener","current","flushValues","nextValues","nextValue","deleteMark","undefined","changeValues","filter","_","i","deleteIndex","updateCacheValue","valueIndex","offsetPercent","startValue","endValue","length","maxStartOffset","maxEndOffset","offset","Math","formatStartValue","cloneCacheValues","map","val","offsetDist","cloneValues","next","values","value","onStartMove","startValues","stopPropagation","initialValues","originValue","_getPosition","startX","startY","onMouseMove","event","preventDefault","_getPosition2","moveX","moveY","offsetX","offsetY","_containerRef$current","getBoundingClientRect","width","height","offSetPercent","removeDist","abs","onMouseUp","addEventListener","currentTarget","returnValues","useMemo","sourceValues","sort","a","b","targetValues","counts","forEach","maxDiffCount","diffCount","Object","reduce","prev"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport { UnstableContext } from \"../context\";\n/** Drag to delete offset. It's a user experience number for dragging out */\nvar REMOVE_DIST = 130;\nfunction getPosition(e) {\n  var obj = 'targetTouches' in e ? e.targetTouches[0] : e;\n  return {\n    pageX: obj.pageX,\n    pageY: obj.pageY\n  };\n}\nfunction useDrag(containerRef, direction, rawValues, min, max, formatValue, triggerChange, finishChange, offsetValues, editable, minCount) {\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    draggingValue = _React$useState2[0],\n    setDraggingValue = _React$useState2[1];\n  var _React$useState3 = React.useState(-1),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    draggingIndex = _React$useState4[0],\n    setDraggingIndex = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    draggingDelete = _React$useState6[0],\n    setDraggingDelete = _React$useState6[1];\n  var _React$useState7 = React.useState(rawValues),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    cacheValues = _React$useState8[0],\n    setCacheValues = _React$useState8[1];\n  var _React$useState9 = React.useState(rawValues),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    originValues = _React$useState10[0],\n    setOriginValues = _React$useState10[1];\n  var mouseMoveEventRef = React.useRef(null);\n  var mouseUpEventRef = React.useRef(null);\n  var touchEventTargetRef = React.useRef(null);\n  var _React$useContext = React.useContext(UnstableContext),\n    onDragStart = _React$useContext.onDragStart,\n    onDragChange = _React$useContext.onDragChange;\n  useLayoutEffect(function () {\n    if (draggingIndex === -1) {\n      setCacheValues(rawValues);\n    }\n  }, [rawValues, draggingIndex]);\n\n  // Clean up event\n  React.useEffect(function () {\n    return function () {\n      document.removeEventListener('mousemove', mouseMoveEventRef.current);\n      document.removeEventListener('mouseup', mouseUpEventRef.current);\n      if (touchEventTargetRef.current) {\n        touchEventTargetRef.current.removeEventListener('touchmove', mouseMoveEventRef.current);\n        touchEventTargetRef.current.removeEventListener('touchend', mouseUpEventRef.current);\n      }\n    };\n  }, []);\n  var flushValues = function flushValues(nextValues, nextValue, deleteMark) {\n    // Perf: Only update state when value changed\n    if (nextValue !== undefined) {\n      setDraggingValue(nextValue);\n    }\n    setCacheValues(nextValues);\n    var changeValues = nextValues;\n    if (deleteMark) {\n      changeValues = nextValues.filter(function (_, i) {\n        return i !== draggingIndex;\n      });\n    }\n    triggerChange(changeValues);\n    if (onDragChange) {\n      onDragChange({\n        rawValues: nextValues,\n        deleteIndex: deleteMark ? draggingIndex : -1,\n        draggingIndex: draggingIndex,\n        draggingValue: nextValue\n      });\n    }\n  };\n  var updateCacheValue = useEvent(function (valueIndex, offsetPercent, deleteMark) {\n    if (valueIndex === -1) {\n      // >>>> Dragging on the track\n      var startValue = originValues[0];\n      var endValue = originValues[originValues.length - 1];\n      var maxStartOffset = min - startValue;\n      var maxEndOffset = max - endValue;\n\n      // Get valid offset\n      var offset = offsetPercent * (max - min);\n      offset = Math.max(offset, maxStartOffset);\n      offset = Math.min(offset, maxEndOffset);\n\n      // Use first value to revert back of valid offset (like steps marks)\n      var formatStartValue = formatValue(startValue + offset);\n      offset = formatStartValue - startValue;\n      var cloneCacheValues = originValues.map(function (val) {\n        return val + offset;\n      });\n      flushValues(cloneCacheValues);\n    } else {\n      // >>>> Dragging on the handle\n      var offsetDist = (max - min) * offsetPercent;\n\n      // Always start with the valueIndex origin value\n      var cloneValues = _toConsumableArray(cacheValues);\n      cloneValues[valueIndex] = originValues[valueIndex];\n      var next = offsetValues(cloneValues, offsetDist, valueIndex, 'dist');\n      flushValues(next.values, next.value, deleteMark);\n    }\n  });\n  var onStartMove = function onStartMove(e, valueIndex, startValues) {\n    e.stopPropagation();\n\n    // 如果是点击 track 触发的，需要传入变化后的初始值，而不能直接用 rawValues\n    var initialValues = startValues || rawValues;\n    var originValue = initialValues[valueIndex];\n    setDraggingIndex(valueIndex);\n    setDraggingValue(originValue);\n    setOriginValues(initialValues);\n    setCacheValues(initialValues);\n    setDraggingDelete(false);\n    var _getPosition = getPosition(e),\n      startX = _getPosition.pageX,\n      startY = _getPosition.pageY;\n\n    // We declare it here since closure can't get outer latest value\n    var deleteMark = false;\n\n    // Internal trigger event\n    if (onDragStart) {\n      onDragStart({\n        rawValues: initialValues,\n        draggingIndex: valueIndex,\n        draggingValue: originValue\n      });\n    }\n\n    // Moving\n    var onMouseMove = function onMouseMove(event) {\n      event.preventDefault();\n      var _getPosition2 = getPosition(event),\n        moveX = _getPosition2.pageX,\n        moveY = _getPosition2.pageY;\n      var offsetX = moveX - startX;\n      var offsetY = moveY - startY;\n      var _containerRef$current = containerRef.current.getBoundingClientRect(),\n        width = _containerRef$current.width,\n        height = _containerRef$current.height;\n      var offSetPercent;\n      var removeDist;\n      switch (direction) {\n        case 'btt':\n          offSetPercent = -offsetY / height;\n          removeDist = offsetX;\n          break;\n        case 'ttb':\n          offSetPercent = offsetY / height;\n          removeDist = offsetX;\n          break;\n        case 'rtl':\n          offSetPercent = -offsetX / width;\n          removeDist = offsetY;\n          break;\n        default:\n          offSetPercent = offsetX / width;\n          removeDist = offsetY;\n      }\n\n      // Check if need mark remove\n      deleteMark = editable ? Math.abs(removeDist) > REMOVE_DIST && minCount < cacheValues.length : false;\n      setDraggingDelete(deleteMark);\n      updateCacheValue(valueIndex, offSetPercent, deleteMark);\n    };\n\n    // End\n    var onMouseUp = function onMouseUp(event) {\n      event.preventDefault();\n      document.removeEventListener('mouseup', onMouseUp);\n      document.removeEventListener('mousemove', onMouseMove);\n      if (touchEventTargetRef.current) {\n        touchEventTargetRef.current.removeEventListener('touchmove', mouseMoveEventRef.current);\n        touchEventTargetRef.current.removeEventListener('touchend', mouseUpEventRef.current);\n      }\n      mouseMoveEventRef.current = null;\n      mouseUpEventRef.current = null;\n      touchEventTargetRef.current = null;\n      finishChange(deleteMark);\n      setDraggingIndex(-1);\n      setDraggingDelete(false);\n    };\n    document.addEventListener('mouseup', onMouseUp);\n    document.addEventListener('mousemove', onMouseMove);\n    e.currentTarget.addEventListener('touchend', onMouseUp);\n    e.currentTarget.addEventListener('touchmove', onMouseMove);\n    mouseMoveEventRef.current = onMouseMove;\n    mouseUpEventRef.current = onMouseUp;\n    touchEventTargetRef.current = e.currentTarget;\n  };\n\n  // Only return cache value when it mapping with rawValues\n  var returnValues = React.useMemo(function () {\n    var sourceValues = _toConsumableArray(rawValues).sort(function (a, b) {\n      return a - b;\n    });\n    var targetValues = _toConsumableArray(cacheValues).sort(function (a, b) {\n      return a - b;\n    });\n    var counts = {};\n    targetValues.forEach(function (val) {\n      counts[val] = (counts[val] || 0) + 1;\n    });\n    sourceValues.forEach(function (val) {\n      counts[val] = (counts[val] || 0) - 1;\n    });\n    var maxDiffCount = editable ? 1 : 0;\n    var diffCount = Object.values(counts).reduce(function (prev, next) {\n      return prev + Math.abs(next);\n    }, 0);\n    return diffCount <= maxDiffCount ? cacheValues : rawValues;\n  }, [rawValues, cacheValues, editable]);\n  return [draggingIndex, draggingValue, draggingDelete, returnValues, onStartMove];\n}\nexport default useDrag;"]},"metadata":{},"sourceType":"module"}