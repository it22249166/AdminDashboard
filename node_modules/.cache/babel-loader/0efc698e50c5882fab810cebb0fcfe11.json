{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport CaretDownFilled from \"@ant-design/icons/es/icons/CaretDownFilled\";\nimport FileOutlined from \"@ant-design/icons/es/icons/FileOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport MinusSquareOutlined from \"@ant-design/icons/es/icons/MinusSquareOutlined\";\nimport PlusSquareOutlined from \"@ant-design/icons/es/icons/PlusSquareOutlined\";\nimport classNames from 'classnames';\nimport { cloneElement } from '../../_util/reactNode';\n\nconst SwitcherIconCom = props => {\n  const {\n    prefixCls,\n    switcherIcon,\n    treeNodeProps,\n    showLine,\n    switcherLoadingIcon\n  } = props;\n  const {\n    isLeaf,\n    expanded,\n    loading\n  } = treeNodeProps;\n\n  if (loading) {\n    if ( /*#__PURE__*/React.isValidElement(switcherLoadingIcon)) {\n      return switcherLoadingIcon;\n    }\n\n    return /*#__PURE__*/React.createElement(LoadingOutlined, {\n      className: `${prefixCls}-switcher-loading-icon`\n    });\n  }\n\n  let showLeafIcon;\n\n  if (showLine && typeof showLine === 'object') {\n    showLeafIcon = showLine.showLeafIcon;\n  }\n\n  if (isLeaf) {\n    if (!showLine) {\n      return null;\n    }\n\n    if (typeof showLeafIcon !== 'boolean' && !!showLeafIcon) {\n      const leafIcon = typeof showLeafIcon === 'function' ? showLeafIcon(treeNodeProps) : showLeafIcon;\n      const leafCls = `${prefixCls}-switcher-line-custom-icon`;\n\n      if ( /*#__PURE__*/React.isValidElement(leafIcon)) {\n        return cloneElement(leafIcon, {\n          className: classNames(leafIcon.props.className || '', leafCls)\n        });\n      }\n\n      return leafIcon;\n    }\n\n    return showLeafIcon ? /*#__PURE__*/React.createElement(FileOutlined, {\n      className: `${prefixCls}-switcher-line-icon`\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-switcher-leaf-line`\n    });\n  }\n\n  const switcherCls = `${prefixCls}-switcher-icon`;\n  const switcher = typeof switcherIcon === 'function' ? switcherIcon(treeNodeProps) : switcherIcon;\n\n  if ( /*#__PURE__*/React.isValidElement(switcher)) {\n    return cloneElement(switcher, {\n      className: classNames(switcher.props.className || '', switcherCls)\n    });\n  }\n\n  if (switcher !== undefined) {\n    return switcher;\n  }\n\n  if (showLine) {\n    return expanded ? /*#__PURE__*/React.createElement(MinusSquareOutlined, {\n      className: `${prefixCls}-switcher-line-icon`\n    }) : /*#__PURE__*/React.createElement(PlusSquareOutlined, {\n      className: `${prefixCls}-switcher-line-icon`\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CaretDownFilled, {\n    className: switcherCls\n  });\n};\n\nexport default SwitcherIconCom;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/tree/utils/iconUtil.js"],"names":["React","CaretDownFilled","FileOutlined","LoadingOutlined","MinusSquareOutlined","PlusSquareOutlined","classNames","cloneElement","SwitcherIconCom","props","prefixCls","switcherIcon","treeNodeProps","showLine","switcherLoadingIcon","isLeaf","expanded","loading","isValidElement","createElement","className","showLeafIcon","leafIcon","leafCls","switcherCls","switcher","undefined"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,OAAOC,mBAAP,MAAgC,gDAAhC;AACA,OAAOC,kBAAP,MAA+B,+CAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA;AALI,MAMFL,KANJ;AAOA,QAAM;AACJM,IAAAA,MADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA;AAHI,MAIFL,aAJJ;;AAKA,MAAIK,OAAJ,EAAa;AACX,SAAI,aAAajB,KAAK,CAACkB,cAAN,CAAqBJ,mBAArB,CAAjB,EAA4D;AAC1D,aAAOA,mBAAP;AACD;;AACD,WAAO,aAAad,KAAK,CAACmB,aAAN,CAAoBhB,eAApB,EAAqC;AACvDiB,MAAAA,SAAS,EAAG,GAAEV,SAAU;AAD+B,KAArC,CAApB;AAGD;;AACD,MAAIW,YAAJ;;AACA,MAAIR,QAAQ,IAAI,OAAOA,QAAP,KAAoB,QAApC,EAA8C;AAC5CQ,IAAAA,YAAY,GAAGR,QAAQ,CAACQ,YAAxB;AACD;;AACD,MAAIN,MAAJ,EAAY;AACV,QAAI,CAACF,QAAL,EAAe;AACb,aAAO,IAAP;AACD;;AACD,QAAI,OAAOQ,YAAP,KAAwB,SAAxB,IAAqC,CAAC,CAACA,YAA3C,EAAyD;AACvD,YAAMC,QAAQ,GAAG,OAAOD,YAAP,KAAwB,UAAxB,GAAqCA,YAAY,CAACT,aAAD,CAAjD,GAAmES,YAApF;AACA,YAAME,OAAO,GAAI,GAAEb,SAAU,4BAA7B;;AACA,WAAI,aAAaV,KAAK,CAACkB,cAAN,CAAqBI,QAArB,CAAjB,EAAiD;AAC/C,eAAOf,YAAY,CAACe,QAAD,EAAW;AAC5BF,UAAAA,SAAS,EAAEd,UAAU,CAACgB,QAAQ,CAACb,KAAT,CAAeW,SAAf,IAA4B,EAA7B,EAAiCG,OAAjC;AADO,SAAX,CAAnB;AAGD;;AACD,aAAOD,QAAP;AACD;;AACD,WAAOD,YAAY,GAAI,aAAarB,KAAK,CAACmB,aAAN,CAAoBjB,YAApB,EAAkC;AACpEkB,MAAAA,SAAS,EAAG,GAAEV,SAAU;AAD4C,KAAlC,CAAjB,GAEZ,aAAaV,KAAK,CAACmB,aAAN,CAAoB,MAApB,EAA4B;AAC9CC,MAAAA,SAAS,EAAG,GAAEV,SAAU;AADsB,KAA5B,CAFpB;AAKD;;AACD,QAAMc,WAAW,GAAI,GAAEd,SAAU,gBAAjC;AACA,QAAMe,QAAQ,GAAG,OAAOd,YAAP,KAAwB,UAAxB,GAAqCA,YAAY,CAACC,aAAD,CAAjD,GAAmED,YAApF;;AACA,OAAI,aAAaX,KAAK,CAACkB,cAAN,CAAqBO,QAArB,CAAjB,EAAiD;AAC/C,WAAOlB,YAAY,CAACkB,QAAD,EAAW;AAC5BL,MAAAA,SAAS,EAAEd,UAAU,CAACmB,QAAQ,CAAChB,KAAT,CAAeW,SAAf,IAA4B,EAA7B,EAAiCI,WAAjC;AADO,KAAX,CAAnB;AAGD;;AACD,MAAIC,QAAQ,KAAKC,SAAjB,EAA4B;AAC1B,WAAOD,QAAP;AACD;;AACD,MAAIZ,QAAJ,EAAc;AACZ,WAAOG,QAAQ,GAAI,aAAahB,KAAK,CAACmB,aAAN,CAAoBf,mBAApB,EAAyC;AACvEgB,MAAAA,SAAS,EAAG,GAAEV,SAAU;AAD+C,KAAzC,CAAjB,GAER,aAAaV,KAAK,CAACmB,aAAN,CAAoBd,kBAApB,EAAwC;AAC1De,MAAAA,SAAS,EAAG,GAAEV,SAAU;AADkC,KAAxC,CAFpB;AAKD;;AACD,SAAO,aAAaV,KAAK,CAACmB,aAAN,CAAoBlB,eAApB,EAAqC;AACvDmB,IAAAA,SAAS,EAAEI;AAD4C,GAArC,CAApB;AAGD,CAjED;;AAkEA,eAAehB,eAAf","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport CaretDownFilled from \"@ant-design/icons/es/icons/CaretDownFilled\";\nimport FileOutlined from \"@ant-design/icons/es/icons/FileOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport MinusSquareOutlined from \"@ant-design/icons/es/icons/MinusSquareOutlined\";\nimport PlusSquareOutlined from \"@ant-design/icons/es/icons/PlusSquareOutlined\";\nimport classNames from 'classnames';\nimport { cloneElement } from '../../_util/reactNode';\nconst SwitcherIconCom = props => {\n  const {\n    prefixCls,\n    switcherIcon,\n    treeNodeProps,\n    showLine,\n    switcherLoadingIcon\n  } = props;\n  const {\n    isLeaf,\n    expanded,\n    loading\n  } = treeNodeProps;\n  if (loading) {\n    if (/*#__PURE__*/React.isValidElement(switcherLoadingIcon)) {\n      return switcherLoadingIcon;\n    }\n    return /*#__PURE__*/React.createElement(LoadingOutlined, {\n      className: `${prefixCls}-switcher-loading-icon`\n    });\n  }\n  let showLeafIcon;\n  if (showLine && typeof showLine === 'object') {\n    showLeafIcon = showLine.showLeafIcon;\n  }\n  if (isLeaf) {\n    if (!showLine) {\n      return null;\n    }\n    if (typeof showLeafIcon !== 'boolean' && !!showLeafIcon) {\n      const leafIcon = typeof showLeafIcon === 'function' ? showLeafIcon(treeNodeProps) : showLeafIcon;\n      const leafCls = `${prefixCls}-switcher-line-custom-icon`;\n      if (/*#__PURE__*/React.isValidElement(leafIcon)) {\n        return cloneElement(leafIcon, {\n          className: classNames(leafIcon.props.className || '', leafCls)\n        });\n      }\n      return leafIcon;\n    }\n    return showLeafIcon ? (/*#__PURE__*/React.createElement(FileOutlined, {\n      className: `${prefixCls}-switcher-line-icon`\n    })) : (/*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-switcher-leaf-line`\n    }));\n  }\n  const switcherCls = `${prefixCls}-switcher-icon`;\n  const switcher = typeof switcherIcon === 'function' ? switcherIcon(treeNodeProps) : switcherIcon;\n  if (/*#__PURE__*/React.isValidElement(switcher)) {\n    return cloneElement(switcher, {\n      className: classNames(switcher.props.className || '', switcherCls)\n    });\n  }\n  if (switcher !== undefined) {\n    return switcher;\n  }\n  if (showLine) {\n    return expanded ? (/*#__PURE__*/React.createElement(MinusSquareOutlined, {\n      className: `${prefixCls}-switcher-line-icon`\n    })) : (/*#__PURE__*/React.createElement(PlusSquareOutlined, {\n      className: `${prefixCls}-switcher-line-icon`\n    }));\n  }\n  return /*#__PURE__*/React.createElement(CaretDownFilled, {\n    className: switcherCls\n  });\n};\nexport default SwitcherIconCom;"]},"metadata":{},"sourceType":"module"}