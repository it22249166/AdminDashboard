{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n} // Seems this is used for iconFont\n\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useComposeRef } from \"@rc-component/util/es/ref\";\nimport Context from \"./Context\";\nimport { svgBaseProps, warning, useInsertStyles } from \"../utils\";\nconst Icon = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // affect outter <i>...</i>\n    className,\n    // affect inner <svg>...</svg>\n    component: Component,\n    viewBox,\n    spin,\n    rotate,\n    tabIndex,\n    onClick,\n    // children\n    children,\n    ...restProps\n  } = props;\n  const iconRef = React.useRef();\n  const mergedRef = useComposeRef(iconRef, ref);\n  warning(Boolean(Component || children), 'Should have `component` prop or `children`.');\n  useInsertStyles(iconRef);\n  const {\n    prefixCls = 'anticon',\n    rootClassName\n  } = React.useContext(Context);\n  const classString = classNames(rootClassName, prefixCls, {\n    [`${prefixCls}-spin`]: !!spin && !!Component\n  }, className);\n  const svgClassString = classNames({\n    [`${prefixCls}-spin`]: !!spin\n  });\n  const svgStyle = rotate ? {\n    msTransform: `rotate(${rotate}deg)`,\n    transform: `rotate(${rotate}deg)`\n  } : undefined;\n  const innerSvgProps = { ...svgBaseProps,\n    className: svgClassString,\n    style: svgStyle,\n    viewBox\n  };\n\n  if (!viewBox) {\n    delete innerSvgProps.viewBox;\n  } // component > children\n\n\n  const renderInnerNode = () => {\n    if (Component) {\n      return /*#__PURE__*/React.createElement(Component, innerSvgProps, children);\n    }\n\n    if (children) {\n      warning(Boolean(viewBox) || React.Children.count(children) === 1 && /*#__PURE__*/React.isValidElement(children) && React.Children.only(children).type === 'use', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');\n      return /*#__PURE__*/React.createElement(\"svg\", _extends({}, innerSvgProps, {\n        viewBox: viewBox\n      }), children);\n    }\n\n    return null;\n  };\n\n  let iconTabIndex = tabIndex;\n\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    role: \"img\"\n  }, restProps, {\n    ref: mergedRef,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), renderInnerNode());\n});\nIcon.displayName = 'AntdIcon';\nexport default Icon;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@ant-design/icons/es/components/Icon.js"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","classNames","useComposeRef","Context","svgBaseProps","warning","useInsertStyles","Icon","forwardRef","props","ref","className","component","Component","viewBox","spin","rotate","tabIndex","onClick","children","restProps","iconRef","useRef","mergedRef","Boolean","prefixCls","rootClassName","useContext","classString","svgClassString","svgStyle","msTransform","transform","undefined","innerSvgProps","style","renderInnerNode","createElement","Children","count","isValidElement","only","type","iconTabIndex","role","displayName"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,GAAgBD,MAAM,CAACC,MAAP,CAAcC,IAAd,EAAhB,GAAuC,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIP,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAAlR;AAAoR,SAAOJ,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC,C,CACnV;;;AACA,OAAO,KAAKQ,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,eAAhC,QAAuD,UAAvD;AACA,MAAMC,IAAI,GAAG,aAAaP,KAAK,CAACQ,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACzD,QAAM;AACJ;AACAC,IAAAA,SAFI;AAGJ;AACAC,IAAAA,SAAS,EAAEC,SAJP;AAKJC,IAAAA,OALI;AAMJC,IAAAA,IANI;AAOJC,IAAAA,MAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA,OATI;AAUJ;AACAC,IAAAA,QAXI;AAYJ,OAAGC;AAZC,MAaFX,KAbJ;AAcA,QAAMY,OAAO,GAAGrB,KAAK,CAACsB,MAAN,EAAhB;AACA,QAAMC,SAAS,GAAGrB,aAAa,CAACmB,OAAD,EAAUX,GAAV,CAA/B;AACAL,EAAAA,OAAO,CAACmB,OAAO,CAACX,SAAS,IAAIM,QAAd,CAAR,EAAiC,6CAAjC,CAAP;AACAb,EAAAA,eAAe,CAACe,OAAD,CAAf;AACA,QAAM;AACJI,IAAAA,SAAS,GAAG,SADR;AAEJC,IAAAA;AAFI,MAGF1B,KAAK,CAAC2B,UAAN,CAAiBxB,OAAjB,CAHJ;AAIA,QAAMyB,WAAW,GAAG3B,UAAU,CAACyB,aAAD,EAAgBD,SAAhB,EAA2B;AACvD,KAAE,GAAEA,SAAU,OAAd,GAAuB,CAAC,CAACV,IAAF,IAAU,CAAC,CAACF;AADoB,GAA3B,EAE3BF,SAF2B,CAA9B;AAGA,QAAMkB,cAAc,GAAG5B,UAAU,CAAC;AAChC,KAAE,GAAEwB,SAAU,OAAd,GAAuB,CAAC,CAACV;AADO,GAAD,CAAjC;AAGA,QAAMe,QAAQ,GAAGd,MAAM,GAAG;AACxBe,IAAAA,WAAW,EAAG,UAASf,MAAO,MADN;AAExBgB,IAAAA,SAAS,EAAG,UAAShB,MAAO;AAFJ,GAAH,GAGnBiB,SAHJ;AAIA,QAAMC,aAAa,GAAG,EACpB,GAAG9B,YADiB;AAEpBO,IAAAA,SAAS,EAAEkB,cAFS;AAGpBM,IAAAA,KAAK,EAAEL,QAHa;AAIpBhB,IAAAA;AAJoB,GAAtB;;AAMA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAOoB,aAAa,CAACpB,OAArB;AACD,GAzCwD,CA2CzD;;;AACA,QAAMsB,eAAe,GAAG,MAAM;AAC5B,QAAIvB,SAAJ,EAAe;AACb,aAAO,aAAab,KAAK,CAACqC,aAAN,CAAoBxB,SAApB,EAA+BqB,aAA/B,EAA8Cf,QAA9C,CAApB;AACD;;AACD,QAAIA,QAAJ,EAAc;AACZd,MAAAA,OAAO,CAACmB,OAAO,CAACV,OAAD,CAAP,IAAoBd,KAAK,CAACsC,QAAN,CAAeC,KAAf,CAAqBpB,QAArB,MAAmC,CAAnC,IAAwC,aAAanB,KAAK,CAACwC,cAAN,CAAqBrB,QAArB,CAArD,IAAuFnB,KAAK,CAACsC,QAAN,CAAeG,IAAf,CAAoBtB,QAApB,EAA8BuB,IAA9B,KAAuC,KAAnJ,EAA0J,iDAAiD,8CAA3M,CAAP;AACA,aAAO,aAAa1C,KAAK,CAACqC,aAAN,CAAoB,KAApB,EAA2BnD,QAAQ,CAAC,EAAD,EAAKgD,aAAL,EAAoB;AACzEpB,QAAAA,OAAO,EAAEA;AADgE,OAApB,CAAnC,EAEhBK,QAFgB,CAApB;AAGD;;AACD,WAAO,IAAP;AACD,GAXD;;AAYA,MAAIwB,YAAY,GAAG1B,QAAnB;;AACA,MAAI0B,YAAY,KAAKV,SAAjB,IAA8Bf,OAAlC,EAA2C;AACzCyB,IAAAA,YAAY,GAAG,CAAC,CAAhB;AACD;;AACD,SAAO,aAAa3C,KAAK,CAACqC,aAAN,CAAoB,MAApB,EAA4BnD,QAAQ,CAAC;AACvD0D,IAAAA,IAAI,EAAE;AADiD,GAAD,EAErDxB,SAFqD,EAE1C;AACZV,IAAAA,GAAG,EAAEa,SADO;AAEZN,IAAAA,QAAQ,EAAE0B,YAFE;AAGZzB,IAAAA,OAAO,EAAEA,OAHG;AAIZP,IAAAA,SAAS,EAAEiB;AAJC,GAF0C,CAApC,EAOhBQ,eAAe,EAPC,CAApB;AAQD,CApEyB,CAA1B;AAqEA7B,IAAI,CAACsC,WAAL,GAAmB,UAAnB;AACA,eAAetC,IAAf","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n// Seems this is used for iconFont\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useComposeRef } from \"@rc-component/util/es/ref\";\nimport Context from \"./Context\";\nimport { svgBaseProps, warning, useInsertStyles } from \"../utils\";\nconst Icon = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // affect outter <i>...</i>\n    className,\n    // affect inner <svg>...</svg>\n    component: Component,\n    viewBox,\n    spin,\n    rotate,\n    tabIndex,\n    onClick,\n    // children\n    children,\n    ...restProps\n  } = props;\n  const iconRef = React.useRef();\n  const mergedRef = useComposeRef(iconRef, ref);\n  warning(Boolean(Component || children), 'Should have `component` prop or `children`.');\n  useInsertStyles(iconRef);\n  const {\n    prefixCls = 'anticon',\n    rootClassName\n  } = React.useContext(Context);\n  const classString = classNames(rootClassName, prefixCls, {\n    [`${prefixCls}-spin`]: !!spin && !!Component\n  }, className);\n  const svgClassString = classNames({\n    [`${prefixCls}-spin`]: !!spin\n  });\n  const svgStyle = rotate ? {\n    msTransform: `rotate(${rotate}deg)`,\n    transform: `rotate(${rotate}deg)`\n  } : undefined;\n  const innerSvgProps = {\n    ...svgBaseProps,\n    className: svgClassString,\n    style: svgStyle,\n    viewBox\n  };\n  if (!viewBox) {\n    delete innerSvgProps.viewBox;\n  }\n\n  // component > children\n  const renderInnerNode = () => {\n    if (Component) {\n      return /*#__PURE__*/React.createElement(Component, innerSvgProps, children);\n    }\n    if (children) {\n      warning(Boolean(viewBox) || React.Children.count(children) === 1 && /*#__PURE__*/React.isValidElement(children) && React.Children.only(children).type === 'use', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');\n      return /*#__PURE__*/React.createElement(\"svg\", _extends({}, innerSvgProps, {\n        viewBox: viewBox\n      }), children);\n    }\n    return null;\n  };\n  let iconTabIndex = tabIndex;\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    role: \"img\"\n  }, restProps, {\n    ref: mergedRef,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), renderInnerNode());\n});\nIcon.displayName = 'AntdIcon';\nexport default Icon;"]},"metadata":{},"sourceType":"module"}