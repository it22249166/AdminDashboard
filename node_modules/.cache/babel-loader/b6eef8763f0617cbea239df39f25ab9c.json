{"ast":null,"code":"import * as React from 'react';\nexport const defaultPrefixCls = 'ant';\nexport const defaultIconPrefixCls = 'anticon';\nexport const Variants = ['outlined', 'borderless', 'filled', 'underlined'];\n\nconst defaultGetPrefixCls = (suffixCls, customizePrefixCls) => {\n  if (customizePrefixCls) {\n    return customizePrefixCls;\n  }\n\n  return suffixCls ? `${defaultPrefixCls}-${suffixCls}` : defaultPrefixCls;\n}; // zombieJ: ðŸš¨ Do not pass `defaultRenderEmpty` here since it will cause circular dependency.\n\n\nexport const ConfigContext = /*#__PURE__*/React.createContext({\n  // We provide a default function for Context without provider\n  getPrefixCls: defaultGetPrefixCls,\n  iconPrefixCls: defaultIconPrefixCls\n});\nexport const {\n  Consumer: ConfigConsumer\n} = ConfigContext;\nconst EMPTY_OBJECT = {};\n/**\n * Get ConfigProvider configured component props.\n * This help to reduce bundle size for saving `?.` operator.\n * Do not use as `useMemo` deps since we do not cache the object here.\n *\n * NOTE: not refactor this with `useMemo` since memo will cost another memory space,\n * which will waste both compare calculation & memory.\n */\n\nexport function useComponentConfig(propName) {\n  const context = React.useContext(ConfigContext);\n  const {\n    getPrefixCls,\n    direction,\n    getPopupContainer\n  } = context;\n  const propValue = context[propName];\n  return Object.assign(Object.assign({\n    classNames: EMPTY_OBJECT,\n    styles: EMPTY_OBJECT\n  }, propValue), {\n    getPrefixCls,\n    direction,\n    getPopupContainer\n  });\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/config-provider/context.js"],"names":["React","defaultPrefixCls","defaultIconPrefixCls","Variants","defaultGetPrefixCls","suffixCls","customizePrefixCls","ConfigContext","createContext","getPrefixCls","iconPrefixCls","Consumer","ConfigConsumer","EMPTY_OBJECT","useComponentConfig","propName","context","useContext","direction","getPopupContainer","propValue","Object","assign","classNames","styles"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAMC,gBAAgB,GAAG,KAAzB;AACP,OAAO,MAAMC,oBAAoB,GAAG,SAA7B;AACP,OAAO,MAAMC,QAAQ,GAAG,CAAC,UAAD,EAAa,YAAb,EAA2B,QAA3B,EAAqC,YAArC,CAAjB;;AACP,MAAMC,mBAAmB,GAAG,CAACC,SAAD,EAAYC,kBAAZ,KAAmC;AAC7D,MAAIA,kBAAJ,EAAwB;AACtB,WAAOA,kBAAP;AACD;;AACD,SAAOD,SAAS,GAAI,GAAEJ,gBAAiB,IAAGI,SAAU,EAApC,GAAwCJ,gBAAxD;AACD,CALD,C,CAMA;;;AACA,OAAO,MAAMM,aAAa,GAAG,aAAaP,KAAK,CAACQ,aAAN,CAAoB;AAC5D;AACAC,EAAAA,YAAY,EAAEL,mBAF8C;AAG5DM,EAAAA,aAAa,EAAER;AAH6C,CAApB,CAAnC;AAKP,OAAO,MAAM;AACXS,EAAAA,QAAQ,EAAEC;AADC,IAETL,aAFG;AAGP,MAAMM,YAAY,GAAG,EAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAC3C,QAAMC,OAAO,GAAGhB,KAAK,CAACiB,UAAN,CAAiBV,aAAjB,CAAhB;AACA,QAAM;AACJE,IAAAA,YADI;AAEJS,IAAAA,SAFI;AAGJC,IAAAA;AAHI,MAIFH,OAJJ;AAKA,QAAMI,SAAS,GAAGJ,OAAO,CAACD,QAAD,CAAzB;AACA,SAAOM,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc;AACjCC,IAAAA,UAAU,EAAEV,YADqB;AAEjCW,IAAAA,MAAM,EAAEX;AAFyB,GAAd,EAGlBO,SAHkB,CAAd,EAGQ;AACbX,IAAAA,YADa;AAEbS,IAAAA,SAFa;AAGbC,IAAAA;AAHa,GAHR,CAAP;AAQD","sourcesContent":["import * as React from 'react';\nexport const defaultPrefixCls = 'ant';\nexport const defaultIconPrefixCls = 'anticon';\nexport const Variants = ['outlined', 'borderless', 'filled', 'underlined'];\nconst defaultGetPrefixCls = (suffixCls, customizePrefixCls) => {\n  if (customizePrefixCls) {\n    return customizePrefixCls;\n  }\n  return suffixCls ? `${defaultPrefixCls}-${suffixCls}` : defaultPrefixCls;\n};\n// zombieJ: ðŸš¨ Do not pass `defaultRenderEmpty` here since it will cause circular dependency.\nexport const ConfigContext = /*#__PURE__*/React.createContext({\n  // We provide a default function for Context without provider\n  getPrefixCls: defaultGetPrefixCls,\n  iconPrefixCls: defaultIconPrefixCls\n});\nexport const {\n  Consumer: ConfigConsumer\n} = ConfigContext;\nconst EMPTY_OBJECT = {};\n/**\n * Get ConfigProvider configured component props.\n * This help to reduce bundle size for saving `?.` operator.\n * Do not use as `useMemo` deps since we do not cache the object here.\n *\n * NOTE: not refactor this with `useMemo` since memo will cost another memory space,\n * which will waste both compare calculation & memory.\n */\nexport function useComponentConfig(propName) {\n  const context = React.useContext(ConfigContext);\n  const {\n    getPrefixCls,\n    direction,\n    getPopupContainer\n  } = context;\n  const propValue = context[propName];\n  return Object.assign(Object.assign({\n    classNames: EMPTY_OBJECT,\n    styles: EMPTY_OBJECT\n  }, propValue), {\n    getPrefixCls,\n    direction,\n    getPopupContainer\n  });\n}"]},"metadata":{},"sourceType":"module"}