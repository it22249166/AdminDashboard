{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as React from 'react';\nimport copy from 'copy-to-clipboard';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport toList from '../../_util/toList';\n\nconst useCopyClick = _ref => {\n  let {\n    copyConfig,\n    children\n  } = _ref;\n  const [copied, setCopied] = React.useState(false);\n  const [copyLoading, setCopyLoading] = React.useState(false);\n  const copyIdRef = React.useRef(null);\n\n  const cleanCopyId = () => {\n    if (copyIdRef.current) {\n      clearTimeout(copyIdRef.current);\n    }\n  };\n\n  const copyOptions = {};\n\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n\n  React.useEffect(() => cleanCopyId, []); // Keep copy action up to date\n\n  const onClick = useEvent(e => __awaiter(void 0, void 0, void 0, function* () {\n    var _a;\n\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    setCopyLoading(true);\n\n    try {\n      const text = typeof copyConfig.text === 'function' ? yield copyConfig.text() : copyConfig.text;\n      copy(text || toList(children, true).join('') || '', copyOptions);\n      setCopyLoading(false);\n      setCopied(true); // Trigger tips update\n\n      cleanCopyId();\n      copyIdRef.current = setTimeout(() => {\n        setCopied(false);\n      }, 3000);\n      (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n    } catch (error) {\n      setCopyLoading(false);\n      throw error;\n    }\n  }));\n  return {\n    copied,\n    copyLoading,\n    onClick\n  };\n};\n\nexport default useCopyClick;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/typography/hooks/useCopyClick.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","React","copy","useEvent","toList","useCopyClick","_ref","copyConfig","children","copied","setCopied","useState","copyLoading","setCopyLoading","copyIdRef","useRef","cleanCopyId","current","clearTimeout","copyOptions","format","useEffect","onClick","_a","preventDefault","stopPropagation","text","join","setTimeout","onCopy","call","error"],"mappings":"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","sourcesContent":["var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport * as React from 'react';\nimport copy from 'copy-to-clipboard';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport toList from '../../_util/toList';\nconst useCopyClick = _ref => {\n  let {\n    copyConfig,\n    children\n  } = _ref;\n  const [copied, setCopied] = React.useState(false);\n  const [copyLoading, setCopyLoading] = React.useState(false);\n  const copyIdRef = React.useRef(null);\n  const cleanCopyId = () => {\n    if (copyIdRef.current) {\n      clearTimeout(copyIdRef.current);\n    }\n  };\n  const copyOptions = {};\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n  React.useEffect(() => cleanCopyId, []);\n  // Keep copy action up to date\n  const onClick = useEvent(e => __awaiter(void 0, void 0, void 0, function* () {\n    var _a;\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    setCopyLoading(true);\n    try {\n      const text = typeof copyConfig.text === 'function' ? yield copyConfig.text() : copyConfig.text;\n      copy(text || toList(children, true).join('') || '', copyOptions);\n      setCopyLoading(false);\n      setCopied(true);\n      // Trigger tips update\n      cleanCopyId();\n      copyIdRef.current = setTimeout(() => {\n        setCopied(false);\n      }, 3000);\n      (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n    } catch (error) {\n      setCopyLoading(false);\n      throw error;\n    }\n  }));\n  return {\n    copied,\n    copyLoading,\n    onClick\n  };\n};\nexport default useCopyClick;"]},"metadata":{},"sourceType":"module"}