{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport useState from \"rc-util/es/hooks/useState\";\nimport Button from '../button';\nimport { convertLegacyProps } from '../button/buttonHelpers';\n\nfunction isThenable(thing) {\n  return !!(thing === null || thing === void 0 ? void 0 : thing.then);\n}\n\nconst ActionButton = props => {\n  const {\n    type,\n    children,\n    prefixCls,\n    buttonProps,\n    close,\n    autoFocus,\n    emitEvent,\n    isSilent,\n    quitOnNullishReturnValue,\n    actionFn\n  } = props;\n  const clickedRef = React.useRef(false);\n  const buttonRef = React.useRef(null);\n  const [loading, setLoading] = useState(false);\n\n  const onInternalClose = function () {\n    close === null || close === void 0 ? void 0 : close.apply(void 0, arguments);\n  };\n\n  React.useEffect(() => {\n    let timeoutId = null;\n\n    if (autoFocus) {\n      timeoutId = setTimeout(() => {\n        var _a;\n\n        (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n          preventScroll: true\n        });\n      });\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, []);\n\n  const handlePromiseOnOk = returnValueOfOnOk => {\n    if (!isThenable(returnValueOfOnOk)) {\n      return;\n    }\n\n    setLoading(true);\n    returnValueOfOnOk.then(function () {\n      setLoading(false, true);\n      onInternalClose.apply(void 0, arguments);\n      clickedRef.current = false;\n    }, e => {\n      // See: https://github.com/ant-design/ant-design/issues/6183\n      setLoading(false, true);\n      clickedRef.current = false; // Do not throw if is `await` mode\n\n      if (isSilent === null || isSilent === void 0 ? void 0 : isSilent()) {\n        return;\n      }\n\n      return Promise.reject(e);\n    });\n  };\n\n  const onClick = e => {\n    if (clickedRef.current) {\n      return;\n    }\n\n    clickedRef.current = true;\n\n    if (!actionFn) {\n      onInternalClose();\n      return;\n    }\n\n    let returnValueOfOnOk;\n\n    if (emitEvent) {\n      returnValueOfOnOk = actionFn(e);\n\n      if (quitOnNullishReturnValue && !isThenable(returnValueOfOnOk)) {\n        clickedRef.current = false;\n        onInternalClose(e);\n        return;\n      }\n    } else if (actionFn.length) {\n      returnValueOfOnOk = actionFn(close); // https://github.com/ant-design/ant-design/issues/23358\n\n      clickedRef.current = false;\n    } else {\n      returnValueOfOnOk = actionFn();\n\n      if (!isThenable(returnValueOfOnOk)) {\n        onInternalClose();\n        return;\n      }\n    }\n\n    handlePromiseOnOk(returnValueOfOnOk);\n  };\n\n  return /*#__PURE__*/React.createElement(Button, Object.assign({}, convertLegacyProps(type), {\n    onClick: onClick,\n    loading: loading,\n    prefixCls: prefixCls\n  }, buttonProps, {\n    ref: buttonRef\n  }), children);\n};\n\nexport default ActionButton;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/_util/ActionButton.js"],"names":["React","useState","Button","convertLegacyProps","isThenable","thing","then","ActionButton","props","type","children","prefixCls","buttonProps","close","autoFocus","emitEvent","isSilent","quitOnNullishReturnValue","actionFn","clickedRef","useRef","buttonRef","loading","setLoading","onInternalClose","apply","arguments","useEffect","timeoutId","setTimeout","_a","current","focus","preventScroll","clearTimeout","handlePromiseOnOk","returnValueOfOnOk","e","Promise","reject","onClick","length","createElement","Object","assign","ref"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport useState from \"rc-util/es/hooks/useState\";\nimport Button from '../button';\nimport { convertLegacyProps } from '../button/buttonHelpers';\nfunction isThenable(thing) {\n  return !!(thing === null || thing === void 0 ? void 0 : thing.then);\n}\nconst ActionButton = props => {\n  const {\n    type,\n    children,\n    prefixCls,\n    buttonProps,\n    close,\n    autoFocus,\n    emitEvent,\n    isSilent,\n    quitOnNullishReturnValue,\n    actionFn\n  } = props;\n  const clickedRef = React.useRef(false);\n  const buttonRef = React.useRef(null);\n  const [loading, setLoading] = useState(false);\n  const onInternalClose = function () {\n    close === null || close === void 0 ? void 0 : close.apply(void 0, arguments);\n  };\n  React.useEffect(() => {\n    let timeoutId = null;\n    if (autoFocus) {\n      timeoutId = setTimeout(() => {\n        var _a;\n        (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n          preventScroll: true\n        });\n      });\n    }\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, []);\n  const handlePromiseOnOk = returnValueOfOnOk => {\n    if (!isThenable(returnValueOfOnOk)) {\n      return;\n    }\n    setLoading(true);\n    returnValueOfOnOk.then(function () {\n      setLoading(false, true);\n      onInternalClose.apply(void 0, arguments);\n      clickedRef.current = false;\n    }, e => {\n      // See: https://github.com/ant-design/ant-design/issues/6183\n      setLoading(false, true);\n      clickedRef.current = false;\n      // Do not throw if is `await` mode\n      if (isSilent === null || isSilent === void 0 ? void 0 : isSilent()) {\n        return;\n      }\n      return Promise.reject(e);\n    });\n  };\n  const onClick = e => {\n    if (clickedRef.current) {\n      return;\n    }\n    clickedRef.current = true;\n    if (!actionFn) {\n      onInternalClose();\n      return;\n    }\n    let returnValueOfOnOk;\n    if (emitEvent) {\n      returnValueOfOnOk = actionFn(e);\n      if (quitOnNullishReturnValue && !isThenable(returnValueOfOnOk)) {\n        clickedRef.current = false;\n        onInternalClose(e);\n        return;\n      }\n    } else if (actionFn.length) {\n      returnValueOfOnOk = actionFn(close);\n      // https://github.com/ant-design/ant-design/issues/23358\n      clickedRef.current = false;\n    } else {\n      returnValueOfOnOk = actionFn();\n      if (!isThenable(returnValueOfOnOk)) {\n        onInternalClose();\n        return;\n      }\n    }\n    handlePromiseOnOk(returnValueOfOnOk);\n  };\n  return /*#__PURE__*/React.createElement(Button, Object.assign({}, convertLegacyProps(type), {\n    onClick: onClick,\n    loading: loading,\n    prefixCls: prefixCls\n  }, buttonProps, {\n    ref: buttonRef\n  }), children);\n};\nexport default ActionButton;"]},"metadata":{},"sourceType":"module"}