{"ast":null,"code":"import canUseDom from \"./canUseDom\";\nimport contains from \"./contains\";\nconst APPEND_ORDER = 'data-rc-order';\nconst APPEND_PRIORITY = 'data-rc-priority';\nconst MARK_KEY = `rc-util-key`;\nconst containerCache = new Map();\n\nfunction getMark({\n  mark\n} = {}) {\n  if (mark) {\n    return mark.startsWith('data-') ? mark : `data-${mark}`;\n  }\n\n  return MARK_KEY;\n}\n\nfunction getContainer(option) {\n  if (option.attachTo) {\n    return option.attachTo;\n  }\n\n  const head = document.querySelector('head');\n  return head || document.body;\n}\n\nfunction getOrder(prepend) {\n  if (prepend === 'queue') {\n    return 'prependQueue';\n  }\n\n  return prepend ? 'prepend' : 'append';\n}\n/**\n * Find style which inject by rc-util\n */\n\n\nfunction findStyles(container) {\n  return Array.from((containerCache.get(container) || container).children).filter(node => node.tagName === 'STYLE');\n}\n\nexport function injectCSS(css, option = {}) {\n  if (!canUseDom()) {\n    return null;\n  }\n\n  const {\n    csp,\n    prepend,\n    priority = 0\n  } = option;\n  const mergedOrder = getOrder(prepend);\n  const isPrependQueue = mergedOrder === 'prependQueue';\n  const styleNode = document.createElement('style');\n  styleNode.setAttribute(APPEND_ORDER, mergedOrder);\n\n  if (isPrependQueue && priority) {\n    styleNode.setAttribute(APPEND_PRIORITY, `${priority}`);\n  }\n\n  if (csp === null || csp === void 0 ? void 0 : csp.nonce) {\n    styleNode.nonce = csp === null || csp === void 0 ? void 0 : csp.nonce;\n  }\n\n  styleNode.innerHTML = css;\n  const container = getContainer(option);\n  const {\n    firstChild\n  } = container;\n\n  if (prepend) {\n    // If is queue `prepend`, it will prepend first style and then append rest style\n    if (isPrependQueue) {\n      const existStyle = (option.styles || findStyles(container)).filter(node => {\n        // Ignore style which not injected by rc-util with prepend\n        if (!['prepend', 'prependQueue'].includes(node.getAttribute(APPEND_ORDER))) {\n          return false;\n        } // Ignore style which priority less then new style\n\n\n        const nodePriority = Number(node.getAttribute(APPEND_PRIORITY) || 0);\n        return priority >= nodePriority;\n      });\n\n      if (existStyle.length) {\n        container.insertBefore(styleNode, existStyle[existStyle.length - 1].nextSibling);\n        return styleNode;\n      }\n    } // Use `insertBefore` as `prepend`\n\n\n    container.insertBefore(styleNode, firstChild);\n  } else {\n    container.appendChild(styleNode);\n  }\n\n  return styleNode;\n}\n\nfunction findExistNode(key, option = {}) {\n  let {\n    styles\n  } = option;\n  styles ||= findStyles(getContainer(option));\n  return styles.find(node => node.getAttribute(getMark(option)) === key);\n}\n\nexport function removeCSS(key, option = {}) {\n  const existNode = findExistNode(key, option);\n\n  if (existNode) {\n    const container = getContainer(option);\n    container.removeChild(existNode);\n  }\n}\n/**\n * qiankun will inject `appendChild` to insert into other\n */\n\nfunction syncRealContainer(container, option) {\n  const cachedRealContainer = containerCache.get(container); // Find real container when not cached or cached container removed\n\n  if (!cachedRealContainer || !contains(document, cachedRealContainer)) {\n    const placeholderStyle = injectCSS('', option);\n    const {\n      parentNode\n    } = placeholderStyle;\n    containerCache.set(container, parentNode);\n    container.removeChild(placeholderStyle);\n  }\n}\n/**\n * manually clear container cache to avoid global cache in unit testes\n */\n\n\nexport function clearContainerCache() {\n  containerCache.clear();\n}\nexport function updateCSS(css, key, originOption = {}) {\n  const container = getContainer(originOption);\n  const styles = findStyles(container);\n  const option = { ...originOption,\n    styles\n  }; // Sync real parent\n\n  syncRealContainer(container, option);\n  const existNode = findExistNode(key, option);\n\n  if (existNode) {\n    var _option$csp, _option$csp2;\n\n    if (((_option$csp = option.csp) === null || _option$csp === void 0 ? void 0 : _option$csp.nonce) && existNode.nonce !== ((_option$csp2 = option.csp) === null || _option$csp2 === void 0 ? void 0 : _option$csp2.nonce)) {\n      var _option$csp3;\n\n      existNode.nonce = (_option$csp3 = option.csp) === null || _option$csp3 === void 0 ? void 0 : _option$csp3.nonce;\n    }\n\n    if (existNode.innerHTML !== css) {\n      existNode.innerHTML = css;\n    }\n\n    return existNode;\n  }\n\n  const newNode = injectCSS(css, option);\n  newNode.setAttribute(getMark(option), key);\n  return newNode;\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@ant-design/icons/node_modules/@rc-component/util/es/Dom/dynamicCSS.js"],"names":["canUseDom","contains","APPEND_ORDER","APPEND_PRIORITY","MARK_KEY","containerCache","Map","getMark","mark","startsWith","getContainer","option","attachTo","head","document","querySelector","body","getOrder","prepend","findStyles","container","Array","from","get","children","filter","node","tagName","injectCSS","css","csp","priority","mergedOrder","isPrependQueue","styleNode","createElement","setAttribute","nonce","innerHTML","firstChild","existStyle","styles","includes","getAttribute","nodePriority","Number","length","insertBefore","nextSibling","appendChild","findExistNode","key","find","removeCSS","existNode","removeChild","syncRealContainer","cachedRealContainer","placeholderStyle","parentNode","set","clearContainerCache","clear","updateCSS","originOption","newNode"],"mappings":"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","sourcesContent":["import canUseDom from \"./canUseDom\";\nimport contains from \"./contains\";\nconst APPEND_ORDER = 'data-rc-order';\nconst APPEND_PRIORITY = 'data-rc-priority';\nconst MARK_KEY = `rc-util-key`;\nconst containerCache = new Map();\nfunction getMark({\n  mark\n} = {}) {\n  if (mark) {\n    return mark.startsWith('data-') ? mark : `data-${mark}`;\n  }\n  return MARK_KEY;\n}\nfunction getContainer(option) {\n  if (option.attachTo) {\n    return option.attachTo;\n  }\n  const head = document.querySelector('head');\n  return head || document.body;\n}\nfunction getOrder(prepend) {\n  if (prepend === 'queue') {\n    return 'prependQueue';\n  }\n  return prepend ? 'prepend' : 'append';\n}\n\n/**\n * Find style which inject by rc-util\n */\nfunction findStyles(container) {\n  return Array.from((containerCache.get(container) || container).children).filter(node => node.tagName === 'STYLE');\n}\nexport function injectCSS(css, option = {}) {\n  if (!canUseDom()) {\n    return null;\n  }\n  const {\n    csp,\n    prepend,\n    priority = 0\n  } = option;\n  const mergedOrder = getOrder(prepend);\n  const isPrependQueue = mergedOrder === 'prependQueue';\n  const styleNode = document.createElement('style');\n  styleNode.setAttribute(APPEND_ORDER, mergedOrder);\n  if (isPrependQueue && priority) {\n    styleNode.setAttribute(APPEND_PRIORITY, `${priority}`);\n  }\n  if (csp?.nonce) {\n    styleNode.nonce = csp?.nonce;\n  }\n  styleNode.innerHTML = css;\n  const container = getContainer(option);\n  const {\n    firstChild\n  } = container;\n  if (prepend) {\n    // If is queue `prepend`, it will prepend first style and then append rest style\n    if (isPrependQueue) {\n      const existStyle = (option.styles || findStyles(container)).filter(node => {\n        // Ignore style which not injected by rc-util with prepend\n        if (!['prepend', 'prependQueue'].includes(node.getAttribute(APPEND_ORDER))) {\n          return false;\n        }\n\n        // Ignore style which priority less then new style\n        const nodePriority = Number(node.getAttribute(APPEND_PRIORITY) || 0);\n        return priority >= nodePriority;\n      });\n      if (existStyle.length) {\n        container.insertBefore(styleNode, existStyle[existStyle.length - 1].nextSibling);\n        return styleNode;\n      }\n    }\n\n    // Use `insertBefore` as `prepend`\n    container.insertBefore(styleNode, firstChild);\n  } else {\n    container.appendChild(styleNode);\n  }\n  return styleNode;\n}\nfunction findExistNode(key, option = {}) {\n  let {\n    styles\n  } = option;\n  styles ||= findStyles(getContainer(option));\n  return styles.find(node => node.getAttribute(getMark(option)) === key);\n}\nexport function removeCSS(key, option = {}) {\n  const existNode = findExistNode(key, option);\n  if (existNode) {\n    const container = getContainer(option);\n    container.removeChild(existNode);\n  }\n}\n\n/**\n * qiankun will inject `appendChild` to insert into other\n */\nfunction syncRealContainer(container, option) {\n  const cachedRealContainer = containerCache.get(container);\n\n  // Find real container when not cached or cached container removed\n  if (!cachedRealContainer || !contains(document, cachedRealContainer)) {\n    const placeholderStyle = injectCSS('', option);\n    const {\n      parentNode\n    } = placeholderStyle;\n    containerCache.set(container, parentNode);\n    container.removeChild(placeholderStyle);\n  }\n}\n\n/**\n * manually clear container cache to avoid global cache in unit testes\n */\nexport function clearContainerCache() {\n  containerCache.clear();\n}\nexport function updateCSS(css, key, originOption = {}) {\n  const container = getContainer(originOption);\n  const styles = findStyles(container);\n  const option = {\n    ...originOption,\n    styles\n  };\n\n  // Sync real parent\n  syncRealContainer(container, option);\n  const existNode = findExistNode(key, option);\n  if (existNode) {\n    if (option.csp?.nonce && existNode.nonce !== option.csp?.nonce) {\n      existNode.nonce = option.csp?.nonce;\n    }\n    if (existNode.innerHTML !== css) {\n      existNode.innerHTML = css;\n    }\n    return existNode;\n  }\n  const newNode = injectCSS(css, option);\n  newNode.setAttribute(getMark(option), key);\n  return newNode;\n}"]},"metadata":{},"sourceType":"module"}