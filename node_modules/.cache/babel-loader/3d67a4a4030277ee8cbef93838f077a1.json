{"ast":null,"code":"import rules from \"../rule/index\";\n\nvar array = function array(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if ((value === undefined || value === null) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options, 'array');\n\n    if (value !== undefined && value !== null) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n};\n\nexport default array;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@rc-component/async-validator/es/validator/array.js"],"names":["rules","array","rule","value","callback","source","options","errors","validate","required","hasOwnProperty","field","undefined","type","range"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,eAAlB;;AACA,IAAIC,KAAK,GAAG,SAASA,KAAT,CAAeC,IAAf,EAAqBC,KAArB,EAA4BC,QAA5B,EAAsCC,MAAtC,EAA8CC,OAA9C,EAAuD;AACjE,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,QAAQ,GAAGN,IAAI,CAACO,QAAL,IAAiB,CAACP,IAAI,CAACO,QAAN,IAAkBJ,MAAM,CAACK,cAAP,CAAsBR,IAAI,CAACS,KAA3B,CAAlD;;AACA,MAAIH,QAAJ,EAAc;AACZ,QAAI,CAACL,KAAK,KAAKS,SAAV,IAAuBT,KAAK,KAAK,IAAlC,KAA2C,CAACD,IAAI,CAACO,QAArD,EAA+D;AAC7D,aAAOL,QAAQ,EAAf;AACD;;AACDJ,IAAAA,KAAK,CAACS,QAAN,CAAeP,IAAf,EAAqBC,KAArB,EAA4BE,MAA5B,EAAoCE,MAApC,EAA4CD,OAA5C,EAAqD,OAArD;;AACA,QAAIH,KAAK,KAAKS,SAAV,IAAuBT,KAAK,KAAK,IAArC,EAA2C;AACzCH,MAAAA,KAAK,CAACa,IAAN,CAAWX,IAAX,EAAiBC,KAAjB,EAAwBE,MAAxB,EAAgCE,MAAhC,EAAwCD,OAAxC;AACAN,MAAAA,KAAK,CAACc,KAAN,CAAYZ,IAAZ,EAAkBC,KAAlB,EAAyBE,MAAzB,EAAiCE,MAAjC,EAAyCD,OAAzC;AACD;AACF;;AACDF,EAAAA,QAAQ,CAACG,MAAD,CAAR;AACD,CAdD;;AAeA,eAAeN,KAAf","sourcesContent":["import rules from \"../rule/index\";\nvar array = function array(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if ((value === undefined || value === null) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'array');\n    if (value !== undefined && value !== null) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nexport default array;"]},"metadata":{},"sourceType":"module"}