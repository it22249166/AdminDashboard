{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\n/**\n * This function will try to call requestIdleCallback if available to save performance.\n * No need `getLabel` here since already fetch on `rawLabeledValue`.\n */\n\nexport default (function (values) {\n  var cacheRef = React.useRef({\n    valueLabels: new Map()\n  });\n  return React.useMemo(function () {\n    var valueLabels = cacheRef.current.valueLabels;\n    var valueLabelsCache = new Map();\n    var filledValues = values.map(function (item) {\n      var value = item.value,\n          label = item.label;\n      var mergedLabel = label !== null && label !== void 0 ? label : valueLabels.get(value); // Save in cache\n\n      valueLabelsCache.set(value, mergedLabel);\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: mergedLabel\n      });\n    });\n    cacheRef.current.valueLabels = valueLabelsCache;\n    return [filledValues];\n  }, [values]);\n});","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-tree-select/es/hooks/useCache.js"],"names":["_objectSpread","React","values","cacheRef","useRef","valueLabels","Map","useMemo","current","valueLabelsCache","filledValues","map","item","value","label","mergedLabel","get","set"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,0CAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA;AACA;AACA;AACA;;AACA,gBAAgB,UAAUC,MAAV,EAAkB;AAChC,MAAIC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC1BC,IAAAA,WAAW,EAAE,IAAIC,GAAJ;AADa,GAAb,CAAf;AAGA,SAAOL,KAAK,CAACM,OAAN,CAAc,YAAY;AAC/B,QAAIF,WAAW,GAAGF,QAAQ,CAACK,OAAT,CAAiBH,WAAnC;AACA,QAAII,gBAAgB,GAAG,IAAIH,GAAJ,EAAvB;AACA,QAAII,YAAY,GAAGR,MAAM,CAACS,GAAP,CAAW,UAAUC,IAAV,EAAgB;AAC5C,UAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,UACEC,KAAK,GAAGF,IAAI,CAACE,KADf;AAEA,UAAIC,WAAW,GAAGD,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqCA,KAArC,GAA6CT,WAAW,CAACW,GAAZ,CAAgBH,KAAhB,CAA/D,CAH4C,CAK5C;;AACAJ,MAAAA,gBAAgB,CAACQ,GAAjB,CAAqBJ,KAArB,EAA4BE,WAA5B;AACA,aAAOf,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKY,IAAL,CAAd,EAA0B,EAA1B,EAA8B;AAChDE,QAAAA,KAAK,EAAEC;AADyC,OAA9B,CAApB;AAGD,KAVkB,CAAnB;AAWAZ,IAAAA,QAAQ,CAACK,OAAT,CAAiBH,WAAjB,GAA+BI,gBAA/B;AACA,WAAO,CAACC,YAAD,CAAP;AACD,GAhBM,EAgBJ,CAACR,MAAD,CAhBI,CAAP;AAiBD,CArBD","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\n/**\n * This function will try to call requestIdleCallback if available to save performance.\n * No need `getLabel` here since already fetch on `rawLabeledValue`.\n */\nexport default (function (values) {\n  var cacheRef = React.useRef({\n    valueLabels: new Map()\n  });\n  return React.useMemo(function () {\n    var valueLabels = cacheRef.current.valueLabels;\n    var valueLabelsCache = new Map();\n    var filledValues = values.map(function (item) {\n      var value = item.value,\n        label = item.label;\n      var mergedLabel = label !== null && label !== void 0 ? label : valueLabels.get(value);\n\n      // Save in cache\n      valueLabelsCache.set(value, mergedLabel);\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: mergedLabel\n      });\n    });\n    cacheRef.current.valueLabels = valueLabelsCache;\n    return [filledValues];\n  }, [values]);\n});"]},"metadata":{},"sourceType":"module"}