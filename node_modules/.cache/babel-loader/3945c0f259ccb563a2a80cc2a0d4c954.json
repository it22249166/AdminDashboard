{"ast":null,"code":"import useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport { useRef } from 'react';\nvar SMOOTH_PTG = 14 / 15;\nexport default function useMobileTouchMove(inVirtual, listRef, callback) {\n  var touchedRef = useRef(false);\n  var touchXRef = useRef(0);\n  var touchYRef = useRef(0);\n  var elementRef = useRef(null); // Smooth scroll\n\n  var intervalRef = useRef(null);\n  /* eslint-disable prefer-const */\n\n  var cleanUpEvents;\n\n  var onTouchMove = function onTouchMove(e) {\n    if (touchedRef.current) {\n      var currentX = Math.ceil(e.touches[0].pageX);\n      var currentY = Math.ceil(e.touches[0].pageY);\n      var offsetX = touchXRef.current - currentX;\n      var offsetY = touchYRef.current - currentY;\n\n      var _isHorizontal = Math.abs(offsetX) > Math.abs(offsetY);\n\n      if (_isHorizontal) {\n        touchXRef.current = currentX;\n      } else {\n        touchYRef.current = currentY;\n      }\n\n      var scrollHandled = callback(_isHorizontal, _isHorizontal ? offsetX : offsetY, false, e);\n\n      if (scrollHandled) {\n        e.preventDefault();\n      } // Smooth interval\n\n\n      clearInterval(intervalRef.current);\n\n      if (scrollHandled) {\n        intervalRef.current = setInterval(function () {\n          if (_isHorizontal) {\n            offsetX *= SMOOTH_PTG;\n          } else {\n            offsetY *= SMOOTH_PTG;\n          }\n\n          var offset = Math.floor(_isHorizontal ? offsetX : offsetY);\n\n          if (!callback(_isHorizontal, offset, true) || Math.abs(offset) <= 0.1) {\n            clearInterval(intervalRef.current);\n          }\n        }, 16);\n      }\n    }\n  };\n\n  var onTouchEnd = function onTouchEnd() {\n    touchedRef.current = false;\n    cleanUpEvents();\n  };\n\n  var onTouchStart = function onTouchStart(e) {\n    cleanUpEvents();\n\n    if (e.touches.length === 1 && !touchedRef.current) {\n      touchedRef.current = true;\n      touchXRef.current = Math.ceil(e.touches[0].pageX);\n      touchYRef.current = Math.ceil(e.touches[0].pageY);\n      elementRef.current = e.target;\n      elementRef.current.addEventListener('touchmove', onTouchMove, {\n        passive: false\n      });\n      elementRef.current.addEventListener('touchend', onTouchEnd, {\n        passive: true\n      });\n    }\n  };\n\n  cleanUpEvents = function cleanUpEvents() {\n    if (elementRef.current) {\n      elementRef.current.removeEventListener('touchmove', onTouchMove);\n      elementRef.current.removeEventListener('touchend', onTouchEnd);\n    }\n  };\n\n  useLayoutEffect(function () {\n    if (inVirtual) {\n      listRef.current.addEventListener('touchstart', onTouchStart, {\n        passive: true\n      });\n    }\n\n    return function () {\n      var _listRef$current;\n\n      (_listRef$current = listRef.current) === null || _listRef$current === void 0 || _listRef$current.removeEventListener('touchstart', onTouchStart);\n      cleanUpEvents();\n      clearInterval(intervalRef.current);\n    };\n  }, [inVirtual]);\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-virtual-list/es/hooks/useMobileTouchMove.js"],"names":["useLayoutEffect","useRef","SMOOTH_PTG","useMobileTouchMove","inVirtual","listRef","callback","touchedRef","touchXRef","touchYRef","elementRef","intervalRef","cleanUpEvents","onTouchMove","e","current","currentX","Math","ceil","touches","pageX","currentY","pageY","offsetX","offsetY","_isHorizontal","abs","scrollHandled","preventDefault","clearInterval","setInterval","offset","floor","onTouchEnd","onTouchStart","length","target","addEventListener","passive","removeEventListener","_listRef$current"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,kCAA5B;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,IAAIC,UAAU,GAAG,KAAK,EAAtB;AACA,eAAe,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCC,OAAvC,EAAgDC,QAAhD,EAA0D;AACvE,MAAIC,UAAU,GAAGN,MAAM,CAAC,KAAD,CAAvB;AACA,MAAIO,SAAS,GAAGP,MAAM,CAAC,CAAD,CAAtB;AACA,MAAIQ,SAAS,GAAGR,MAAM,CAAC,CAAD,CAAtB;AACA,MAAIS,UAAU,GAAGT,MAAM,CAAC,IAAD,CAAvB,CAJuE,CAMvE;;AACA,MAAIU,WAAW,GAAGV,MAAM,CAAC,IAAD,CAAxB;AAEA;;AACA,MAAIW,aAAJ;;AACA,MAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,CAArB,EAAwB;AACxC,QAAIP,UAAU,CAACQ,OAAf,EAAwB;AACtB,UAAIC,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUJ,CAAC,CAACK,OAAF,CAAU,CAAV,EAAaC,KAAvB,CAAf;AACA,UAAIC,QAAQ,GAAGJ,IAAI,CAACC,IAAL,CAAUJ,CAAC,CAACK,OAAF,CAAU,CAAV,EAAaG,KAAvB,CAAf;AACA,UAAIC,OAAO,GAAGf,SAAS,CAACO,OAAV,GAAoBC,QAAlC;AACA,UAAIQ,OAAO,GAAGf,SAAS,CAACM,OAAV,GAAoBM,QAAlC;;AACA,UAAII,aAAa,GAAGR,IAAI,CAACS,GAAL,CAASH,OAAT,IAAoBN,IAAI,CAACS,GAAL,CAASF,OAAT,CAAxC;;AACA,UAAIC,aAAJ,EAAmB;AACjBjB,QAAAA,SAAS,CAACO,OAAV,GAAoBC,QAApB;AACD,OAFD,MAEO;AACLP,QAAAA,SAAS,CAACM,OAAV,GAAoBM,QAApB;AACD;;AACD,UAAIM,aAAa,GAAGrB,QAAQ,CAACmB,aAAD,EAAgBA,aAAa,GAAGF,OAAH,GAAaC,OAA1C,EAAmD,KAAnD,EAA0DV,CAA1D,CAA5B;;AACA,UAAIa,aAAJ,EAAmB;AACjBb,QAAAA,CAAC,CAACc,cAAF;AACD,OAdqB,CAgBtB;;;AACAC,MAAAA,aAAa,CAAClB,WAAW,CAACI,OAAb,CAAb;;AACA,UAAIY,aAAJ,EAAmB;AACjBhB,QAAAA,WAAW,CAACI,OAAZ,GAAsBe,WAAW,CAAC,YAAY;AAC5C,cAAIL,aAAJ,EAAmB;AACjBF,YAAAA,OAAO,IAAIrB,UAAX;AACD,WAFD,MAEO;AACLsB,YAAAA,OAAO,IAAItB,UAAX;AACD;;AACD,cAAI6B,MAAM,GAAGd,IAAI,CAACe,KAAL,CAAWP,aAAa,GAAGF,OAAH,GAAaC,OAArC,CAAb;;AACA,cAAI,CAAClB,QAAQ,CAACmB,aAAD,EAAgBM,MAAhB,EAAwB,IAAxB,CAAT,IAA0Cd,IAAI,CAACS,GAAL,CAASK,MAAT,KAAoB,GAAlE,EAAuE;AACrEF,YAAAA,aAAa,CAAClB,WAAW,CAACI,OAAb,CAAb;AACD;AACF,SAVgC,EAU9B,EAV8B,CAAjC;AAWD;AACF;AACF,GAjCD;;AAkCA,MAAIkB,UAAU,GAAG,SAASA,UAAT,GAAsB;AACrC1B,IAAAA,UAAU,CAACQ,OAAX,GAAqB,KAArB;AACAH,IAAAA,aAAa;AACd,GAHD;;AAIA,MAAIsB,YAAY,GAAG,SAASA,YAAT,CAAsBpB,CAAtB,EAAyB;AAC1CF,IAAAA,aAAa;;AACb,QAAIE,CAAC,CAACK,OAAF,CAAUgB,MAAV,KAAqB,CAArB,IAA0B,CAAC5B,UAAU,CAACQ,OAA1C,EAAmD;AACjDR,MAAAA,UAAU,CAACQ,OAAX,GAAqB,IAArB;AACAP,MAAAA,SAAS,CAACO,OAAV,GAAoBE,IAAI,CAACC,IAAL,CAAUJ,CAAC,CAACK,OAAF,CAAU,CAAV,EAAaC,KAAvB,CAApB;AACAX,MAAAA,SAAS,CAACM,OAAV,GAAoBE,IAAI,CAACC,IAAL,CAAUJ,CAAC,CAACK,OAAF,CAAU,CAAV,EAAaG,KAAvB,CAApB;AACAZ,MAAAA,UAAU,CAACK,OAAX,GAAqBD,CAAC,CAACsB,MAAvB;AACA1B,MAAAA,UAAU,CAACK,OAAX,CAAmBsB,gBAAnB,CAAoC,WAApC,EAAiDxB,WAAjD,EAA8D;AAC5DyB,QAAAA,OAAO,EAAE;AADmD,OAA9D;AAGA5B,MAAAA,UAAU,CAACK,OAAX,CAAmBsB,gBAAnB,CAAoC,UAApC,EAAgDJ,UAAhD,EAA4D;AAC1DK,QAAAA,OAAO,EAAE;AADiD,OAA5D;AAGD;AACF,GAdD;;AAeA1B,EAAAA,aAAa,GAAG,SAASA,aAAT,GAAyB;AACvC,QAAIF,UAAU,CAACK,OAAf,EAAwB;AACtBL,MAAAA,UAAU,CAACK,OAAX,CAAmBwB,mBAAnB,CAAuC,WAAvC,EAAoD1B,WAApD;AACAH,MAAAA,UAAU,CAACK,OAAX,CAAmBwB,mBAAnB,CAAuC,UAAvC,EAAmDN,UAAnD;AACD;AACF,GALD;;AAMAjC,EAAAA,eAAe,CAAC,YAAY;AAC1B,QAAII,SAAJ,EAAe;AACbC,MAAAA,OAAO,CAACU,OAAR,CAAgBsB,gBAAhB,CAAiC,YAAjC,EAA+CH,YAA/C,EAA6D;AAC3DI,QAAAA,OAAO,EAAE;AADkD,OAA7D;AAGD;;AACD,WAAO,YAAY;AACjB,UAAIE,gBAAJ;;AACA,OAACA,gBAAgB,GAAGnC,OAAO,CAACU,OAA5B,MAAyC,IAAzC,IAAiDyB,gBAAgB,KAAK,KAAK,CAA3E,IAAgFA,gBAAgB,CAACD,mBAAjB,CAAqC,YAArC,EAAmDL,YAAnD,CAAhF;AACAtB,MAAAA,aAAa;AACbiB,MAAAA,aAAa,CAAClB,WAAW,CAACI,OAAb,CAAb;AACD,KALD;AAMD,GAZc,EAYZ,CAACX,SAAD,CAZY,CAAf;AAaD","sourcesContent":["import useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport { useRef } from 'react';\nvar SMOOTH_PTG = 14 / 15;\nexport default function useMobileTouchMove(inVirtual, listRef, callback) {\n  var touchedRef = useRef(false);\n  var touchXRef = useRef(0);\n  var touchYRef = useRef(0);\n  var elementRef = useRef(null);\n\n  // Smooth scroll\n  var intervalRef = useRef(null);\n\n  /* eslint-disable prefer-const */\n  var cleanUpEvents;\n  var onTouchMove = function onTouchMove(e) {\n    if (touchedRef.current) {\n      var currentX = Math.ceil(e.touches[0].pageX);\n      var currentY = Math.ceil(e.touches[0].pageY);\n      var offsetX = touchXRef.current - currentX;\n      var offsetY = touchYRef.current - currentY;\n      var _isHorizontal = Math.abs(offsetX) > Math.abs(offsetY);\n      if (_isHorizontal) {\n        touchXRef.current = currentX;\n      } else {\n        touchYRef.current = currentY;\n      }\n      var scrollHandled = callback(_isHorizontal, _isHorizontal ? offsetX : offsetY, false, e);\n      if (scrollHandled) {\n        e.preventDefault();\n      }\n\n      // Smooth interval\n      clearInterval(intervalRef.current);\n      if (scrollHandled) {\n        intervalRef.current = setInterval(function () {\n          if (_isHorizontal) {\n            offsetX *= SMOOTH_PTG;\n          } else {\n            offsetY *= SMOOTH_PTG;\n          }\n          var offset = Math.floor(_isHorizontal ? offsetX : offsetY);\n          if (!callback(_isHorizontal, offset, true) || Math.abs(offset) <= 0.1) {\n            clearInterval(intervalRef.current);\n          }\n        }, 16);\n      }\n    }\n  };\n  var onTouchEnd = function onTouchEnd() {\n    touchedRef.current = false;\n    cleanUpEvents();\n  };\n  var onTouchStart = function onTouchStart(e) {\n    cleanUpEvents();\n    if (e.touches.length === 1 && !touchedRef.current) {\n      touchedRef.current = true;\n      touchXRef.current = Math.ceil(e.touches[0].pageX);\n      touchYRef.current = Math.ceil(e.touches[0].pageY);\n      elementRef.current = e.target;\n      elementRef.current.addEventListener('touchmove', onTouchMove, {\n        passive: false\n      });\n      elementRef.current.addEventListener('touchend', onTouchEnd, {\n        passive: true\n      });\n    }\n  };\n  cleanUpEvents = function cleanUpEvents() {\n    if (elementRef.current) {\n      elementRef.current.removeEventListener('touchmove', onTouchMove);\n      elementRef.current.removeEventListener('touchend', onTouchEnd);\n    }\n  };\n  useLayoutEffect(function () {\n    if (inVirtual) {\n      listRef.current.addEventListener('touchstart', onTouchStart, {\n        passive: true\n      });\n    }\n    return function () {\n      var _listRef$current;\n      (_listRef$current = listRef.current) === null || _listRef$current === void 0 || _listRef$current.removeEventListener('touchstart', onTouchStart);\n      cleanUpEvents();\n      clearInterval(intervalRef.current);\n    };\n  }, [inVirtual]);\n}"]},"metadata":{},"sourceType":"module"}