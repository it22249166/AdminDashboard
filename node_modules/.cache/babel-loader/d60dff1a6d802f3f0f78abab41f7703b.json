{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"value\", \"size\", \"level\", \"bgColor\", \"fgColor\", \"includeMargin\", \"minVersion\", \"title\", \"marginSize\", \"imageSettings\"];\nimport React from 'react';\nimport { DEFAULT_BACKGROUND_COLOR, DEFAULT_FRONT_COLOR, DEFAULT_NEED_MARGIN, DEFAULT_LEVEL, DEFAULT_MINVERSION, DEFAULT_SIZE, excavateModules, generatePath } from \"./utils\";\nimport { useQRCode } from \"./hooks/useQRCode\";\nvar QRCodeSVG = /*#__PURE__*/React.forwardRef(function QRCodeSVG(props, forwardedRef) {\n  var value = props.value,\n      _props$size = props.size,\n      size = _props$size === void 0 ? DEFAULT_SIZE : _props$size,\n      _props$level = props.level,\n      level = _props$level === void 0 ? DEFAULT_LEVEL : _props$level,\n      _props$bgColor = props.bgColor,\n      bgColor = _props$bgColor === void 0 ? DEFAULT_BACKGROUND_COLOR : _props$bgColor,\n      _props$fgColor = props.fgColor,\n      fgColor = _props$fgColor === void 0 ? DEFAULT_FRONT_COLOR : _props$fgColor,\n      _props$includeMargin = props.includeMargin,\n      includeMargin = _props$includeMargin === void 0 ? DEFAULT_NEED_MARGIN : _props$includeMargin,\n      _props$minVersion = props.minVersion,\n      minVersion = _props$minVersion === void 0 ? DEFAULT_MINVERSION : _props$minVersion,\n      title = props.title,\n      marginSize = props.marginSize,\n      imageSettings = props.imageSettings,\n      otherProps = _objectWithoutProperties(props, _excluded);\n\n  var _useQRCode = useQRCode({\n    value: value,\n    level: level,\n    minVersion: minVersion,\n    includeMargin: includeMargin,\n    marginSize: marginSize,\n    imageSettings: imageSettings,\n    size: size\n  }),\n      margin = _useQRCode.margin,\n      cells = _useQRCode.cells,\n      numCells = _useQRCode.numCells,\n      calculatedImageSettings = _useQRCode.calculatedImageSettings;\n\n  var cellsToDraw = cells;\n  var image = null;\n\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cellsToDraw = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n\n    image = /*#__PURE__*/React.createElement(\"image\", {\n      href: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\",\n      opacity: calculatedImageSettings.opacity // when crossOrigin is not set, the image will be tainted\n      // and the canvas cannot be exported to an image\n      ,\n      crossOrigin: calculatedImageSettings.crossOrigin\n    });\n  }\n\n  var fgPath = generatePath(cellsToDraw, margin);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: size,\n    width: size,\n    viewBox: \"0 0 \".concat(numCells, \" \").concat(numCells),\n    ref: forwardedRef,\n    role: \"img\"\n  }, otherProps), !!title && /*#__PURE__*/React.createElement(\"title\", null, title), /*#__PURE__*/React.createElement(\"path\", {\n    fill: bgColor,\n    d: \"M0,0 h\".concat(numCells, \"v\").concat(numCells, \"H0z\"),\n    shapeRendering: \"crispEdges\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n});\nQRCodeSVG.displayName = 'QRCodeSVG';\nexport { QRCodeSVG };","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@rc-component/qrcode/es/QRCodeSVG.js"],"names":["_extends","_objectWithoutProperties","_excluded","React","DEFAULT_BACKGROUND_COLOR","DEFAULT_FRONT_COLOR","DEFAULT_NEED_MARGIN","DEFAULT_LEVEL","DEFAULT_MINVERSION","DEFAULT_SIZE","excavateModules","generatePath","useQRCode","QRCodeSVG","forwardRef","props","forwardedRef","value","_props$size","size","_props$level","level","_props$bgColor","bgColor","_props$fgColor","fgColor","_props$includeMargin","includeMargin","_props$minVersion","minVersion","title","marginSize","imageSettings","otherProps","_useQRCode","margin","cells","numCells","calculatedImageSettings","cellsToDraw","image","excavation","createElement","href","src","height","h","width","w","x","y","preserveAspectRatio","opacity","crossOrigin","fgPath","viewBox","concat","ref","role","fill","d","shapeRendering","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"value\", \"size\", \"level\", \"bgColor\", \"fgColor\", \"includeMargin\", \"minVersion\", \"title\", \"marginSize\", \"imageSettings\"];\nimport React from 'react';\nimport { DEFAULT_BACKGROUND_COLOR, DEFAULT_FRONT_COLOR, DEFAULT_NEED_MARGIN, DEFAULT_LEVEL, DEFAULT_MINVERSION, DEFAULT_SIZE, excavateModules, generatePath } from \"./utils\";\nimport { useQRCode } from \"./hooks/useQRCode\";\nvar QRCodeSVG = /*#__PURE__*/React.forwardRef(function QRCodeSVG(props, forwardedRef) {\n  var value = props.value,\n    _props$size = props.size,\n    size = _props$size === void 0 ? DEFAULT_SIZE : _props$size,\n    _props$level = props.level,\n    level = _props$level === void 0 ? DEFAULT_LEVEL : _props$level,\n    _props$bgColor = props.bgColor,\n    bgColor = _props$bgColor === void 0 ? DEFAULT_BACKGROUND_COLOR : _props$bgColor,\n    _props$fgColor = props.fgColor,\n    fgColor = _props$fgColor === void 0 ? DEFAULT_FRONT_COLOR : _props$fgColor,\n    _props$includeMargin = props.includeMargin,\n    includeMargin = _props$includeMargin === void 0 ? DEFAULT_NEED_MARGIN : _props$includeMargin,\n    _props$minVersion = props.minVersion,\n    minVersion = _props$minVersion === void 0 ? DEFAULT_MINVERSION : _props$minVersion,\n    title = props.title,\n    marginSize = props.marginSize,\n    imageSettings = props.imageSettings,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var _useQRCode = useQRCode({\n      value: value,\n      level: level,\n      minVersion: minVersion,\n      includeMargin: includeMargin,\n      marginSize: marginSize,\n      imageSettings: imageSettings,\n      size: size\n    }),\n    margin = _useQRCode.margin,\n    cells = _useQRCode.cells,\n    numCells = _useQRCode.numCells,\n    calculatedImageSettings = _useQRCode.calculatedImageSettings;\n  var cellsToDraw = cells;\n  var image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cellsToDraw = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /*#__PURE__*/React.createElement(\"image\", {\n      href: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\",\n      opacity: calculatedImageSettings.opacity\n      // when crossOrigin is not set, the image will be tainted\n      // and the canvas cannot be exported to an image\n      ,\n      crossOrigin: calculatedImageSettings.crossOrigin\n    });\n  }\n  var fgPath = generatePath(cellsToDraw, margin);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: size,\n    width: size,\n    viewBox: \"0 0 \".concat(numCells, \" \").concat(numCells),\n    ref: forwardedRef,\n    role: \"img\"\n  }, otherProps), !!title && /*#__PURE__*/React.createElement(\"title\", null, title), /*#__PURE__*/React.createElement(\"path\", {\n    fill: bgColor,\n    d: \"M0,0 h\".concat(numCells, \"v\").concat(numCells, \"H0z\"),\n    shapeRendering: \"crispEdges\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n});\nQRCodeSVG.displayName = 'QRCodeSVG';\nexport { QRCodeSVG };"]},"metadata":{},"sourceType":"module"}