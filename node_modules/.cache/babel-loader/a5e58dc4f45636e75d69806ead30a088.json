{"ast":null,"code":"\"use client\";\n\nimport React, { useState } from 'react';\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport LeftOutlined from \"@ant-design/icons/es/icons/LeftOutlined\";\nimport RightOutlined from \"@ant-design/icons/es/icons/RightOutlined\";\nimport UpOutlined from \"@ant-design/icons/es/icons/UpOutlined\";\nimport classNames from 'classnames';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\n\nfunction getValidNumber(num) {\n  return typeof num === 'number' && !Number.isNaN(num) ? Math.round(num) : 0;\n}\n\nconst SplitBar = props => {\n  const {\n    prefixCls,\n    vertical,\n    index,\n    active,\n    ariaNow,\n    ariaMin,\n    ariaMax,\n    resizable,\n    startCollapsible,\n    endCollapsible,\n    onOffsetStart,\n    onOffsetUpdate,\n    onOffsetEnd,\n    onCollapse,\n    lazy,\n    containerSize\n  } = props;\n  const splitBarPrefixCls = `${prefixCls}-bar`; // ======================== Resize ========================\n\n  const [startPos, setStartPos] = useState(null);\n  const [constrainedOffset, setConstrainedOffset] = useState(0);\n  const constrainedOffsetX = vertical ? 0 : constrainedOffset;\n  const constrainedOffsetY = vertical ? constrainedOffset : 0;\n\n  const onMouseDown = e => {\n    if (resizable && e.currentTarget) {\n      setStartPos([e.pageX, e.pageY]);\n      onOffsetStart(index);\n    }\n  };\n\n  const onTouchStart = e => {\n    if (resizable && e.touches.length === 1) {\n      const touch = e.touches[0];\n      setStartPos([touch.pageX, touch.pageY]);\n      onOffsetStart(index);\n    }\n  }; // Updated constraint calculation\n\n\n  const getConstrainedOffset = rawOffset => {\n    const currentPos = containerSize * ariaNow / 100;\n    const newPos = currentPos + rawOffset; // Calculate available space\n\n    const minAllowed = Math.max(0, containerSize * ariaMin / 100);\n    const maxAllowed = Math.min(containerSize, containerSize * ariaMax / 100); // Constrain new position within bounds\n\n    const clampedPos = Math.max(minAllowed, Math.min(maxAllowed, newPos));\n    return clampedPos - currentPos;\n  };\n\n  const handleLazyMove = useEvent((offsetX, offsetY) => {\n    const constrainedOffsetValue = getConstrainedOffset(vertical ? offsetY : offsetX);\n    setConstrainedOffset(constrainedOffsetValue);\n  });\n  const handleLazyEnd = useEvent(() => {\n    onOffsetUpdate(index, constrainedOffsetX, constrainedOffsetY, true);\n    setConstrainedOffset(0);\n    onOffsetEnd();\n  });\n  React.useEffect(() => {\n    if (startPos) {\n      const onMouseMove = e => {\n        const {\n          pageX,\n          pageY\n        } = e;\n        const offsetX = pageX - startPos[0];\n        const offsetY = pageY - startPos[1];\n\n        if (lazy) {\n          handleLazyMove(offsetX, offsetY);\n        } else {\n          onOffsetUpdate(index, offsetX, offsetY);\n        }\n      };\n\n      const onMouseUp = () => {\n        if (lazy) {\n          handleLazyEnd();\n        } else {\n          onOffsetEnd();\n        }\n\n        setStartPos(null);\n      };\n\n      const handleTouchMove = e => {\n        if (e.touches.length === 1) {\n          const touch = e.touches[0];\n          const offsetX = touch.pageX - startPos[0];\n          const offsetY = touch.pageY - startPos[1];\n\n          if (lazy) {\n            handleLazyMove(offsetX, offsetY);\n          } else {\n            onOffsetUpdate(index, offsetX, offsetY);\n          }\n        }\n      };\n\n      const handleTouchEnd = () => {\n        if (lazy) {\n          handleLazyEnd();\n        }\n\n        setStartPos(null);\n        onOffsetEnd();\n      };\n\n      window.addEventListener('touchmove', handleTouchMove);\n      window.addEventListener('touchend', handleTouchEnd);\n      window.addEventListener('mousemove', onMouseMove);\n      window.addEventListener('mouseup', onMouseUp);\n      return () => {\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n        window.removeEventListener('touchmove', handleTouchMove);\n        window.removeEventListener('touchend', handleTouchEnd);\n      };\n    }\n  }, [startPos, lazy, vertical, index, containerSize, ariaNow, ariaMin, ariaMax]);\n  const transformStyle = {\n    [`--${splitBarPrefixCls}-preview-offset`]: `${constrainedOffset}px`\n  }; // ======================== Render ========================\n\n  const StartIcon = vertical ? UpOutlined : LeftOutlined;\n  const EndIcon = vertical ? DownOutlined : RightOutlined;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: splitBarPrefixCls,\n    role: \"separator\",\n    \"aria-valuenow\": getValidNumber(ariaNow),\n    \"aria-valuemin\": getValidNumber(ariaMin),\n    \"aria-valuemax\": getValidNumber(ariaMax)\n  }, lazy && /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${splitBarPrefixCls}-preview`, {\n      [`${splitBarPrefixCls}-preview-active`]: !!constrainedOffset\n    }),\n    style: transformStyle\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${splitBarPrefixCls}-dragger`, {\n      [`${splitBarPrefixCls}-dragger-disabled`]: !resizable,\n      [`${splitBarPrefixCls}-dragger-active`]: active\n    }),\n    onMouseDown: onMouseDown,\n    onTouchStart: onTouchStart\n  }), startCollapsible && /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${splitBarPrefixCls}-collapse-bar`, `${splitBarPrefixCls}-collapse-bar-start`),\n    onClick: () => onCollapse(index, 'start')\n  }, /*#__PURE__*/React.createElement(StartIcon, {\n    className: classNames(`${splitBarPrefixCls}-collapse-icon`, `${splitBarPrefixCls}-collapse-start`)\n  })), endCollapsible && /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${splitBarPrefixCls}-collapse-bar`, `${splitBarPrefixCls}-collapse-bar-end`),\n    onClick: () => onCollapse(index, 'end')\n  }, /*#__PURE__*/React.createElement(EndIcon, {\n    className: classNames(`${splitBarPrefixCls}-collapse-icon`, `${splitBarPrefixCls}-collapse-end`)\n  })));\n};\n\nexport default SplitBar;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/splitter/SplitBar.js"],"names":["React","useState","DownOutlined","LeftOutlined","RightOutlined","UpOutlined","classNames","useEvent","getValidNumber","num","Number","isNaN","Math","round","SplitBar","props","prefixCls","vertical","index","active","ariaNow","ariaMin","ariaMax","resizable","startCollapsible","endCollapsible","onOffsetStart","onOffsetUpdate","onOffsetEnd","onCollapse","lazy","containerSize","splitBarPrefixCls","startPos","setStartPos","constrainedOffset","setConstrainedOffset","constrainedOffsetX","constrainedOffsetY","onMouseDown","e","currentTarget","pageX","pageY","onTouchStart","touches","length","touch","getConstrainedOffset","rawOffset","currentPos","newPos","minAllowed","max","maxAllowed","min","clampedPos","handleLazyMove","offsetX","offsetY","constrainedOffsetValue","handleLazyEnd","useEffect","onMouseMove","onMouseUp","handleTouchMove","handleTouchEnd","window","addEventListener","removeEventListener","transformStyle","StartIcon","EndIcon","createElement","className","role","style","onClick"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport LeftOutlined from \"@ant-design/icons/es/icons/LeftOutlined\";\nimport RightOutlined from \"@ant-design/icons/es/icons/RightOutlined\";\nimport UpOutlined from \"@ant-design/icons/es/icons/UpOutlined\";\nimport classNames from 'classnames';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nfunction getValidNumber(num) {\n  return typeof num === 'number' && !Number.isNaN(num) ? Math.round(num) : 0;\n}\nconst SplitBar = props => {\n  const {\n    prefixCls,\n    vertical,\n    index,\n    active,\n    ariaNow,\n    ariaMin,\n    ariaMax,\n    resizable,\n    startCollapsible,\n    endCollapsible,\n    onOffsetStart,\n    onOffsetUpdate,\n    onOffsetEnd,\n    onCollapse,\n    lazy,\n    containerSize\n  } = props;\n  const splitBarPrefixCls = `${prefixCls}-bar`;\n  // ======================== Resize ========================\n  const [startPos, setStartPos] = useState(null);\n  const [constrainedOffset, setConstrainedOffset] = useState(0);\n  const constrainedOffsetX = vertical ? 0 : constrainedOffset;\n  const constrainedOffsetY = vertical ? constrainedOffset : 0;\n  const onMouseDown = e => {\n    if (resizable && e.currentTarget) {\n      setStartPos([e.pageX, e.pageY]);\n      onOffsetStart(index);\n    }\n  };\n  const onTouchStart = e => {\n    if (resizable && e.touches.length === 1) {\n      const touch = e.touches[0];\n      setStartPos([touch.pageX, touch.pageY]);\n      onOffsetStart(index);\n    }\n  };\n  // Updated constraint calculation\n  const getConstrainedOffset = rawOffset => {\n    const currentPos = containerSize * ariaNow / 100;\n    const newPos = currentPos + rawOffset;\n    // Calculate available space\n    const minAllowed = Math.max(0, containerSize * ariaMin / 100);\n    const maxAllowed = Math.min(containerSize, containerSize * ariaMax / 100);\n    // Constrain new position within bounds\n    const clampedPos = Math.max(minAllowed, Math.min(maxAllowed, newPos));\n    return clampedPos - currentPos;\n  };\n  const handleLazyMove = useEvent((offsetX, offsetY) => {\n    const constrainedOffsetValue = getConstrainedOffset(vertical ? offsetY : offsetX);\n    setConstrainedOffset(constrainedOffsetValue);\n  });\n  const handleLazyEnd = useEvent(() => {\n    onOffsetUpdate(index, constrainedOffsetX, constrainedOffsetY, true);\n    setConstrainedOffset(0);\n    onOffsetEnd();\n  });\n  React.useEffect(() => {\n    if (startPos) {\n      const onMouseMove = e => {\n        const {\n          pageX,\n          pageY\n        } = e;\n        const offsetX = pageX - startPos[0];\n        const offsetY = pageY - startPos[1];\n        if (lazy) {\n          handleLazyMove(offsetX, offsetY);\n        } else {\n          onOffsetUpdate(index, offsetX, offsetY);\n        }\n      };\n      const onMouseUp = () => {\n        if (lazy) {\n          handleLazyEnd();\n        } else {\n          onOffsetEnd();\n        }\n        setStartPos(null);\n      };\n      const handleTouchMove = e => {\n        if (e.touches.length === 1) {\n          const touch = e.touches[0];\n          const offsetX = touch.pageX - startPos[0];\n          const offsetY = touch.pageY - startPos[1];\n          if (lazy) {\n            handleLazyMove(offsetX, offsetY);\n          } else {\n            onOffsetUpdate(index, offsetX, offsetY);\n          }\n        }\n      };\n      const handleTouchEnd = () => {\n        if (lazy) {\n          handleLazyEnd();\n        }\n        setStartPos(null);\n        onOffsetEnd();\n      };\n      window.addEventListener('touchmove', handleTouchMove);\n      window.addEventListener('touchend', handleTouchEnd);\n      window.addEventListener('mousemove', onMouseMove);\n      window.addEventListener('mouseup', onMouseUp);\n      return () => {\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n        window.removeEventListener('touchmove', handleTouchMove);\n        window.removeEventListener('touchend', handleTouchEnd);\n      };\n    }\n  }, [startPos, lazy, vertical, index, containerSize, ariaNow, ariaMin, ariaMax]);\n  const transformStyle = {\n    [`--${splitBarPrefixCls}-preview-offset`]: `${constrainedOffset}px`\n  };\n  // ======================== Render ========================\n  const StartIcon = vertical ? UpOutlined : LeftOutlined;\n  const EndIcon = vertical ? DownOutlined : RightOutlined;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: splitBarPrefixCls,\n    role: \"separator\",\n    \"aria-valuenow\": getValidNumber(ariaNow),\n    \"aria-valuemin\": getValidNumber(ariaMin),\n    \"aria-valuemax\": getValidNumber(ariaMax)\n  }, lazy && (/*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${splitBarPrefixCls}-preview`, {\n      [`${splitBarPrefixCls}-preview-active`]: !!constrainedOffset\n    }),\n    style: transformStyle\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${splitBarPrefixCls}-dragger`, {\n      [`${splitBarPrefixCls}-dragger-disabled`]: !resizable,\n      [`${splitBarPrefixCls}-dragger-active`]: active\n    }),\n    onMouseDown: onMouseDown,\n    onTouchStart: onTouchStart\n  }), startCollapsible && (/*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${splitBarPrefixCls}-collapse-bar`, `${splitBarPrefixCls}-collapse-bar-start`),\n    onClick: () => onCollapse(index, 'start')\n  }, /*#__PURE__*/React.createElement(StartIcon, {\n    className: classNames(`${splitBarPrefixCls}-collapse-icon`, `${splitBarPrefixCls}-collapse-start`)\n  }))), endCollapsible && (/*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${splitBarPrefixCls}-collapse-bar`, `${splitBarPrefixCls}-collapse-bar-end`),\n    onClick: () => onCollapse(index, 'end')\n  }, /*#__PURE__*/React.createElement(EndIcon, {\n    className: classNames(`${splitBarPrefixCls}-collapse-icon`, `${splitBarPrefixCls}-collapse-end`)\n  }))));\n};\nexport default SplitBar;"]},"metadata":{},"sourceType":"module"}