{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { mergeToken } from '../../theme/internal';\n\nfunction genSizeStyle(token, suffix) {\n  const {\n    componentCls,\n    inputPaddingHorizontalBase,\n    borderRadius\n  } = token;\n  const selectHeightWithoutBorder = token.calc(token.controlHeight).sub(token.calc(token.lineWidth).mul(2)).equal();\n  const suffixCls = suffix ? `${componentCls}-${suffix}` : '';\n  return {\n    [`${componentCls}-single${suffixCls}`]: {\n      fontSize: token.fontSize,\n      height: token.controlHeight,\n      // ========================= Selector =========================\n      [`${componentCls}-selector`]: Object.assign(Object.assign({}, resetComponent(token, true)), {\n        display: 'flex',\n        borderRadius,\n        flex: '1 1 auto',\n        [`${componentCls}-selection-wrap:after`]: {\n          lineHeight: unit(selectHeightWithoutBorder)\n        },\n        [`${componentCls}-selection-search`]: {\n          position: 'absolute',\n          inset: 0,\n          width: '100%',\n          '&-input': {\n            width: '100%',\n            WebkitAppearance: 'textfield'\n          }\n        },\n        [`\n          ${componentCls}-selection-item,\n          ${componentCls}-selection-placeholder\n        `]: {\n          display: 'block',\n          padding: 0,\n          lineHeight: unit(selectHeightWithoutBorder),\n          transition: `all ${token.motionDurationSlow}, visibility 0s`,\n          alignSelf: 'center'\n        },\n        [`${componentCls}-selection-placeholder`]: {\n          transition: 'none',\n          pointerEvents: 'none'\n        },\n        // For common baseline align\n        [['&:after',\n        /* For '' value baseline align */\n        `${componentCls}-selection-item:empty:after`,\n        /* For undefined value baseline align */\n        `${componentCls}-selection-placeholder:empty:after`].join(',')]: {\n          display: 'inline-block',\n          width: 0,\n          visibility: 'hidden',\n          content: '\"\\\\a0\"'\n        }\n      }),\n      [`\n        &${componentCls}-show-arrow ${componentCls}-selection-item,\n        &${componentCls}-show-arrow ${componentCls}-selection-search,\n        &${componentCls}-show-arrow ${componentCls}-selection-placeholder\n      `]: {\n        paddingInlineEnd: token.showArrowPaddingInlineEnd\n      },\n      // Opacity selection if open\n      [`&${componentCls}-open ${componentCls}-selection-item`]: {\n        color: token.colorTextPlaceholder\n      },\n      // ========================== Input ==========================\n      // We only change the style of non-customize input which is only support by `combobox` mode.\n      // Not customize\n      [`&:not(${componentCls}-customize-input)`]: {\n        [`${componentCls}-selector`]: {\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          padding: `0 ${unit(inputPaddingHorizontalBase)}`,\n          [`${componentCls}-selection-search-input`]: {\n            height: selectHeightWithoutBorder,\n            fontSize: token.fontSize\n          },\n          '&:after': {\n            lineHeight: unit(selectHeightWithoutBorder)\n          }\n        }\n      },\n      [`&${componentCls}-customize-input`]: {\n        [`${componentCls}-selector`]: {\n          '&:after': {\n            display: 'none'\n          },\n          [`${componentCls}-selection-search`]: {\n            position: 'static',\n            width: '100%'\n          },\n          [`${componentCls}-selection-placeholder`]: {\n            position: 'absolute',\n            insetInlineStart: 0,\n            insetInlineEnd: 0,\n            padding: `0 ${unit(inputPaddingHorizontalBase)}`,\n            '&:after': {\n              display: 'none'\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nexport default function genSingleStyle(token) {\n  const {\n    componentCls\n  } = token;\n  const inputPaddingHorizontalSM = token.calc(token.controlPaddingHorizontalSM).sub(token.lineWidth).equal();\n  return [genSizeStyle(token), // ======================== Small ========================\n  // Shared\n  genSizeStyle(mergeToken(token, {\n    controlHeight: token.controlHeightSM,\n    borderRadius: token.borderRadiusSM\n  }), 'sm'), // padding\n  {\n    [`${componentCls}-single${componentCls}-sm`]: {\n      [`&:not(${componentCls}-customize-input)`]: {\n        [`${componentCls}-selector`]: {\n          padding: `0 ${unit(inputPaddingHorizontalSM)}`\n        },\n        // With arrow should provides `padding-right` to show the arrow\n        [`&${componentCls}-show-arrow ${componentCls}-selection-search`]: {\n          insetInlineEnd: token.calc(inputPaddingHorizontalSM).add(token.calc(token.fontSize).mul(1.5)).equal()\n        },\n        [`\n            &${componentCls}-show-arrow ${componentCls}-selection-item,\n            &${componentCls}-show-arrow ${componentCls}-selection-placeholder\n          `]: {\n          paddingInlineEnd: token.calc(token.fontSize).mul(1.5).equal()\n        }\n      }\n    }\n  }, // ======================== Large ========================\n  // Shared\n  genSizeStyle(mergeToken(token, {\n    controlHeight: token.singleItemHeightLG,\n    fontSize: token.fontSizeLG,\n    borderRadius: token.borderRadiusLG\n  }), 'lg')];\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/select/style/single.js"],"names":["unit","resetComponent","mergeToken","genSizeStyle","token","suffix","componentCls","inputPaddingHorizontalBase","borderRadius","selectHeightWithoutBorder","calc","controlHeight","sub","lineWidth","mul","equal","suffixCls","fontSize","height","Object","assign","display","flex","lineHeight","position","inset","width","WebkitAppearance","padding","transition","motionDurationSlow","alignSelf","pointerEvents","join","visibility","content","paddingInlineEnd","showArrowPaddingInlineEnd","color","colorTextPlaceholder","alignItems","insetInlineStart","insetInlineEnd","genSingleStyle","inputPaddingHorizontalSM","controlPaddingHorizontalSM","controlHeightSM","borderRadiusSM","add","singleItemHeightLG","fontSizeLG","borderRadiusLG"],"mappings":"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","sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { mergeToken } from '../../theme/internal';\nfunction genSizeStyle(token, suffix) {\n  const {\n    componentCls,\n    inputPaddingHorizontalBase,\n    borderRadius\n  } = token;\n  const selectHeightWithoutBorder = token.calc(token.controlHeight).sub(token.calc(token.lineWidth).mul(2)).equal();\n  const suffixCls = suffix ? `${componentCls}-${suffix}` : '';\n  return {\n    [`${componentCls}-single${suffixCls}`]: {\n      fontSize: token.fontSize,\n      height: token.controlHeight,\n      // ========================= Selector =========================\n      [`${componentCls}-selector`]: Object.assign(Object.assign({}, resetComponent(token, true)), {\n        display: 'flex',\n        borderRadius,\n        flex: '1 1 auto',\n        [`${componentCls}-selection-wrap:after`]: {\n          lineHeight: unit(selectHeightWithoutBorder)\n        },\n        [`${componentCls}-selection-search`]: {\n          position: 'absolute',\n          inset: 0,\n          width: '100%',\n          '&-input': {\n            width: '100%',\n            WebkitAppearance: 'textfield'\n          }\n        },\n        [`\n          ${componentCls}-selection-item,\n          ${componentCls}-selection-placeholder\n        `]: {\n          display: 'block',\n          padding: 0,\n          lineHeight: unit(selectHeightWithoutBorder),\n          transition: `all ${token.motionDurationSlow}, visibility 0s`,\n          alignSelf: 'center'\n        },\n        [`${componentCls}-selection-placeholder`]: {\n          transition: 'none',\n          pointerEvents: 'none'\n        },\n        // For common baseline align\n        [['&:after', /* For '' value baseline align */\n        `${componentCls}-selection-item:empty:after`, /* For undefined value baseline align */\n        `${componentCls}-selection-placeholder:empty:after`].join(',')]: {\n          display: 'inline-block',\n          width: 0,\n          visibility: 'hidden',\n          content: '\"\\\\a0\"'\n        }\n      }),\n      [`\n        &${componentCls}-show-arrow ${componentCls}-selection-item,\n        &${componentCls}-show-arrow ${componentCls}-selection-search,\n        &${componentCls}-show-arrow ${componentCls}-selection-placeholder\n      `]: {\n        paddingInlineEnd: token.showArrowPaddingInlineEnd\n      },\n      // Opacity selection if open\n      [`&${componentCls}-open ${componentCls}-selection-item`]: {\n        color: token.colorTextPlaceholder\n      },\n      // ========================== Input ==========================\n      // We only change the style of non-customize input which is only support by `combobox` mode.\n      // Not customize\n      [`&:not(${componentCls}-customize-input)`]: {\n        [`${componentCls}-selector`]: {\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          padding: `0 ${unit(inputPaddingHorizontalBase)}`,\n          [`${componentCls}-selection-search-input`]: {\n            height: selectHeightWithoutBorder,\n            fontSize: token.fontSize\n          },\n          '&:after': {\n            lineHeight: unit(selectHeightWithoutBorder)\n          }\n        }\n      },\n      [`&${componentCls}-customize-input`]: {\n        [`${componentCls}-selector`]: {\n          '&:after': {\n            display: 'none'\n          },\n          [`${componentCls}-selection-search`]: {\n            position: 'static',\n            width: '100%'\n          },\n          [`${componentCls}-selection-placeholder`]: {\n            position: 'absolute',\n            insetInlineStart: 0,\n            insetInlineEnd: 0,\n            padding: `0 ${unit(inputPaddingHorizontalBase)}`,\n            '&:after': {\n              display: 'none'\n            }\n          }\n        }\n      }\n    }\n  };\n}\nexport default function genSingleStyle(token) {\n  const {\n    componentCls\n  } = token;\n  const inputPaddingHorizontalSM = token.calc(token.controlPaddingHorizontalSM).sub(token.lineWidth).equal();\n  return [genSizeStyle(token),\n  // ======================== Small ========================\n  // Shared\n  genSizeStyle(mergeToken(token, {\n    controlHeight: token.controlHeightSM,\n    borderRadius: token.borderRadiusSM\n  }), 'sm'),\n  // padding\n  {\n    [`${componentCls}-single${componentCls}-sm`]: {\n      [`&:not(${componentCls}-customize-input)`]: {\n        [`${componentCls}-selector`]: {\n          padding: `0 ${unit(inputPaddingHorizontalSM)}`\n        },\n        // With arrow should provides `padding-right` to show the arrow\n        [`&${componentCls}-show-arrow ${componentCls}-selection-search`]: {\n          insetInlineEnd: token.calc(inputPaddingHorizontalSM).add(token.calc(token.fontSize).mul(1.5)).equal()\n        },\n        [`\n            &${componentCls}-show-arrow ${componentCls}-selection-item,\n            &${componentCls}-show-arrow ${componentCls}-selection-placeholder\n          `]: {\n          paddingInlineEnd: token.calc(token.fontSize).mul(1.5).equal()\n        }\n      }\n    }\n  },\n  // ======================== Large ========================\n  // Shared\n  genSizeStyle(mergeToken(token, {\n    controlHeight: token.singleItemHeightLG,\n    fontSize: token.fontSizeLG,\n    borderRadius: token.borderRadiusLG\n  }), 'lg')];\n}"]},"metadata":{},"sourceType":"module"}