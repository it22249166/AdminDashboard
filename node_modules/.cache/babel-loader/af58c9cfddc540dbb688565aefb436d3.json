{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { getSize } from './utils';\n\nconst Steps = props => {\n  const {\n    size,\n    steps,\n    rounding: customRounding = Math.round,\n    percent = 0,\n    strokeWidth = 8,\n    strokeColor,\n    trailColor = null,\n    prefixCls,\n    children\n  } = props;\n  const current = customRounding(steps * (percent / 100));\n  const stepWidth = size === 'small' ? 2 : 14;\n  const mergedSize = size !== null && size !== void 0 ? size : [stepWidth, strokeWidth];\n  const [width, height] = getSize(mergedSize, 'step', {\n    steps,\n    strokeWidth\n  });\n  const unitWidth = width / steps;\n  const styledSteps = Array.from({\n    length: steps\n  });\n\n  for (let i = 0; i < steps; i++) {\n    const color = Array.isArray(strokeColor) ? strokeColor[i] : strokeColor;\n    styledSteps[i] = /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: classNames(`${prefixCls}-steps-item`, {\n        [`${prefixCls}-steps-item-active`]: i <= current - 1\n      }),\n      style: {\n        backgroundColor: i <= current - 1 ? color : trailColor,\n        width: unitWidth,\n        height\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-steps-outer`\n  }, styledSteps, children);\n};\n\nexport default Steps;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/progress/Steps.js"],"names":["React","classNames","getSize","Steps","props","size","steps","rounding","customRounding","Math","round","percent","strokeWidth","strokeColor","trailColor","prefixCls","children","current","stepWidth","mergedSize","width","height","unitWidth","styledSteps","Array","from","length","i","color","isArray","createElement","key","className","style","backgroundColor"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,SAAxB;;AACA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,QAAQ,EAAEC,cAAc,GAAGC,IAAI,CAACC,KAH5B;AAIJC,IAAAA,OAAO,GAAG,CAJN;AAKJC,IAAAA,WAAW,GAAG,CALV;AAMJC,IAAAA,WANI;AAOJC,IAAAA,UAAU,GAAG,IAPT;AAQJC,IAAAA,SARI;AASJC,IAAAA;AATI,MAUFZ,KAVJ;AAWA,QAAMa,OAAO,GAAGT,cAAc,CAACF,KAAK,IAAIK,OAAO,GAAG,GAAd,CAAN,CAA9B;AACA,QAAMO,SAAS,GAAGb,IAAI,KAAK,OAAT,GAAmB,CAAnB,GAAuB,EAAzC;AACA,QAAMc,UAAU,GAAGd,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmCA,IAAnC,GAA0C,CAACa,SAAD,EAAYN,WAAZ,CAA7D;AACA,QAAM,CAACQ,KAAD,EAAQC,MAAR,IAAkBnB,OAAO,CAACiB,UAAD,EAAa,MAAb,EAAqB;AAClDb,IAAAA,KADkD;AAElDM,IAAAA;AAFkD,GAArB,CAA/B;AAIA,QAAMU,SAAS,GAAGF,KAAK,GAAGd,KAA1B;AACA,QAAMiB,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAW;AAC7BC,IAAAA,MAAM,EAAEpB;AADqB,GAAX,CAApB;;AAGA,OAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,KAApB,EAA2BqB,CAAC,EAA5B,EAAgC;AAC9B,UAAMC,KAAK,GAAGJ,KAAK,CAACK,OAAN,CAAchB,WAAd,IAA6BA,WAAW,CAACc,CAAD,CAAxC,GAA8Cd,WAA5D;AACAU,IAAAA,WAAW,CAACI,CAAD,CAAX,GAAiB,aAAa3B,KAAK,CAAC8B,aAAN,CAAoB,KAApB,EAA2B;AACvDC,MAAAA,GAAG,EAAEJ,CADkD;AAEvDK,MAAAA,SAAS,EAAE/B,UAAU,CAAE,GAAEc,SAAU,aAAd,EAA4B;AAC/C,SAAE,GAAEA,SAAU,oBAAd,GAAoCY,CAAC,IAAIV,OAAO,GAAG;AADJ,OAA5B,CAFkC;AAKvDgB,MAAAA,KAAK,EAAE;AACLC,QAAAA,eAAe,EAAEP,CAAC,IAAIV,OAAO,GAAG,CAAf,GAAmBW,KAAnB,GAA2Bd,UADvC;AAELM,QAAAA,KAAK,EAAEE,SAFF;AAGLD,QAAAA;AAHK;AALgD,KAA3B,CAA9B;AAWD;;AACD,SAAO,aAAarB,KAAK,CAAC8B,aAAN,CAAoB,KAApB,EAA2B;AAC7CE,IAAAA,SAAS,EAAG,GAAEjB,SAAU;AADqB,GAA3B,EAEjBQ,WAFiB,EAEJP,QAFI,CAApB;AAGD,CAxCD;;AAyCA,eAAeb,KAAf","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { getSize } from './utils';\nconst Steps = props => {\n  const {\n    size,\n    steps,\n    rounding: customRounding = Math.round,\n    percent = 0,\n    strokeWidth = 8,\n    strokeColor,\n    trailColor = null,\n    prefixCls,\n    children\n  } = props;\n  const current = customRounding(steps * (percent / 100));\n  const stepWidth = size === 'small' ? 2 : 14;\n  const mergedSize = size !== null && size !== void 0 ? size : [stepWidth, strokeWidth];\n  const [width, height] = getSize(mergedSize, 'step', {\n    steps,\n    strokeWidth\n  });\n  const unitWidth = width / steps;\n  const styledSteps = Array.from({\n    length: steps\n  });\n  for (let i = 0; i < steps; i++) {\n    const color = Array.isArray(strokeColor) ? strokeColor[i] : strokeColor;\n    styledSteps[i] = /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: classNames(`${prefixCls}-steps-item`, {\n        [`${prefixCls}-steps-item-active`]: i <= current - 1\n      }),\n      style: {\n        backgroundColor: i <= current - 1 ? color : trailColor,\n        width: unitWidth,\n        height\n      }\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-steps-outer`\n  }, styledSteps, children);\n};\nexport default Steps;"]},"metadata":{},"sourceType":"module"}