{"ast":null,"code":"\"use client\";\n\nimport React, { useEffect, useState } from 'react';\nimport Input from '../../input/Input';\nimport { toHexFormat } from '../color';\nimport { generateColor } from '../util';\nconst hexReg = /(^#[\\da-f]{6}$)|(^#[\\da-f]{8}$)/i;\n\nconst isHexString = hex => hexReg.test(`#${hex}`);\n\nconst ColorHexInput = _ref => {\n  let {\n    prefixCls,\n    value,\n    onChange\n  } = _ref;\n  const colorHexInputPrefixCls = `${prefixCls}-hex-input`;\n  const [hexValue, setHexValue] = useState(() => value ? toHexFormat(value.toHexString()) : undefined); // Update step value\n\n  useEffect(() => {\n    if (value) {\n      setHexValue(toHexFormat(value.toHexString()));\n    }\n  }, [value]);\n\n  const handleHexChange = e => {\n    const originValue = e.target.value;\n    setHexValue(toHexFormat(originValue));\n\n    if (isHexString(toHexFormat(originValue, true))) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(generateColor(originValue));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Input, {\n    className: colorHexInputPrefixCls,\n    value: hexValue,\n    prefix: \"#\",\n    onChange: handleHexChange,\n    size: \"small\"\n  });\n};\n\nexport default ColorHexInput;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/color-picker/components/ColorHexInput.js"],"names":["React","useEffect","useState","Input","toHexFormat","generateColor","hexReg","isHexString","hex","test","ColorHexInput","_ref","prefixCls","value","onChange","colorHexInputPrefixCls","hexValue","setHexValue","toHexString","undefined","handleHexChange","e","originValue","target","createElement","className","prefix","size"],"mappings":"AAAA;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,MAAMC,MAAM,GAAG,kCAAf;;AACA,MAAMC,WAAW,GAAGC,GAAG,IAAIF,MAAM,CAACG,IAAP,CAAa,IAAGD,GAAI,EAApB,CAA3B;;AACA,MAAME,aAAa,GAAGC,IAAI,IAAI;AAC5B,MAAI;AACFC,IAAAA,SADE;AAEFC,IAAAA,KAFE;AAGFC,IAAAA;AAHE,MAIAH,IAJJ;AAKA,QAAMI,sBAAsB,GAAI,GAAEH,SAAU,YAA5C;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,MAAMW,KAAK,GAAGT,WAAW,CAACS,KAAK,CAACK,WAAN,EAAD,CAAd,GAAsCC,SAAlD,CAAxC,CAP4B,CAQ5B;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,KAAJ,EAAW;AACTI,MAAAA,WAAW,CAACb,WAAW,CAACS,KAAK,CAACK,WAAN,EAAD,CAAZ,CAAX;AACD;AACF,GAJQ,EAIN,CAACL,KAAD,CAJM,CAAT;;AAKA,QAAMO,eAAe,GAAGC,CAAC,IAAI;AAC3B,UAAMC,WAAW,GAAGD,CAAC,CAACE,MAAF,CAASV,KAA7B;AACAI,IAAAA,WAAW,CAACb,WAAW,CAACkB,WAAD,CAAZ,CAAX;;AACA,QAAIf,WAAW,CAACH,WAAW,CAACkB,WAAD,EAAc,IAAd,CAAZ,CAAf,EAAiD;AAC/CR,MAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACT,aAAa,CAACiB,WAAD,CAAd,CAA5D;AACD;AACF,GAND;;AAOA,SAAO,aAAatB,KAAK,CAACwB,aAAN,CAAoBrB,KAApB,EAA2B;AAC7CsB,IAAAA,SAAS,EAAEV,sBADkC;AAE7CF,IAAAA,KAAK,EAAEG,QAFsC;AAG7CU,IAAAA,MAAM,EAAE,GAHqC;AAI7CZ,IAAAA,QAAQ,EAAEM,eAJmC;AAK7CO,IAAAA,IAAI,EAAE;AALuC,GAA3B,CAApB;AAOD,CA5BD;;AA6BA,eAAejB,aAAf","sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState } from 'react';\nimport Input from '../../input/Input';\nimport { toHexFormat } from '../color';\nimport { generateColor } from '../util';\nconst hexReg = /(^#[\\da-f]{6}$)|(^#[\\da-f]{8}$)/i;\nconst isHexString = hex => hexReg.test(`#${hex}`);\nconst ColorHexInput = _ref => {\n  let {\n    prefixCls,\n    value,\n    onChange\n  } = _ref;\n  const colorHexInputPrefixCls = `${prefixCls}-hex-input`;\n  const [hexValue, setHexValue] = useState(() => value ? toHexFormat(value.toHexString()) : undefined);\n  // Update step value\n  useEffect(() => {\n    if (value) {\n      setHexValue(toHexFormat(value.toHexString()));\n    }\n  }, [value]);\n  const handleHexChange = e => {\n    const originValue = e.target.value;\n    setHexValue(toHexFormat(originValue));\n    if (isHexString(toHexFormat(originValue, true))) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(generateColor(originValue));\n    }\n  };\n  return /*#__PURE__*/React.createElement(Input, {\n    className: colorHexInputPrefixCls,\n    value: hexValue,\n    prefix: \"#\",\n    onChange: handleHexChange,\n    size: \"small\"\n  });\n};\nexport default ColorHexInput;"]},"metadata":{},"sourceType":"module"}