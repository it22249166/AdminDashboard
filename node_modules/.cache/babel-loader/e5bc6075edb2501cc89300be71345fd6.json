{"ast":null,"code":"import * as React from 'react';\nimport { generate, getSecondaryColor, isIconDefinition, warning, useInsertStyles } from \"../utils\";\nconst twoToneColorPalette = {\n  primaryColor: '#333',\n  secondaryColor: '#E6E6E6',\n  calculated: false\n};\n\nfunction setTwoToneColors({\n  primaryColor,\n  secondaryColor\n}) {\n  twoToneColorPalette.primaryColor = primaryColor;\n  twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  twoToneColorPalette.calculated = !!secondaryColor;\n}\n\nfunction getTwoToneColors() {\n  return { ...twoToneColorPalette\n  };\n}\n\nconst IconBase = props => {\n  const {\n    icon,\n    className,\n    onClick,\n    style,\n    primaryColor,\n    secondaryColor,\n    ...restProps\n  } = props;\n  const svgRef = React.useRef();\n  let colors = twoToneColorPalette;\n\n  if (primaryColor) {\n    colors = {\n      primaryColor,\n      secondaryColor: secondaryColor || getSecondaryColor(primaryColor)\n    };\n  }\n\n  useInsertStyles(svgRef);\n  warning(isIconDefinition(icon), `icon should be icon definiton, but got ${icon}`);\n\n  if (!isIconDefinition(icon)) {\n    return null;\n  }\n\n  let target = icon;\n\n  if (target && typeof target.icon === 'function') {\n    target = { ...target,\n      icon: target.icon(colors.primaryColor, colors.secondaryColor)\n    };\n  }\n\n  return generate(target.icon, `svg-${target.name}`, {\n    className,\n    onClick,\n    style,\n    'data-icon': target.name,\n    width: '1em',\n    height: '1em',\n    fill: 'currentColor',\n    'aria-hidden': 'true',\n    ...restProps,\n    ref: svgRef\n  });\n};\n\nIconBase.displayName = 'IconReact';\nIconBase.getTwoToneColors = getTwoToneColors;\nIconBase.setTwoToneColors = setTwoToneColors;\nexport default IconBase;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@ant-design/icons/es/components/IconBase.js"],"names":["React","generate","getSecondaryColor","isIconDefinition","warning","useInsertStyles","twoToneColorPalette","primaryColor","secondaryColor","calculated","setTwoToneColors","getTwoToneColors","IconBase","props","icon","className","onClick","style","restProps","svgRef","useRef","colors","target","name","width","height","fill","ref","displayName"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,iBAAnB,EAAsCC,gBAAtC,EAAwDC,OAAxD,EAAiEC,eAAjE,QAAwF,UAAxF;AACA,MAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,YAAY,EAAE,MADY;AAE1BC,EAAAA,cAAc,EAAE,SAFU;AAG1BC,EAAAA,UAAU,EAAE;AAHc,CAA5B;;AAKA,SAASC,gBAAT,CAA0B;AACxBH,EAAAA,YADwB;AAExBC,EAAAA;AAFwB,CAA1B,EAGG;AACDF,EAAAA,mBAAmB,CAACC,YAApB,GAAmCA,YAAnC;AACAD,EAAAA,mBAAmB,CAACE,cAApB,GAAqCA,cAAc,IAAIN,iBAAiB,CAACK,YAAD,CAAxE;AACAD,EAAAA,mBAAmB,CAACG,UAApB,GAAiC,CAAC,CAACD,cAAnC;AACD;;AACD,SAASG,gBAAT,GAA4B;AAC1B,SAAO,EACL,GAAGL;AADE,GAAP;AAGD;;AACD,MAAMM,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,KAJI;AAKJV,IAAAA,YALI;AAMJC,IAAAA,cANI;AAOJ,OAAGU;AAPC,MAQFL,KARJ;AASA,QAAMM,MAAM,GAAGnB,KAAK,CAACoB,MAAN,EAAf;AACA,MAAIC,MAAM,GAAGf,mBAAb;;AACA,MAAIC,YAAJ,EAAkB;AAChBc,IAAAA,MAAM,GAAG;AACPd,MAAAA,YADO;AAEPC,MAAAA,cAAc,EAAEA,cAAc,IAAIN,iBAAiB,CAACK,YAAD;AAF5C,KAAT;AAID;;AACDF,EAAAA,eAAe,CAACc,MAAD,CAAf;AACAf,EAAAA,OAAO,CAACD,gBAAgB,CAACW,IAAD,CAAjB,EAA0B,0CAAyCA,IAAK,EAAxE,CAAP;;AACA,MAAI,CAACX,gBAAgB,CAACW,IAAD,CAArB,EAA6B;AAC3B,WAAO,IAAP;AACD;;AACD,MAAIQ,MAAM,GAAGR,IAAb;;AACA,MAAIQ,MAAM,IAAI,OAAOA,MAAM,CAACR,IAAd,KAAuB,UAArC,EAAiD;AAC/CQ,IAAAA,MAAM,GAAG,EACP,GAAGA,MADI;AAEPR,MAAAA,IAAI,EAAEQ,MAAM,CAACR,IAAP,CAAYO,MAAM,CAACd,YAAnB,EAAiCc,MAAM,CAACb,cAAxC;AAFC,KAAT;AAID;;AACD,SAAOP,QAAQ,CAACqB,MAAM,CAACR,IAAR,EAAe,OAAMQ,MAAM,CAACC,IAAK,EAAjC,EAAoC;AACjDR,IAAAA,SADiD;AAEjDC,IAAAA,OAFiD;AAGjDC,IAAAA,KAHiD;AAIjD,iBAAaK,MAAM,CAACC,IAJ6B;AAKjDC,IAAAA,KAAK,EAAE,KAL0C;AAMjDC,IAAAA,MAAM,EAAE,KANyC;AAOjDC,IAAAA,IAAI,EAAE,cAP2C;AAQjD,mBAAe,MARkC;AASjD,OAAGR,SAT8C;AAUjDS,IAAAA,GAAG,EAAER;AAV4C,GAApC,CAAf;AAYD,CA1CD;;AA2CAP,QAAQ,CAACgB,WAAT,GAAuB,WAAvB;AACAhB,QAAQ,CAACD,gBAAT,GAA4BA,gBAA5B;AACAC,QAAQ,CAACF,gBAAT,GAA4BA,gBAA5B;AACA,eAAeE,QAAf","sourcesContent":["import * as React from 'react';\nimport { generate, getSecondaryColor, isIconDefinition, warning, useInsertStyles } from \"../utils\";\nconst twoToneColorPalette = {\n  primaryColor: '#333',\n  secondaryColor: '#E6E6E6',\n  calculated: false\n};\nfunction setTwoToneColors({\n  primaryColor,\n  secondaryColor\n}) {\n  twoToneColorPalette.primaryColor = primaryColor;\n  twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  twoToneColorPalette.calculated = !!secondaryColor;\n}\nfunction getTwoToneColors() {\n  return {\n    ...twoToneColorPalette\n  };\n}\nconst IconBase = props => {\n  const {\n    icon,\n    className,\n    onClick,\n    style,\n    primaryColor,\n    secondaryColor,\n    ...restProps\n  } = props;\n  const svgRef = React.useRef();\n  let colors = twoToneColorPalette;\n  if (primaryColor) {\n    colors = {\n      primaryColor,\n      secondaryColor: secondaryColor || getSecondaryColor(primaryColor)\n    };\n  }\n  useInsertStyles(svgRef);\n  warning(isIconDefinition(icon), `icon should be icon definiton, but got ${icon}`);\n  if (!isIconDefinition(icon)) {\n    return null;\n  }\n  let target = icon;\n  if (target && typeof target.icon === 'function') {\n    target = {\n      ...target,\n      icon: target.icon(colors.primaryColor, colors.secondaryColor)\n    };\n  }\n  return generate(target.icon, `svg-${target.name}`, {\n    className,\n    onClick,\n    style,\n    'data-icon': target.name,\n    width: '1em',\n    height: '1em',\n    fill: 'currentColor',\n    'aria-hidden': 'true',\n    ...restProps,\n    ref: svgRef\n  });\n};\nIconBase.displayName = 'IconReact';\nIconBase.getTwoToneColors = getTwoToneColors;\nIconBase.setTwoToneColors = setTwoToneColors;\nexport default IconBase;"]},"metadata":{},"sourceType":"module"}