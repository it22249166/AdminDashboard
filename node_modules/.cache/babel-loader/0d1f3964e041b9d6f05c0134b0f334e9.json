{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"eventKey\", \"className\", \"style\", \"dragOver\", \"dragOverGapTop\", \"dragOverGapBottom\", \"isLeaf\", \"isStart\", \"isEnd\", \"expanded\", \"selected\", \"checked\", \"halfChecked\", \"loading\", \"domRef\", \"active\", \"data\", \"onMouseMove\", \"selectable\"];\nimport React from 'react';\nimport classNames from 'classnames';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { TreeContext, UnstableContext } from \"./contextTypes\";\nimport Indent from \"./Indent\";\nimport getEntity from \"./utils/keyUtil\";\nimport { convertNodePropsToEventData } from \"./utils/treeUtil\";\nvar ICON_OPEN = 'open';\nvar ICON_CLOSE = 'close';\nvar defaultTitle = '---';\n\nvar TreeNode = function TreeNode(props) {\n  var _unstableContext$node, _context$filterTreeNo, _classNames4;\n\n  var eventKey = props.eventKey,\n      className = props.className,\n      style = props.style,\n      dragOver = props.dragOver,\n      dragOverGapTop = props.dragOverGapTop,\n      dragOverGapBottom = props.dragOverGapBottom,\n      isLeaf = props.isLeaf,\n      isStart = props.isStart,\n      isEnd = props.isEnd,\n      expanded = props.expanded,\n      selected = props.selected,\n      checked = props.checked,\n      halfChecked = props.halfChecked,\n      loading = props.loading,\n      domRef = props.domRef,\n      active = props.active,\n      data = props.data,\n      onMouseMove = props.onMouseMove,\n      selectable = props.selectable,\n      otherProps = _objectWithoutProperties(props, _excluded);\n\n  var context = React.useContext(TreeContext);\n  var unstableContext = React.useContext(UnstableContext);\n  var selectHandleRef = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dragNodeHighlight = _React$useState2[0],\n      setDragNodeHighlight = _React$useState2[1]; // ======= State: Disabled State =======\n\n\n  var isDisabled = !!(context.disabled || props.disabled || (_unstableContext$node = unstableContext.nodeDisabled) !== null && _unstableContext$node !== void 0 && _unstableContext$node.call(unstableContext, data));\n  var isCheckable = React.useMemo(function () {\n    // Return false if tree or treeNode is not checkable\n    if (!context.checkable || props.checkable === false) {\n      return false;\n    }\n\n    return context.checkable;\n  }, [context.checkable, props.checkable]); // ======= Event Handlers: Selection and Check =======\n\n  var onSelect = function onSelect(e) {\n    if (isDisabled) {\n      return;\n    }\n\n    context.onNodeSelect(e, convertNodePropsToEventData(props));\n  };\n\n  var onCheck = function onCheck(e) {\n    if (isDisabled) {\n      return;\n    }\n\n    if (!isCheckable || props.disableCheckbox) {\n      return;\n    }\n\n    context.onNodeCheck(e, convertNodePropsToEventData(props), !checked);\n  }; // ======= State: Selectable Check =======\n\n\n  var isSelectable = React.useMemo(function () {\n    // Ignore when selectable is undefined or null\n    if (typeof selectable === 'boolean') {\n      return selectable;\n    }\n\n    return context.selectable;\n  }, [selectable, context.selectable]);\n\n  var onSelectorClick = function onSelectorClick(e) {\n    // Click trigger before select/check operation\n    context.onNodeClick(e, convertNodePropsToEventData(props));\n\n    if (isSelectable) {\n      onSelect(e);\n    } else {\n      onCheck(e);\n    }\n  };\n\n  var onSelectorDoubleClick = function onSelectorDoubleClick(e) {\n    context.onNodeDoubleClick(e, convertNodePropsToEventData(props));\n  };\n\n  var onMouseEnter = function onMouseEnter(e) {\n    context.onNodeMouseEnter(e, convertNodePropsToEventData(props));\n  };\n\n  var onMouseLeave = function onMouseLeave(e) {\n    context.onNodeMouseLeave(e, convertNodePropsToEventData(props));\n  };\n\n  var onContextMenu = function onContextMenu(e) {\n    context.onNodeContextMenu(e, convertNodePropsToEventData(props));\n  }; // ======= Drag: Drag Enabled =======\n\n\n  var isDraggable = React.useMemo(function () {\n    return !!(context.draggable && (!context.draggable.nodeDraggable || context.draggable.nodeDraggable(data)));\n  }, [context.draggable, data]); // ======= Drag: Drag Event Handlers =======\n\n  var onDragStart = function onDragStart(e) {\n    e.stopPropagation();\n    setDragNodeHighlight(true);\n    context.onNodeDragStart(e, props);\n\n    try {\n      // ie throw error\n      // firefox-need-it\n      e.dataTransfer.setData('text/plain', '');\n    } catch (_unused) {// empty\n    }\n  };\n\n  var onDragEnter = function onDragEnter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    context.onNodeDragEnter(e, props);\n  };\n\n  var onDragOver = function onDragOver(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    context.onNodeDragOver(e, props);\n  };\n\n  var onDragLeave = function onDragLeave(e) {\n    e.stopPropagation();\n    context.onNodeDragLeave(e, props);\n  };\n\n  var onDragEnd = function onDragEnd(e) {\n    e.stopPropagation();\n    setDragNodeHighlight(false);\n    context.onNodeDragEnd(e, props);\n  };\n\n  var onDrop = function onDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragNodeHighlight(false);\n    context.onNodeDrop(e, props);\n  }; // ======= Expand: Node Expansion =======\n\n\n  var onExpand = function onExpand(e) {\n    if (loading) {\n      return;\n    }\n\n    context.onNodeExpand(e, convertNodePropsToEventData(props));\n  }; // ======= State: Has Children =======\n\n\n  var hasChildren = React.useMemo(function () {\n    var _ref = getEntity(context.keyEntities, eventKey) || {},\n        children = _ref.children;\n\n    return Boolean((children || []).length);\n  }, [context.keyEntities, eventKey]); // ======= State: Leaf Check =======\n\n  var memoizedIsLeaf = React.useMemo(function () {\n    if (isLeaf === false) {\n      return false;\n    }\n\n    return isLeaf || !context.loadData && !hasChildren || context.loadData && props.loaded && !hasChildren;\n  }, [isLeaf, context.loadData, hasChildren, props.loaded]); // ============== Effect ==============\n\n  React.useEffect(function () {\n    // Load data to avoid default expanded tree without data\n    if (loading) {\n      return;\n    } // read from state to avoid loadData at same time\n\n\n    if (typeof context.loadData === 'function' && expanded && !memoizedIsLeaf && !props.loaded) {\n      // We needn't reload data when has children in sync logic\n      // It's only needed in node expanded\n      context.onNodeLoad(convertNodePropsToEventData(props));\n    }\n  }, [loading, context.loadData, context.onNodeLoad, expanded, memoizedIsLeaf, props]); // ==================== Render: Drag Handler ====================\n\n  var dragHandlerNode = React.useMemo(function () {\n    var _context$draggable;\n\n    if (!((_context$draggable = context.draggable) !== null && _context$draggable !== void 0 && _context$draggable.icon)) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(context.prefixCls, \"-draggable-icon\")\n    }, context.draggable.icon);\n  }, [context.draggable]); // ====================== Render: Switcher ======================\n\n  var renderSwitcherIconDom = function renderSwitcherIconDom(isInternalLeaf) {\n    var switcherIcon = props.switcherIcon || context.switcherIcon; // if switcherIconDom is null, no render switcher span\n\n    if (typeof switcherIcon === 'function') {\n      return switcherIcon(_objectSpread(_objectSpread({}, props), {}, {\n        isLeaf: isInternalLeaf\n      }));\n    }\n\n    return switcherIcon;\n  }; // Switcher\n\n\n  var renderSwitcher = function renderSwitcher() {\n    if (memoizedIsLeaf) {\n      // if switcherIconDom is null, no render switcher span\n      var _switcherIconDom = renderSwitcherIconDom(true);\n\n      return _switcherIconDom !== false ? /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(\"\".concat(context.prefixCls, \"-switcher\"), \"\".concat(context.prefixCls, \"-switcher-noop\"))\n      }, _switcherIconDom) : null;\n    }\n\n    var switcherIconDom = renderSwitcherIconDom(false);\n    return switcherIconDom !== false ? /*#__PURE__*/React.createElement(\"span\", {\n      onClick: onExpand,\n      className: classNames(\"\".concat(context.prefixCls, \"-switcher\"), \"\".concat(context.prefixCls, \"-switcher_\").concat(expanded ? ICON_OPEN : ICON_CLOSE))\n    }, switcherIconDom) : null;\n  }; // ====================== Checkbox ======================\n\n\n  var checkboxNode = React.useMemo(function () {\n    if (!isCheckable) {\n      return null;\n    } // [Legacy] Custom element should be separate with `checkable` in future\n\n\n    var $custom = typeof isCheckable !== 'boolean' ? isCheckable : null;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(context.prefixCls, \"-checkbox\"), _defineProperty(_defineProperty(_defineProperty({}, \"\".concat(context.prefixCls, \"-checkbox-checked\"), checked), \"\".concat(context.prefixCls, \"-checkbox-indeterminate\"), !checked && halfChecked), \"\".concat(context.prefixCls, \"-checkbox-disabled\"), isDisabled || props.disableCheckbox)),\n      onClick: onCheck,\n      role: \"checkbox\",\n      \"aria-checked\": halfChecked ? 'mixed' : checked,\n      \"aria-disabled\": isDisabled || props.disableCheckbox,\n      \"aria-label\": \"Select \".concat(typeof props.title === 'string' ? props.title : 'tree node')\n    }, $custom);\n  }, [isCheckable, checked, halfChecked, isDisabled, props.disableCheckbox, props.title]); // ============== State: Node State (Open/Close) ==============\n\n  var nodeState = React.useMemo(function () {\n    if (memoizedIsLeaf) {\n      return null;\n    }\n\n    return expanded ? ICON_OPEN : ICON_CLOSE;\n  }, [memoizedIsLeaf, expanded]); // ==================== Render: Title + Icon ====================\n\n  var iconNode = React.useMemo(function () {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(context.prefixCls, \"-iconEle\"), \"\".concat(context.prefixCls, \"-icon__\").concat(nodeState || 'docu'), _defineProperty({}, \"\".concat(context.prefixCls, \"-icon_loading\"), loading))\n    });\n  }, [context.prefixCls, nodeState, loading]); // =================== Drop Indicator ===================\n\n  var dropIndicatorNode = React.useMemo(function () {\n    var rootDraggable = Boolean(context.draggable); // allowDrop is calculated in Tree.tsx, there is no need for calc it here\n\n    var showIndicator = !props.disabled && rootDraggable && context.dragOverNodeKey === eventKey;\n\n    if (!showIndicator) {\n      return null;\n    }\n\n    return context.dropIndicatorRender({\n      dropPosition: context.dropPosition,\n      dropLevelOffset: context.dropLevelOffset,\n      indent: context.indent,\n      prefixCls: context.prefixCls,\n      direction: context.direction\n    });\n  }, [context.dropPosition, context.dropLevelOffset, context.indent, context.prefixCls, context.direction, context.draggable, context.dragOverNodeKey, context.dropIndicatorRender]); // Icon + Title\n\n  var selectorNode = React.useMemo(function () {\n    var _props$title = props.title,\n        title = _props$title === void 0 ? defaultTitle : _props$title;\n    var wrapClass = \"\".concat(context.prefixCls, \"-node-content-wrapper\"); // Icon - Still show loading icon when loading without showIcon\n\n    var $icon;\n\n    if (context.showIcon) {\n      var currentIcon = props.icon || context.icon;\n      $icon = currentIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(\"\".concat(context.prefixCls, \"-iconEle\"), \"\".concat(context.prefixCls, \"-icon__customize\"))\n      }, typeof currentIcon === 'function' ? currentIcon(props) : currentIcon) : iconNode;\n    } else if (context.loadData && loading) {\n      $icon = iconNode;\n    } // Title\n\n\n    var titleNode;\n\n    if (typeof title === 'function') {\n      titleNode = title(data);\n    } else if (context.titleRender) {\n      titleNode = context.titleRender(data);\n    } else {\n      titleNode = title;\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      ref: selectHandleRef,\n      title: typeof title === 'string' ? title : '',\n      className: classNames(wrapClass, \"\".concat(wrapClass, \"-\").concat(nodeState || 'normal'), _defineProperty({}, \"\".concat(context.prefixCls, \"-node-selected\"), !isDisabled && (selected || dragNodeHighlight))),\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onContextMenu: onContextMenu,\n      onClick: onSelectorClick,\n      onDoubleClick: onSelectorDoubleClick\n    }, $icon, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(context.prefixCls, \"-title\")\n    }, titleNode), dropIndicatorNode);\n  }, [context.prefixCls, context.showIcon, props, context.icon, iconNode, context.titleRender, data, nodeState, onMouseEnter, onMouseLeave, onContextMenu, onSelectorClick, onSelectorDoubleClick]);\n  var dataOrAriaAttributeProps = pickAttrs(otherProps, {\n    aria: true,\n    data: true\n  });\n\n  var _ref2 = getEntity(context.keyEntities, eventKey) || {},\n      level = _ref2.level;\n\n  var isEndNode = isEnd[isEnd.length - 1];\n  var draggableWithoutDisabled = !isDisabled && isDraggable;\n  var dragging = context.draggingNodeKey === eventKey;\n  var ariaSelected = selectable !== undefined ? {\n    'aria-selected': !!selectable\n  } : undefined;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: domRef,\n    role: \"treeitem\",\n    \"aria-expanded\": isLeaf ? undefined : expanded,\n    className: classNames(className, \"\".concat(context.prefixCls, \"-treenode\"), (_classNames4 = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_classNames4, \"\".concat(context.prefixCls, \"-treenode-disabled\"), isDisabled), \"\".concat(context.prefixCls, \"-treenode-switcher-\").concat(expanded ? 'open' : 'close'), !isLeaf), \"\".concat(context.prefixCls, \"-treenode-checkbox-checked\"), checked), \"\".concat(context.prefixCls, \"-treenode-checkbox-indeterminate\"), halfChecked), \"\".concat(context.prefixCls, \"-treenode-selected\"), selected), \"\".concat(context.prefixCls, \"-treenode-loading\"), loading), \"\".concat(context.prefixCls, \"-treenode-active\"), active), \"\".concat(context.prefixCls, \"-treenode-leaf-last\"), isEndNode), \"\".concat(context.prefixCls, \"-treenode-draggable\"), isDraggable), \"dragging\", dragging), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_classNames4, 'drop-target', context.dropTargetKey === eventKey), 'drop-container', context.dropContainerKey === eventKey), 'drag-over', !isDisabled && dragOver), 'drag-over-gap-top', !isDisabled && dragOverGapTop), 'drag-over-gap-bottom', !isDisabled && dragOverGapBottom), 'filter-node', (_context$filterTreeNo = context.filterTreeNode) === null || _context$filterTreeNo === void 0 ? void 0 : _context$filterTreeNo.call(context, convertNodePropsToEventData(props))), \"\".concat(context.prefixCls, \"-treenode-leaf\"), memoizedIsLeaf))),\n    style: style // Draggable config\n    ,\n    draggable: draggableWithoutDisabled,\n    onDragStart: draggableWithoutDisabled ? onDragStart : undefined // Drop config\n    ,\n    onDragEnter: isDraggable ? onDragEnter : undefined,\n    onDragOver: isDraggable ? onDragOver : undefined,\n    onDragLeave: isDraggable ? onDragLeave : undefined,\n    onDrop: isDraggable ? onDrop : undefined,\n    onDragEnd: isDraggable ? onDragEnd : undefined,\n    onMouseMove: onMouseMove\n  }, ariaSelected, dataOrAriaAttributeProps), /*#__PURE__*/React.createElement(Indent, {\n    prefixCls: context.prefixCls,\n    level: level,\n    isStart: isStart,\n    isEnd: isEnd\n  }), dragHandlerNode, renderSwitcher(), checkboxNode, selectorNode);\n};\n\nTreeNode.isTreeNode = 1;\n\nif (process.env.NODE_ENV !== 'production') {\n  TreeNode.displayName = 'TreeNode';\n}\n\nexport default TreeNode;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-tree/es/TreeNode.js"],"names":["_extends","_defineProperty","_objectSpread","_slicedToArray","_objectWithoutProperties","_excluded","React","classNames","pickAttrs","TreeContext","UnstableContext","Indent","getEntity","convertNodePropsToEventData","ICON_OPEN","ICON_CLOSE","defaultTitle","TreeNode","props","_unstableContext$node","_context$filterTreeNo","_classNames4","eventKey","className","style","dragOver","dragOverGapTop","dragOverGapBottom","isLeaf","isStart","isEnd","expanded","selected","checked","halfChecked","loading","domRef","active","data","onMouseMove","selectable","otherProps","context","useContext","unstableContext","selectHandleRef","useRef","_React$useState","useState","_React$useState2","dragNodeHighlight","setDragNodeHighlight","isDisabled","disabled","nodeDisabled","call","isCheckable","useMemo","checkable","onSelect","e","onNodeSelect","onCheck","disableCheckbox","onNodeCheck","isSelectable","onSelectorClick","onNodeClick","onSelectorDoubleClick","onNodeDoubleClick","onMouseEnter","onNodeMouseEnter","onMouseLeave","onNodeMouseLeave","onContextMenu","onNodeContextMenu","isDraggable","draggable","nodeDraggable","onDragStart","stopPropagation","onNodeDragStart","dataTransfer","setData","_unused","onDragEnter","preventDefault","onNodeDragEnter","onDragOver","onNodeDragOver","onDragLeave","onNodeDragLeave","onDragEnd","onNodeDragEnd","onDrop","onNodeDrop","onExpand","onNodeExpand","hasChildren","_ref","keyEntities","children","Boolean","length","memoizedIsLeaf","loadData","loaded","useEffect","onNodeLoad","dragHandlerNode","_context$draggable","icon","createElement","concat","prefixCls","renderSwitcherIconDom","isInternalLeaf","switcherIcon","renderSwitcher","_switcherIconDom","switcherIconDom","onClick","checkboxNode","$custom","role","title","nodeState","iconNode","dropIndicatorNode","rootDraggable","showIndicator","dragOverNodeKey","dropIndicatorRender","dropPosition","dropLevelOffset","indent","direction","selectorNode","_props$title","wrapClass","$icon","showIcon","currentIcon","titleNode","titleRender","ref","onDoubleClick","dataOrAriaAttributeProps","aria","_ref2","level","isEndNode","draggableWithoutDisabled","dragging","draggingNodeKey","ariaSelected","undefined","dropTargetKey","dropContainerKey","filterTreeNode","isTreeNode","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"eventKey\", \"className\", \"style\", \"dragOver\", \"dragOverGapTop\", \"dragOverGapBottom\", \"isLeaf\", \"isStart\", \"isEnd\", \"expanded\", \"selected\", \"checked\", \"halfChecked\", \"loading\", \"domRef\", \"active\", \"data\", \"onMouseMove\", \"selectable\"];\nimport React from 'react';\nimport classNames from 'classnames';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { TreeContext, UnstableContext } from \"./contextTypes\";\nimport Indent from \"./Indent\";\nimport getEntity from \"./utils/keyUtil\";\nimport { convertNodePropsToEventData } from \"./utils/treeUtil\";\nvar ICON_OPEN = 'open';\nvar ICON_CLOSE = 'close';\nvar defaultTitle = '---';\nvar TreeNode = function TreeNode(props) {\n  var _unstableContext$node, _context$filterTreeNo, _classNames4;\n  var eventKey = props.eventKey,\n    className = props.className,\n    style = props.style,\n    dragOver = props.dragOver,\n    dragOverGapTop = props.dragOverGapTop,\n    dragOverGapBottom = props.dragOverGapBottom,\n    isLeaf = props.isLeaf,\n    isStart = props.isStart,\n    isEnd = props.isEnd,\n    expanded = props.expanded,\n    selected = props.selected,\n    checked = props.checked,\n    halfChecked = props.halfChecked,\n    loading = props.loading,\n    domRef = props.domRef,\n    active = props.active,\n    data = props.data,\n    onMouseMove = props.onMouseMove,\n    selectable = props.selectable,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var context = React.useContext(TreeContext);\n  var unstableContext = React.useContext(UnstableContext);\n  var selectHandleRef = React.useRef(null);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    dragNodeHighlight = _React$useState2[0],\n    setDragNodeHighlight = _React$useState2[1];\n\n  // ======= State: Disabled State =======\n  var isDisabled = !!(context.disabled || props.disabled || (_unstableContext$node = unstableContext.nodeDisabled) !== null && _unstableContext$node !== void 0 && _unstableContext$node.call(unstableContext, data));\n  var isCheckable = React.useMemo(function () {\n    // Return false if tree or treeNode is not checkable\n    if (!context.checkable || props.checkable === false) {\n      return false;\n    }\n    return context.checkable;\n  }, [context.checkable, props.checkable]);\n\n  // ======= Event Handlers: Selection and Check =======\n  var onSelect = function onSelect(e) {\n    if (isDisabled) {\n      return;\n    }\n    context.onNodeSelect(e, convertNodePropsToEventData(props));\n  };\n  var onCheck = function onCheck(e) {\n    if (isDisabled) {\n      return;\n    }\n    if (!isCheckable || props.disableCheckbox) {\n      return;\n    }\n    context.onNodeCheck(e, convertNodePropsToEventData(props), !checked);\n  };\n\n  // ======= State: Selectable Check =======\n  var isSelectable = React.useMemo(function () {\n    // Ignore when selectable is undefined or null\n    if (typeof selectable === 'boolean') {\n      return selectable;\n    }\n    return context.selectable;\n  }, [selectable, context.selectable]);\n  var onSelectorClick = function onSelectorClick(e) {\n    // Click trigger before select/check operation\n    context.onNodeClick(e, convertNodePropsToEventData(props));\n    if (isSelectable) {\n      onSelect(e);\n    } else {\n      onCheck(e);\n    }\n  };\n  var onSelectorDoubleClick = function onSelectorDoubleClick(e) {\n    context.onNodeDoubleClick(e, convertNodePropsToEventData(props));\n  };\n  var onMouseEnter = function onMouseEnter(e) {\n    context.onNodeMouseEnter(e, convertNodePropsToEventData(props));\n  };\n  var onMouseLeave = function onMouseLeave(e) {\n    context.onNodeMouseLeave(e, convertNodePropsToEventData(props));\n  };\n  var onContextMenu = function onContextMenu(e) {\n    context.onNodeContextMenu(e, convertNodePropsToEventData(props));\n  };\n\n  // ======= Drag: Drag Enabled =======\n  var isDraggable = React.useMemo(function () {\n    return !!(context.draggable && (!context.draggable.nodeDraggable || context.draggable.nodeDraggable(data)));\n  }, [context.draggable, data]);\n\n  // ======= Drag: Drag Event Handlers =======\n  var onDragStart = function onDragStart(e) {\n    e.stopPropagation();\n    setDragNodeHighlight(true);\n    context.onNodeDragStart(e, props);\n    try {\n      // ie throw error\n      // firefox-need-it\n      e.dataTransfer.setData('text/plain', '');\n    } catch (_unused) {\n      // empty\n    }\n  };\n  var onDragEnter = function onDragEnter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    context.onNodeDragEnter(e, props);\n  };\n  var onDragOver = function onDragOver(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    context.onNodeDragOver(e, props);\n  };\n  var onDragLeave = function onDragLeave(e) {\n    e.stopPropagation();\n    context.onNodeDragLeave(e, props);\n  };\n  var onDragEnd = function onDragEnd(e) {\n    e.stopPropagation();\n    setDragNodeHighlight(false);\n    context.onNodeDragEnd(e, props);\n  };\n  var onDrop = function onDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragNodeHighlight(false);\n    context.onNodeDrop(e, props);\n  };\n\n  // ======= Expand: Node Expansion =======\n  var onExpand = function onExpand(e) {\n    if (loading) {\n      return;\n    }\n    context.onNodeExpand(e, convertNodePropsToEventData(props));\n  };\n\n  // ======= State: Has Children =======\n  var hasChildren = React.useMemo(function () {\n    var _ref = getEntity(context.keyEntities, eventKey) || {},\n      children = _ref.children;\n    return Boolean((children || []).length);\n  }, [context.keyEntities, eventKey]);\n\n  // ======= State: Leaf Check =======\n  var memoizedIsLeaf = React.useMemo(function () {\n    if (isLeaf === false) {\n      return false;\n    }\n    return isLeaf || !context.loadData && !hasChildren || context.loadData && props.loaded && !hasChildren;\n  }, [isLeaf, context.loadData, hasChildren, props.loaded]);\n\n  // ============== Effect ==============\n  React.useEffect(function () {\n    // Load data to avoid default expanded tree without data\n    if (loading) {\n      return;\n    }\n    // read from state to avoid loadData at same time\n    if (typeof context.loadData === 'function' && expanded && !memoizedIsLeaf && !props.loaded) {\n      // We needn't reload data when has children in sync logic\n      // It's only needed in node expanded\n      context.onNodeLoad(convertNodePropsToEventData(props));\n    }\n  }, [loading, context.loadData, context.onNodeLoad, expanded, memoizedIsLeaf, props]);\n\n  // ==================== Render: Drag Handler ====================\n  var dragHandlerNode = React.useMemo(function () {\n    var _context$draggable;\n    if (!((_context$draggable = context.draggable) !== null && _context$draggable !== void 0 && _context$draggable.icon)) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(context.prefixCls, \"-draggable-icon\")\n    }, context.draggable.icon);\n  }, [context.draggable]);\n\n  // ====================== Render: Switcher ======================\n  var renderSwitcherIconDom = function renderSwitcherIconDom(isInternalLeaf) {\n    var switcherIcon = props.switcherIcon || context.switcherIcon;\n    // if switcherIconDom is null, no render switcher span\n    if (typeof switcherIcon === 'function') {\n      return switcherIcon(_objectSpread(_objectSpread({}, props), {}, {\n        isLeaf: isInternalLeaf\n      }));\n    }\n    return switcherIcon;\n  };\n\n  // Switcher\n  var renderSwitcher = function renderSwitcher() {\n    if (memoizedIsLeaf) {\n      // if switcherIconDom is null, no render switcher span\n      var _switcherIconDom = renderSwitcherIconDom(true);\n      return _switcherIconDom !== false ? /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(\"\".concat(context.prefixCls, \"-switcher\"), \"\".concat(context.prefixCls, \"-switcher-noop\"))\n      }, _switcherIconDom) : null;\n    }\n    var switcherIconDom = renderSwitcherIconDom(false);\n    return switcherIconDom !== false ? /*#__PURE__*/React.createElement(\"span\", {\n      onClick: onExpand,\n      className: classNames(\"\".concat(context.prefixCls, \"-switcher\"), \"\".concat(context.prefixCls, \"-switcher_\").concat(expanded ? ICON_OPEN : ICON_CLOSE))\n    }, switcherIconDom) : null;\n  };\n\n  // ====================== Checkbox ======================\n  var checkboxNode = React.useMemo(function () {\n    if (!isCheckable) {\n      return null;\n    }\n\n    // [Legacy] Custom element should be separate with `checkable` in future\n    var $custom = typeof isCheckable !== 'boolean' ? isCheckable : null;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(context.prefixCls, \"-checkbox\"), _defineProperty(_defineProperty(_defineProperty({}, \"\".concat(context.prefixCls, \"-checkbox-checked\"), checked), \"\".concat(context.prefixCls, \"-checkbox-indeterminate\"), !checked && halfChecked), \"\".concat(context.prefixCls, \"-checkbox-disabled\"), isDisabled || props.disableCheckbox)),\n      onClick: onCheck,\n      role: \"checkbox\",\n      \"aria-checked\": halfChecked ? 'mixed' : checked,\n      \"aria-disabled\": isDisabled || props.disableCheckbox,\n      \"aria-label\": \"Select \".concat(typeof props.title === 'string' ? props.title : 'tree node')\n    }, $custom);\n  }, [isCheckable, checked, halfChecked, isDisabled, props.disableCheckbox, props.title]);\n\n  // ============== State: Node State (Open/Close) ==============\n  var nodeState = React.useMemo(function () {\n    if (memoizedIsLeaf) {\n      return null;\n    }\n    return expanded ? ICON_OPEN : ICON_CLOSE;\n  }, [memoizedIsLeaf, expanded]);\n\n  // ==================== Render: Title + Icon ====================\n  var iconNode = React.useMemo(function () {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(context.prefixCls, \"-iconEle\"), \"\".concat(context.prefixCls, \"-icon__\").concat(nodeState || 'docu'), _defineProperty({}, \"\".concat(context.prefixCls, \"-icon_loading\"), loading))\n    });\n  }, [context.prefixCls, nodeState, loading]);\n\n  // =================== Drop Indicator ===================\n  var dropIndicatorNode = React.useMemo(function () {\n    var rootDraggable = Boolean(context.draggable);\n    // allowDrop is calculated in Tree.tsx, there is no need for calc it here\n    var showIndicator = !props.disabled && rootDraggable && context.dragOverNodeKey === eventKey;\n    if (!showIndicator) {\n      return null;\n    }\n    return context.dropIndicatorRender({\n      dropPosition: context.dropPosition,\n      dropLevelOffset: context.dropLevelOffset,\n      indent: context.indent,\n      prefixCls: context.prefixCls,\n      direction: context.direction\n    });\n  }, [context.dropPosition, context.dropLevelOffset, context.indent, context.prefixCls, context.direction, context.draggable, context.dragOverNodeKey, context.dropIndicatorRender]);\n\n  // Icon + Title\n  var selectorNode = React.useMemo(function () {\n    var _props$title = props.title,\n      title = _props$title === void 0 ? defaultTitle : _props$title;\n    var wrapClass = \"\".concat(context.prefixCls, \"-node-content-wrapper\");\n\n    // Icon - Still show loading icon when loading without showIcon\n    var $icon;\n    if (context.showIcon) {\n      var currentIcon = props.icon || context.icon;\n      $icon = currentIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(\"\".concat(context.prefixCls, \"-iconEle\"), \"\".concat(context.prefixCls, \"-icon__customize\"))\n      }, typeof currentIcon === 'function' ? currentIcon(props) : currentIcon) : iconNode;\n    } else if (context.loadData && loading) {\n      $icon = iconNode;\n    }\n\n    // Title\n    var titleNode;\n    if (typeof title === 'function') {\n      titleNode = title(data);\n    } else if (context.titleRender) {\n      titleNode = context.titleRender(data);\n    } else {\n      titleNode = title;\n    }\n    return /*#__PURE__*/React.createElement(\"span\", {\n      ref: selectHandleRef,\n      title: typeof title === 'string' ? title : '',\n      className: classNames(wrapClass, \"\".concat(wrapClass, \"-\").concat(nodeState || 'normal'), _defineProperty({}, \"\".concat(context.prefixCls, \"-node-selected\"), !isDisabled && (selected || dragNodeHighlight))),\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onContextMenu: onContextMenu,\n      onClick: onSelectorClick,\n      onDoubleClick: onSelectorDoubleClick\n    }, $icon, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(context.prefixCls, \"-title\")\n    }, titleNode), dropIndicatorNode);\n  }, [context.prefixCls, context.showIcon, props, context.icon, iconNode, context.titleRender, data, nodeState, onMouseEnter, onMouseLeave, onContextMenu, onSelectorClick, onSelectorDoubleClick]);\n  var dataOrAriaAttributeProps = pickAttrs(otherProps, {\n    aria: true,\n    data: true\n  });\n  var _ref2 = getEntity(context.keyEntities, eventKey) || {},\n    level = _ref2.level;\n  var isEndNode = isEnd[isEnd.length - 1];\n  var draggableWithoutDisabled = !isDisabled && isDraggable;\n  var dragging = context.draggingNodeKey === eventKey;\n  var ariaSelected = selectable !== undefined ? {\n    'aria-selected': !!selectable\n  } : undefined;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: domRef,\n    role: \"treeitem\",\n    \"aria-expanded\": isLeaf ? undefined : expanded,\n    className: classNames(className, \"\".concat(context.prefixCls, \"-treenode\"), (_classNames4 = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_classNames4, \"\".concat(context.prefixCls, \"-treenode-disabled\"), isDisabled), \"\".concat(context.prefixCls, \"-treenode-switcher-\").concat(expanded ? 'open' : 'close'), !isLeaf), \"\".concat(context.prefixCls, \"-treenode-checkbox-checked\"), checked), \"\".concat(context.prefixCls, \"-treenode-checkbox-indeterminate\"), halfChecked), \"\".concat(context.prefixCls, \"-treenode-selected\"), selected), \"\".concat(context.prefixCls, \"-treenode-loading\"), loading), \"\".concat(context.prefixCls, \"-treenode-active\"), active), \"\".concat(context.prefixCls, \"-treenode-leaf-last\"), isEndNode), \"\".concat(context.prefixCls, \"-treenode-draggable\"), isDraggable), \"dragging\", dragging), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_classNames4, 'drop-target', context.dropTargetKey === eventKey), 'drop-container', context.dropContainerKey === eventKey), 'drag-over', !isDisabled && dragOver), 'drag-over-gap-top', !isDisabled && dragOverGapTop), 'drag-over-gap-bottom', !isDisabled && dragOverGapBottom), 'filter-node', (_context$filterTreeNo = context.filterTreeNode) === null || _context$filterTreeNo === void 0 ? void 0 : _context$filterTreeNo.call(context, convertNodePropsToEventData(props))), \"\".concat(context.prefixCls, \"-treenode-leaf\"), memoizedIsLeaf))),\n    style: style\n    // Draggable config\n    ,\n    draggable: draggableWithoutDisabled,\n    onDragStart: draggableWithoutDisabled ? onDragStart : undefined\n    // Drop config\n    ,\n    onDragEnter: isDraggable ? onDragEnter : undefined,\n    onDragOver: isDraggable ? onDragOver : undefined,\n    onDragLeave: isDraggable ? onDragLeave : undefined,\n    onDrop: isDraggable ? onDrop : undefined,\n    onDragEnd: isDraggable ? onDragEnd : undefined,\n    onMouseMove: onMouseMove\n  }, ariaSelected, dataOrAriaAttributeProps), /*#__PURE__*/React.createElement(Indent, {\n    prefixCls: context.prefixCls,\n    level: level,\n    isStart: isStart,\n    isEnd: isEnd\n  }), dragHandlerNode, renderSwitcher(), checkboxNode, selectorNode);\n};\nTreeNode.isTreeNode = 1;\nif (process.env.NODE_ENV !== 'production') {\n  TreeNode.displayName = 'TreeNode';\n}\nexport default TreeNode;"]},"metadata":{},"sourceType":"module"}