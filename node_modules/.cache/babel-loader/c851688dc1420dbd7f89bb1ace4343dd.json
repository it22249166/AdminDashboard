{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { render, unmount } from \"rc-util/es/React/render\";\nimport warning from '../_util/warning';\n\nconst defaultReactRender = (node, container) => {\n  // TODO: Remove in v6\n  // Warning for React 19\n  if (process.env.NODE_ENV !== 'production') {\n    const majorVersion = parseInt(React.version.split('.')[0], 10);\n    const fullKeys = Object.keys(ReactDOM);\n    process.env.NODE_ENV !== \"production\" ? warning(majorVersion < 19 || fullKeys.includes('createRoot'), 'compatible', 'antd v5 support React is 16 ~ 18. see https://u.ant.design/v5-for-19 for compatible.') : void 0;\n  }\n\n  render(node, container);\n  return () => {\n    return unmount(container);\n  };\n};\n\nlet unstableRender = defaultReactRender;\n/**\n * @deprecated Set React render function for compatible usage.\n * This is internal usage only compatible with React 19.\n * And will be removed in next major version.\n */\n\nexport function unstableSetRender(render) {\n  if (render) {\n    unstableRender = render;\n  }\n\n  return unstableRender;\n}\nexport function getReactRender() {\n  return unstableRender;\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/config-provider/UnstableContext.js"],"names":["React","ReactDOM","render","unmount","warning","defaultReactRender","node","container","process","env","NODE_ENV","majorVersion","parseInt","version","split","fullKeys","Object","keys","includes","unstableRender","unstableSetRender","getReactRender"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,yBAAhC;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AACA,MAAMC,kBAAkB,GAAG,CAACC,IAAD,EAAOC,SAAP,KAAqB;AAC9C;AACA;AACA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAMC,YAAY,GAAGC,QAAQ,CAACZ,KAAK,CAACa,OAAN,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,EAA8B,EAA9B,CAA7B;AACA,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYhB,QAAZ,CAAjB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,OAAO,CAACO,YAAY,GAAG,EAAf,IAAqBI,QAAQ,CAACG,QAAT,CAAkB,YAAlB,CAAtB,EAAuD,YAAvD,EAAqE,sFAArE,CAA/C,GAA8M,KAAK,CAAnN;AACD;;AACDhB,EAAAA,MAAM,CAACI,IAAD,EAAOC,SAAP,CAAN;AACA,SAAO,MAAM;AACX,WAAOJ,OAAO,CAACI,SAAD,CAAd;AACD,GAFD;AAGD,CAZD;;AAaA,IAAIY,cAAc,GAAGd,kBAArB;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASe,iBAAT,CAA2BlB,MAA3B,EAAmC;AACxC,MAAIA,MAAJ,EAAY;AACViB,IAAAA,cAAc,GAAGjB,MAAjB;AACD;;AACD,SAAOiB,cAAP;AACD;AACD,OAAO,SAASE,cAAT,GAA0B;AAC/B,SAAOF,cAAP;AACD","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { render, unmount } from \"rc-util/es/React/render\";\nimport warning from '../_util/warning';\nconst defaultReactRender = (node, container) => {\n  // TODO: Remove in v6\n  // Warning for React 19\n  if (process.env.NODE_ENV !== 'production') {\n    const majorVersion = parseInt(React.version.split('.')[0], 10);\n    const fullKeys = Object.keys(ReactDOM);\n    process.env.NODE_ENV !== \"production\" ? warning(majorVersion < 19 || fullKeys.includes('createRoot'), 'compatible', 'antd v5 support React is 16 ~ 18. see https://u.ant.design/v5-for-19 for compatible.') : void 0;\n  }\n  render(node, container);\n  return () => {\n    return unmount(container);\n  };\n};\nlet unstableRender = defaultReactRender;\n/**\n * @deprecated Set React render function for compatible usage.\n * This is internal usage only compatible with React 19.\n * And will be removed in next major version.\n */\nexport function unstableSetRender(render) {\n  if (render) {\n    unstableRender = render;\n  }\n  return unstableRender;\n}\nexport function getReactRender() {\n  return unstableRender;\n}"]},"metadata":{},"sourceType":"module"}