{"ast":null,"code":"export function isWindow(obj) {\n  return obj !== null && obj !== undefined && obj === obj.window;\n}\n\nconst getScroll = target => {\n  var _a, _b;\n\n  if (typeof window === 'undefined') {\n    return 0;\n  }\n\n  let result = 0;\n\n  if (isWindow(target)) {\n    result = target.pageYOffset;\n  } else if (target instanceof Document) {\n    result = target.documentElement.scrollTop;\n  } else if (target instanceof HTMLElement) {\n    result = target.scrollTop;\n  } else if (target) {\n    // According to the type inference, the `target` is `never` type.\n    // Since we configured the loose mode type checking, and supports mocking the target with such shape below::\n    //    `{ documentElement: { scrollLeft: 200, scrollTop: 400 } }`,\n    //    the program may falls into this branch.\n    // Check the corresponding tests for details. Don't sure what is the real scenario this happens.\n\n    /* biome-ignore lint/complexity/useLiteralKeys: target is a never type */\n\n    /* eslint-disable-next-line dot-notation */\n    result = target['scrollTop'];\n  }\n\n  if (target && !isWindow(target) && typeof result !== 'number') {\n    result = (_b = ((_a = target.ownerDocument) !== null && _a !== void 0 ? _a : target).documentElement) === null || _b === void 0 ? void 0 : _b.scrollTop;\n  }\n\n  return result;\n};\n\nexport default getScroll;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/_util/getScroll.js"],"names":["isWindow","obj","undefined","window","getScroll","target","_a","_b","result","pageYOffset","Document","documentElement","scrollTop","HTMLElement","ownerDocument"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;AAC5B,SAAOA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKC,SAAxB,IAAqCD,GAAG,KAAKA,GAAG,CAACE,MAAxD;AACD;;AACD,MAAMC,SAAS,GAAGC,MAAM,IAAI;AAC1B,MAAIC,EAAJ,EAAQC,EAAR;;AACA,MAAI,OAAOJ,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAO,CAAP;AACD;;AACD,MAAIK,MAAM,GAAG,CAAb;;AACA,MAAIR,QAAQ,CAACK,MAAD,CAAZ,EAAsB;AACpBG,IAAAA,MAAM,GAAGH,MAAM,CAACI,WAAhB;AACD,GAFD,MAEO,IAAIJ,MAAM,YAAYK,QAAtB,EAAgC;AACrCF,IAAAA,MAAM,GAAGH,MAAM,CAACM,eAAP,CAAuBC,SAAhC;AACD,GAFM,MAEA,IAAIP,MAAM,YAAYQ,WAAtB,EAAmC;AACxCL,IAAAA,MAAM,GAAGH,MAAM,CAACO,SAAhB;AACD,GAFM,MAEA,IAAIP,MAAJ,EAAY;AACjB;AACA;AACA;AACA;AACA;;AACA;;AAA0E;AAC1EG,IAAAA,MAAM,GAAGH,MAAM,CAAC,WAAD,CAAf;AACD;;AACD,MAAIA,MAAM,IAAI,CAACL,QAAQ,CAACK,MAAD,CAAnB,IAA+B,OAAOG,MAAP,KAAkB,QAArD,EAA+D;AAC7DA,IAAAA,MAAM,GAAG,CAACD,EAAE,GAAG,CAAC,CAACD,EAAE,GAAGD,MAAM,CAACS,aAAb,MAAgC,IAAhC,IAAwCR,EAAE,KAAK,KAAK,CAApD,GAAwDA,EAAxD,GAA6DD,MAA9D,EAAsEM,eAA5E,MAAiG,IAAjG,IAAyGJ,EAAE,KAAK,KAAK,CAArH,GAAyH,KAAK,CAA9H,GAAkIA,EAAE,CAACK,SAA9I;AACD;;AACD,SAAOJ,MAAP;AACD,CAzBD;;AA0BA,eAAeJ,SAAf","sourcesContent":["export function isWindow(obj) {\n  return obj !== null && obj !== undefined && obj === obj.window;\n}\nconst getScroll = target => {\n  var _a, _b;\n  if (typeof window === 'undefined') {\n    return 0;\n  }\n  let result = 0;\n  if (isWindow(target)) {\n    result = target.pageYOffset;\n  } else if (target instanceof Document) {\n    result = target.documentElement.scrollTop;\n  } else if (target instanceof HTMLElement) {\n    result = target.scrollTop;\n  } else if (target) {\n    // According to the type inference, the `target` is `never` type.\n    // Since we configured the loose mode type checking, and supports mocking the target with such shape below::\n    //    `{ documentElement: { scrollLeft: 200, scrollTop: 400 } }`,\n    //    the program may falls into this branch.\n    // Check the corresponding tests for details. Don't sure what is the real scenario this happens.\n    /* biome-ignore lint/complexity/useLiteralKeys: target is a never type */ /* eslint-disable-next-line dot-notation */\n    result = target['scrollTop'];\n  }\n  if (target && !isWindow(target) && typeof result !== 'number') {\n    result = (_b = ((_a = target.ownerDocument) !== null && _a !== void 0 ? _a : target).documentElement) === null || _b === void 0 ? void 0 : _b.scrollTop;\n  }\n  return result;\n};\nexport default getScroll;"]},"metadata":{},"sourceType":"module"}