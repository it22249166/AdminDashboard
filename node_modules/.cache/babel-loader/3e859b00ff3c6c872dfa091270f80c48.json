{"ast":null,"code":"\"use client\";\n\nimport React from 'react';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport Button from '../button';\nimport Spin from '../spin';\nconst defaultSpin = /*#__PURE__*/React.createElement(Spin, null);\nexport default function QRcodeStatus(_ref) {\n  let {\n    prefixCls,\n    locale,\n    onRefresh,\n    statusRender,\n    status\n  } = _ref;\n  const defaultExpiredNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: `${prefixCls}-expired`\n  }, locale === null || locale === void 0 ? void 0 : locale.expired), onRefresh && /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/React.createElement(ReloadOutlined, null),\n    onClick: onRefresh\n  }, locale === null || locale === void 0 ? void 0 : locale.refresh));\n  const defaultScannedNode = /*#__PURE__*/React.createElement(\"p\", {\n    className: `${prefixCls}-scanned`\n  }, locale === null || locale === void 0 ? void 0 : locale.scanned);\n  const defaultNodes = {\n    expired: defaultExpiredNode,\n    loading: defaultSpin,\n    scanned: defaultScannedNode\n  };\n\n  const defaultStatusRender = info => defaultNodes[info.status];\n\n  const mergedStatusRender = statusRender !== null && statusRender !== void 0 ? statusRender : defaultStatusRender;\n  return mergedStatusRender({\n    status,\n    locale,\n    onRefresh\n  });\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/qr-code/QrcodeStatus.js"],"names":["React","ReloadOutlined","Button","Spin","defaultSpin","createElement","QRcodeStatus","_ref","prefixCls","locale","onRefresh","statusRender","status","defaultExpiredNode","Fragment","className","expired","type","icon","onClick","refresh","defaultScannedNode","scanned","defaultNodes","loading","defaultStatusRender","info","mergedStatusRender"],"mappings":"AAAA;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,MAAMC,WAAW,GAAG,aAAaJ,KAAK,CAACK,aAAN,CAAoBF,IAApB,EAA0B,IAA1B,CAAjC;AACA,eAAe,SAASG,YAAT,CAAsBC,IAAtB,EAA4B;AACzC,MAAI;AACFC,IAAAA,SADE;AAEFC,IAAAA,MAFE;AAGFC,IAAAA,SAHE;AAIFC,IAAAA,YAJE;AAKFC,IAAAA;AALE,MAMAL,IANJ;AAOA,QAAMM,kBAAkB,GAAG,aAAab,KAAK,CAACK,aAAN,CAAoBL,KAAK,CAACc,QAA1B,EAAoC,IAApC,EAA0C,aAAad,KAAK,CAACK,aAAN,CAAoB,GAApB,EAAyB;AACtHU,IAAAA,SAAS,EAAG,GAAEP,SAAU;AAD8F,GAAzB,EAE5FC,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACO,OAFqC,CAAvD,EAE4BN,SAAS,IAAK,aAAaV,KAAK,CAACK,aAAN,CAAoBH,MAApB,EAA4B;AACzHe,IAAAA,IAAI,EAAE,MADmH;AAEzHC,IAAAA,IAAI,EAAE,aAAalB,KAAK,CAACK,aAAN,CAAoBJ,cAApB,EAAoC,IAApC,CAFsG;AAGzHkB,IAAAA,OAAO,EAAET;AAHgH,GAA5B,EAI5FD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACW,OAJqC,CAFvD,CAAxC;AAOA,QAAMC,kBAAkB,GAAG,aAAarB,KAAK,CAACK,aAAN,CAAoB,GAApB,EAAyB;AAC/DU,IAAAA,SAAS,EAAG,GAAEP,SAAU;AADuC,GAAzB,EAErCC,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACa,OAFlB,CAAxC;AAGA,QAAMC,YAAY,GAAG;AACnBP,IAAAA,OAAO,EAAEH,kBADU;AAEnBW,IAAAA,OAAO,EAAEpB,WAFU;AAGnBkB,IAAAA,OAAO,EAAED;AAHU,GAArB;;AAKA,QAAMI,mBAAmB,GAAGC,IAAI,IAAIH,YAAY,CAACG,IAAI,CAACd,MAAN,CAAhD;;AACA,QAAMe,kBAAkB,GAAGhB,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmDA,YAAnD,GAAkEc,mBAA7F;AACA,SAAOE,kBAAkB,CAAC;AACxBf,IAAAA,MADwB;AAExBH,IAAAA,MAFwB;AAGxBC,IAAAA;AAHwB,GAAD,CAAzB;AAKD","sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport Button from '../button';\nimport Spin from '../spin';\nconst defaultSpin = /*#__PURE__*/React.createElement(Spin, null);\nexport default function QRcodeStatus(_ref) {\n  let {\n    prefixCls,\n    locale,\n    onRefresh,\n    statusRender,\n    status\n  } = _ref;\n  const defaultExpiredNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: `${prefixCls}-expired`\n  }, locale === null || locale === void 0 ? void 0 : locale.expired), onRefresh && (/*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/React.createElement(ReloadOutlined, null),\n    onClick: onRefresh\n  }, locale === null || locale === void 0 ? void 0 : locale.refresh)));\n  const defaultScannedNode = /*#__PURE__*/React.createElement(\"p\", {\n    className: `${prefixCls}-scanned`\n  }, locale === null || locale === void 0 ? void 0 : locale.scanned);\n  const defaultNodes = {\n    expired: defaultExpiredNode,\n    loading: defaultSpin,\n    scanned: defaultScannedNode\n  };\n  const defaultStatusRender = info => defaultNodes[info.status];\n  const mergedStatusRender = statusRender !== null && statusRender !== void 0 ? statusRender : defaultStatusRender;\n  return mergedStatusRender({\n    status,\n    locale,\n    onRefresh\n  });\n}"]},"metadata":{},"sourceType":"module"}