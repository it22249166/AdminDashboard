{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport CacheMap from \"../utils/CacheMap\";\n\nfunction parseNumber(value) {\n  var num = parseFloat(value);\n  return isNaN(num) ? 0 : num;\n}\n\nexport default function useHeights(getKey, onItemAdd, onItemRemove) {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      updatedMark = _React$useState2[0],\n      setUpdatedMark = _React$useState2[1];\n\n  var instanceRef = useRef(new Map());\n  var heightsRef = useRef(new CacheMap());\n  var promiseIdRef = useRef(0);\n\n  function cancelRaf() {\n    promiseIdRef.current += 1;\n  }\n\n  function collectHeight() {\n    var sync = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    cancelRaf();\n\n    var doCollect = function doCollect() {\n      var changed = false;\n      instanceRef.current.forEach(function (element, key) {\n        if (element && element.offsetParent) {\n          var offsetHeight = element.offsetHeight;\n\n          var _getComputedStyle = getComputedStyle(element),\n              marginTop = _getComputedStyle.marginTop,\n              marginBottom = _getComputedStyle.marginBottom;\n\n          var marginTopNum = parseNumber(marginTop);\n          var marginBottomNum = parseNumber(marginBottom);\n          var totalHeight = offsetHeight + marginTopNum + marginBottomNum;\n\n          if (heightsRef.current.get(key) !== totalHeight) {\n            heightsRef.current.set(key, totalHeight);\n            changed = true;\n          }\n        }\n      }); // Always trigger update mark to tell parent that should re-calculate heights when resized\n\n      if (changed) {\n        setUpdatedMark(function (c) {\n          return c + 1;\n        });\n      }\n    };\n\n    if (sync) {\n      doCollect();\n    } else {\n      promiseIdRef.current += 1;\n      var id = promiseIdRef.current;\n      Promise.resolve().then(function () {\n        if (id === promiseIdRef.current) {\n          doCollect();\n        }\n      });\n    }\n  }\n\n  function setInstanceRef(item, instance) {\n    var key = getKey(item);\n    var origin = instanceRef.current.get(key);\n\n    if (instance) {\n      instanceRef.current.set(key, instance);\n      collectHeight();\n    } else {\n      instanceRef.current.delete(key);\n    } // Instance changed\n\n\n    if (!origin !== !instance) {\n      if (instance) {\n        onItemAdd === null || onItemAdd === void 0 || onItemAdd(item);\n      } else {\n        onItemRemove === null || onItemRemove === void 0 || onItemRemove(item);\n      }\n    }\n  }\n\n  useEffect(function () {\n    return cancelRaf;\n  }, []);\n  return [setInstanceRef, collectHeight, heightsRef.current, updatedMark];\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-virtual-list/es/hooks/useHeights.js"],"names":["_slicedToArray","React","useEffect","useRef","CacheMap","parseNumber","value","num","parseFloat","isNaN","useHeights","getKey","onItemAdd","onItemRemove","_React$useState","useState","_React$useState2","updatedMark","setUpdatedMark","instanceRef","Map","heightsRef","promiseIdRef","cancelRaf","current","collectHeight","sync","arguments","length","undefined","doCollect","changed","forEach","element","key","offsetParent","offsetHeight","_getComputedStyle","getComputedStyle","marginTop","marginBottom","marginTopNum","marginBottomNum","totalHeight","get","set","c","id","Promise","resolve","then","setInstanceRef","item","instance","origin","delete"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport CacheMap from \"../utils/CacheMap\";\nfunction parseNumber(value) {\n  var num = parseFloat(value);\n  return isNaN(num) ? 0 : num;\n}\nexport default function useHeights(getKey, onItemAdd, onItemRemove) {\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    updatedMark = _React$useState2[0],\n    setUpdatedMark = _React$useState2[1];\n  var instanceRef = useRef(new Map());\n  var heightsRef = useRef(new CacheMap());\n  var promiseIdRef = useRef(0);\n  function cancelRaf() {\n    promiseIdRef.current += 1;\n  }\n  function collectHeight() {\n    var sync = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    cancelRaf();\n    var doCollect = function doCollect() {\n      var changed = false;\n      instanceRef.current.forEach(function (element, key) {\n        if (element && element.offsetParent) {\n          var offsetHeight = element.offsetHeight;\n          var _getComputedStyle = getComputedStyle(element),\n            marginTop = _getComputedStyle.marginTop,\n            marginBottom = _getComputedStyle.marginBottom;\n          var marginTopNum = parseNumber(marginTop);\n          var marginBottomNum = parseNumber(marginBottom);\n          var totalHeight = offsetHeight + marginTopNum + marginBottomNum;\n          if (heightsRef.current.get(key) !== totalHeight) {\n            heightsRef.current.set(key, totalHeight);\n            changed = true;\n          }\n        }\n      });\n\n      // Always trigger update mark to tell parent that should re-calculate heights when resized\n      if (changed) {\n        setUpdatedMark(function (c) {\n          return c + 1;\n        });\n      }\n    };\n    if (sync) {\n      doCollect();\n    } else {\n      promiseIdRef.current += 1;\n      var id = promiseIdRef.current;\n      Promise.resolve().then(function () {\n        if (id === promiseIdRef.current) {\n          doCollect();\n        }\n      });\n    }\n  }\n  function setInstanceRef(item, instance) {\n    var key = getKey(item);\n    var origin = instanceRef.current.get(key);\n    if (instance) {\n      instanceRef.current.set(key, instance);\n      collectHeight();\n    } else {\n      instanceRef.current.delete(key);\n    }\n\n    // Instance changed\n    if (!origin !== !instance) {\n      if (instance) {\n        onItemAdd === null || onItemAdd === void 0 || onItemAdd(item);\n      } else {\n        onItemRemove === null || onItemRemove === void 0 || onItemRemove(item);\n      }\n    }\n  }\n  useEffect(function () {\n    return cancelRaf;\n  }, []);\n  return [setInstanceRef, collectHeight, heightsRef.current, updatedMark];\n}"]},"metadata":{},"sourceType":"module"}