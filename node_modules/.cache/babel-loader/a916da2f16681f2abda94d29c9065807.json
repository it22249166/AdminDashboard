{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"style\", \"motion\", \"motionNodes\", \"motionType\", \"onMotionStart\", \"onMotionEnd\", \"active\", \"treeNodeRequiredProps\"];\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { TreeContext } from \"./contextTypes\";\nimport TreeNode from \"./TreeNode\";\nimport useUnmount from \"./useUnmount\";\nimport { getTreeNodeProps } from \"./utils/treeUtil\";\nvar MotionTreeNode = /*#__PURE__*/React.forwardRef(function (oriProps, ref) {\n  var className = oriProps.className,\n      style = oriProps.style,\n      motion = oriProps.motion,\n      motionNodes = oriProps.motionNodes,\n      motionType = oriProps.motionType,\n      onOriginMotionStart = oriProps.onMotionStart,\n      onOriginMotionEnd = oriProps.onMotionEnd,\n      active = oriProps.active,\n      treeNodeRequiredProps = oriProps.treeNodeRequiredProps,\n      props = _objectWithoutProperties(oriProps, _excluded);\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useContext = React.useContext(TreeContext),\n      prefixCls = _React$useContext.prefixCls; // Calculate target visible here.\n  // And apply in effect to make `leave` motion work.\n\n\n  var targetVisible = motionNodes && motionType !== 'hide';\n  useLayoutEffect(function () {\n    if (motionNodes) {\n      if (targetVisible !== visible) {\n        setVisible(targetVisible);\n      }\n    }\n  }, [motionNodes]);\n\n  var triggerMotionStart = function triggerMotionStart() {\n    if (motionNodes) {\n      onOriginMotionStart();\n    }\n  }; // Should only trigger once\n\n\n  var triggerMotionEndRef = React.useRef(false);\n\n  var triggerMotionEnd = function triggerMotionEnd() {\n    if (motionNodes && !triggerMotionEndRef.current) {\n      triggerMotionEndRef.current = true;\n      onOriginMotionEnd();\n    }\n  }; // Effect if unmount\n\n\n  useUnmount(triggerMotionStart, triggerMotionEnd); // Motion end event\n\n  var onVisibleChanged = function onVisibleChanged(nextVisible) {\n    if (targetVisible === nextVisible) {\n      triggerMotionEnd();\n    }\n  };\n\n  if (motionNodes) {\n    return /*#__PURE__*/React.createElement(CSSMotion, _extends({\n      ref: ref,\n      visible: visible\n    }, motion, {\n      motionAppear: motionType === 'show',\n      onVisibleChanged: onVisibleChanged\n    }), function (_ref, motionRef) {\n      var motionClassName = _ref.className,\n          motionStyle = _ref.style;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: motionRef,\n        className: classNames(\"\".concat(prefixCls, \"-treenode-motion\"), motionClassName),\n        style: motionStyle\n      }, motionNodes.map(function (treeNode) {\n        var restProps = Object.assign({}, (_objectDestructuringEmpty(treeNode.data), treeNode.data)),\n            title = treeNode.title,\n            key = treeNode.key,\n            isStart = treeNode.isStart,\n            isEnd = treeNode.isEnd;\n        delete restProps.children;\n        var treeNodeProps = getTreeNodeProps(key, treeNodeRequiredProps);\n        return /*#__PURE__*/React.createElement(TreeNode, _extends({}, restProps, treeNodeProps, {\n          title: title,\n          active: active,\n          data: treeNode.data,\n          key: key,\n          isStart: isStart,\n          isEnd: isEnd\n        }));\n      }));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(TreeNode, _extends({\n    domRef: ref,\n    className: className,\n    style: style\n  }, props, {\n    active: active\n  }));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  MotionTreeNode.displayName = 'MotionTreeNode';\n}\n\nexport default MotionTreeNode;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-tree/es/MotionTreeNode.js"],"names":["_extends","_objectDestructuringEmpty","_slicedToArray","_objectWithoutProperties","_excluded","classNames","CSSMotion","useLayoutEffect","React","TreeContext","TreeNode","useUnmount","getTreeNodeProps","MotionTreeNode","forwardRef","oriProps","ref","className","style","motion","motionNodes","motionType","onOriginMotionStart","onMotionStart","onOriginMotionEnd","onMotionEnd","active","treeNodeRequiredProps","props","_React$useState","useState","_React$useState2","visible","setVisible","_React$useContext","useContext","prefixCls","targetVisible","triggerMotionStart","triggerMotionEndRef","useRef","triggerMotionEnd","current","onVisibleChanged","nextVisible","createElement","motionAppear","_ref","motionRef","motionClassName","motionStyle","concat","map","treeNode","restProps","Object","assign","data","title","key","isStart","isEnd","children","treeNodeProps","domRef","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"style\", \"motion\", \"motionNodes\", \"motionType\", \"onMotionStart\", \"onMotionEnd\", \"active\", \"treeNodeRequiredProps\"];\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { TreeContext } from \"./contextTypes\";\nimport TreeNode from \"./TreeNode\";\nimport useUnmount from \"./useUnmount\";\nimport { getTreeNodeProps } from \"./utils/treeUtil\";\nvar MotionTreeNode = /*#__PURE__*/React.forwardRef(function (oriProps, ref) {\n  var className = oriProps.className,\n    style = oriProps.style,\n    motion = oriProps.motion,\n    motionNodes = oriProps.motionNodes,\n    motionType = oriProps.motionType,\n    onOriginMotionStart = oriProps.onMotionStart,\n    onOriginMotionEnd = oriProps.onMotionEnd,\n    active = oriProps.active,\n    treeNodeRequiredProps = oriProps.treeNodeRequiredProps,\n    props = _objectWithoutProperties(oriProps, _excluded);\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    visible = _React$useState2[0],\n    setVisible = _React$useState2[1];\n  var _React$useContext = React.useContext(TreeContext),\n    prefixCls = _React$useContext.prefixCls;\n\n  // Calculate target visible here.\n  // And apply in effect to make `leave` motion work.\n  var targetVisible = motionNodes && motionType !== 'hide';\n  useLayoutEffect(function () {\n    if (motionNodes) {\n      if (targetVisible !== visible) {\n        setVisible(targetVisible);\n      }\n    }\n  }, [motionNodes]);\n  var triggerMotionStart = function triggerMotionStart() {\n    if (motionNodes) {\n      onOriginMotionStart();\n    }\n  };\n\n  // Should only trigger once\n  var triggerMotionEndRef = React.useRef(false);\n  var triggerMotionEnd = function triggerMotionEnd() {\n    if (motionNodes && !triggerMotionEndRef.current) {\n      triggerMotionEndRef.current = true;\n      onOriginMotionEnd();\n    }\n  };\n\n  // Effect if unmount\n  useUnmount(triggerMotionStart, triggerMotionEnd);\n\n  // Motion end event\n  var onVisibleChanged = function onVisibleChanged(nextVisible) {\n    if (targetVisible === nextVisible) {\n      triggerMotionEnd();\n    }\n  };\n  if (motionNodes) {\n    return /*#__PURE__*/React.createElement(CSSMotion, _extends({\n      ref: ref,\n      visible: visible\n    }, motion, {\n      motionAppear: motionType === 'show',\n      onVisibleChanged: onVisibleChanged\n    }), function (_ref, motionRef) {\n      var motionClassName = _ref.className,\n        motionStyle = _ref.style;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: motionRef,\n        className: classNames(\"\".concat(prefixCls, \"-treenode-motion\"), motionClassName),\n        style: motionStyle\n      }, motionNodes.map(function (treeNode) {\n        var restProps = Object.assign({}, (_objectDestructuringEmpty(treeNode.data), treeNode.data)),\n          title = treeNode.title,\n          key = treeNode.key,\n          isStart = treeNode.isStart,\n          isEnd = treeNode.isEnd;\n        delete restProps.children;\n        var treeNodeProps = getTreeNodeProps(key, treeNodeRequiredProps);\n        return /*#__PURE__*/React.createElement(TreeNode, _extends({}, restProps, treeNodeProps, {\n          title: title,\n          active: active,\n          data: treeNode.data,\n          key: key,\n          isStart: isStart,\n          isEnd: isEnd\n        }));\n      }));\n    });\n  }\n  return /*#__PURE__*/React.createElement(TreeNode, _extends({\n    domRef: ref,\n    className: className,\n    style: style\n  }, props, {\n    active: active\n  }));\n});\nif (process.env.NODE_ENV !== 'production') {\n  MotionTreeNode.displayName = 'MotionTreeNode';\n}\nexport default MotionTreeNode;"]},"metadata":{},"sourceType":"module"}