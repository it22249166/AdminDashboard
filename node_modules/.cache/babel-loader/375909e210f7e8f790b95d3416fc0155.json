{"ast":null,"code":"import * as React from 'react';\nimport { useRef } from 'react';\nimport { animationEndName, transitionEndName } from \"../util/motion\";\nexport default (function (onInternalMotionEnd) {\n  var cacheElementRef = useRef(); // Remove events\n\n  function removeMotionEvents(element) {\n    if (element) {\n      element.removeEventListener(transitionEndName, onInternalMotionEnd);\n      element.removeEventListener(animationEndName, onInternalMotionEnd);\n    }\n  } // Patch events\n\n\n  function patchMotionEvents(element) {\n    if (cacheElementRef.current && cacheElementRef.current !== element) {\n      removeMotionEvents(cacheElementRef.current);\n    }\n\n    if (element && element !== cacheElementRef.current) {\n      element.addEventListener(transitionEndName, onInternalMotionEnd);\n      element.addEventListener(animationEndName, onInternalMotionEnd); // Save as cache in case dom removed trigger by `motionDeadline`\n\n      cacheElementRef.current = element;\n    }\n  } // Clean up when removed\n\n\n  React.useEffect(function () {\n    return function () {\n      removeMotionEvents(cacheElementRef.current);\n    };\n  }, []);\n  return [patchMotionEvents, removeMotionEvents];\n});","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-motion/es/hooks/useDomMotionEvents.js"],"names":["React","useRef","animationEndName","transitionEndName","onInternalMotionEnd","cacheElementRef","removeMotionEvents","element","removeEventListener","patchMotionEvents","current","addEventListener","useEffect"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,gBAApD;AACA,gBAAgB,UAAUC,mBAAV,EAA+B;AAC7C,MAAIC,eAAe,GAAGJ,MAAM,EAA5B,CAD6C,CAG7C;;AACA,WAASK,kBAAT,CAA4BC,OAA5B,EAAqC;AACnC,QAAIA,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACC,mBAAR,CAA4BL,iBAA5B,EAA+CC,mBAA/C;AACAG,MAAAA,OAAO,CAACC,mBAAR,CAA4BN,gBAA5B,EAA8CE,mBAA9C;AACD;AACF,GAT4C,CAW7C;;;AACA,WAASK,iBAAT,CAA2BF,OAA3B,EAAoC;AAClC,QAAIF,eAAe,CAACK,OAAhB,IAA2BL,eAAe,CAACK,OAAhB,KAA4BH,OAA3D,EAAoE;AAClED,MAAAA,kBAAkB,CAACD,eAAe,CAACK,OAAjB,CAAlB;AACD;;AACD,QAAIH,OAAO,IAAIA,OAAO,KAAKF,eAAe,CAACK,OAA3C,EAAoD;AAClDH,MAAAA,OAAO,CAACI,gBAAR,CAAyBR,iBAAzB,EAA4CC,mBAA5C;AACAG,MAAAA,OAAO,CAACI,gBAAR,CAAyBT,gBAAzB,EAA2CE,mBAA3C,EAFkD,CAIlD;;AACAC,MAAAA,eAAe,CAACK,OAAhB,GAA0BH,OAA1B;AACD;AACF,GAvB4C,CAyB7C;;;AACAP,EAAAA,KAAK,CAACY,SAAN,CAAgB,YAAY;AAC1B,WAAO,YAAY;AACjBN,MAAAA,kBAAkB,CAACD,eAAe,CAACK,OAAjB,CAAlB;AACD,KAFD;AAGD,GAJD,EAIG,EAJH;AAKA,SAAO,CAACD,iBAAD,EAAoBH,kBAApB,CAAP;AACD,CAhCD","sourcesContent":["import * as React from 'react';\nimport { useRef } from 'react';\nimport { animationEndName, transitionEndName } from \"../util/motion\";\nexport default (function (onInternalMotionEnd) {\n  var cacheElementRef = useRef();\n\n  // Remove events\n  function removeMotionEvents(element) {\n    if (element) {\n      element.removeEventListener(transitionEndName, onInternalMotionEnd);\n      element.removeEventListener(animationEndName, onInternalMotionEnd);\n    }\n  }\n\n  // Patch events\n  function patchMotionEvents(element) {\n    if (cacheElementRef.current && cacheElementRef.current !== element) {\n      removeMotionEvents(cacheElementRef.current);\n    }\n    if (element && element !== cacheElementRef.current) {\n      element.addEventListener(transitionEndName, onInternalMotionEnd);\n      element.addEventListener(animationEndName, onInternalMotionEnd);\n\n      // Save as cache in case dom removed trigger by `motionDeadline`\n      cacheElementRef.current = element;\n    }\n  }\n\n  // Clean up when removed\n  React.useEffect(function () {\n    return function () {\n      removeMotionEvents(cacheElementRef.current);\n    };\n  }, []);\n  return [patchMotionEvents, removeMotionEvents];\n});"]},"metadata":{},"sourceType":"module"}