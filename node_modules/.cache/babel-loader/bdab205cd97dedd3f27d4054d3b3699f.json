{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"value\", \"size\", \"level\", \"bgColor\", \"fgColor\", \"includeMargin\", \"minVersion\", \"marginSize\", \"style\", \"imageSettings\"];\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useQRCode } from \"./hooks/useQRCode\";\nimport { DEFAULT_BACKGROUND_COLOR, DEFAULT_FRONT_COLOR, DEFAULT_NEED_MARGIN, DEFAULT_LEVEL, DEFAULT_MINVERSION, DEFAULT_SIZE, isSupportPath2d, excavateModules, generatePath } from \"./utils\";\nvar QRCodeCanvas = /*#__PURE__*/React.forwardRef(function QRCodeCanvas(props, forwardedRef) {\n  var value = props.value,\n      _props$size = props.size,\n      size = _props$size === void 0 ? DEFAULT_SIZE : _props$size,\n      _props$level = props.level,\n      level = _props$level === void 0 ? DEFAULT_LEVEL : _props$level,\n      _props$bgColor = props.bgColor,\n      bgColor = _props$bgColor === void 0 ? DEFAULT_BACKGROUND_COLOR : _props$bgColor,\n      _props$fgColor = props.fgColor,\n      fgColor = _props$fgColor === void 0 ? DEFAULT_FRONT_COLOR : _props$fgColor,\n      _props$includeMargin = props.includeMargin,\n      includeMargin = _props$includeMargin === void 0 ? DEFAULT_NEED_MARGIN : _props$includeMargin,\n      _props$minVersion = props.minVersion,\n      minVersion = _props$minVersion === void 0 ? DEFAULT_MINVERSION : _props$minVersion,\n      marginSize = props.marginSize,\n      style = props.style,\n      imageSettings = props.imageSettings,\n      otherProps = _objectWithoutProperties(props, _excluded);\n\n  var imgSrc = imageSettings === null || imageSettings === void 0 ? void 0 : imageSettings.src;\n\n  var _canvas = useRef(null);\n\n  var _image = useRef(null);\n\n  var setCanvasRef = useCallback(function (node) {\n    _canvas.current = node;\n\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(node);\n    } else if (forwardedRef) {\n      forwardedRef.current = node;\n    }\n  }, [forwardedRef]);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      setIsImageLoaded = _useState2[1];\n\n  var _useQRCode = useQRCode({\n    value: value,\n    level: level,\n    minVersion: minVersion,\n    includeMargin: includeMargin,\n    marginSize: marginSize,\n    imageSettings: imageSettings,\n    size: size\n  }),\n      margin = _useQRCode.margin,\n      cells = _useQRCode.cells,\n      numCells = _useQRCode.numCells,\n      calculatedImageSettings = _useQRCode.calculatedImageSettings;\n\n  useEffect(function () {\n    if (_canvas.current != null) {\n      var canvas = _canvas.current;\n      var ctx = canvas.getContext('2d');\n\n      if (!ctx) {\n        return;\n      }\n\n      var cellsToDraw = cells;\n      var image = _image.current;\n      var haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cellsToDraw = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n\n      var pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      var scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n\n      if (isSupportPath2d) {\n        ctx.fill(new Path2D(generatePath(cellsToDraw, margin)));\n      } else {\n        cells.forEach(function (row, rdx) {\n          row.forEach(function (cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n\n      if (calculatedImageSettings) {\n        ctx.globalAlpha = calculatedImageSettings.opacity;\n      }\n\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  useEffect(function () {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n\n  var canvasStyle = _objectSpread({\n    height: size,\n    width: size\n  }, style);\n\n  var img = null;\n\n  if (imgSrc != null) {\n    img = /*#__PURE__*/React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: {\n        display: 'none'\n      },\n      onLoad: function onLoad() {\n        setIsImageLoaded(true);\n      },\n      ref: _image // when crossOrigin is not set, the image will be tainted\n      // and the canvas cannot be exported to an image\n      ,\n      crossOrigin: calculatedImageSettings === null || calculatedImageSettings === void 0 ? void 0 : calculatedImageSettings.crossOrigin\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"canvas\", _extends({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: setCanvasRef,\n    role: \"img\"\n  }, otherProps)), img);\n});\nQRCodeCanvas.displayName = 'QRCodeCanvas';\nexport { QRCodeCanvas };","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@rc-component/qrcode/es/QRCodeCanvas.js"],"names":["_extends","_objectSpread","_slicedToArray","_objectWithoutProperties","_excluded","React","useCallback","useEffect","useRef","useState","useQRCode","DEFAULT_BACKGROUND_COLOR","DEFAULT_FRONT_COLOR","DEFAULT_NEED_MARGIN","DEFAULT_LEVEL","DEFAULT_MINVERSION","DEFAULT_SIZE","isSupportPath2d","excavateModules","generatePath","QRCodeCanvas","forwardRef","props","forwardedRef","value","_props$size","size","_props$level","level","_props$bgColor","bgColor","_props$fgColor","fgColor","_props$includeMargin","includeMargin","_props$minVersion","minVersion","marginSize","style","imageSettings","otherProps","imgSrc","src","_canvas","_image","setCanvasRef","node","current","_useState","_useState2","setIsImageLoaded","_useQRCode","margin","cells","numCells","calculatedImageSettings","canvas","ctx","getContext","cellsToDraw","image","haveImageToRender","complete","naturalHeight","naturalWidth","excavation","pixelRatio","window","devicePixelRatio","height","width","scale","fillStyle","fillRect","fill","Path2D","forEach","row","rdx","cell","cdx","globalAlpha","opacity","drawImage","x","y","w","h","canvasStyle","img","createElement","key","display","onLoad","ref","crossOrigin","Fragment","role","displayName"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,IAAIC,SAAS,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,OAAlB,EAA2B,SAA3B,EAAsC,SAAtC,EAAiD,eAAjD,EAAkE,YAAlE,EAAgF,YAAhF,EAA8F,OAA9F,EAAuG,eAAvG,CAAhB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,MAAxC,EAAgDC,QAAhD,QAAgE,OAAhE;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,wBAAT,EAAmCC,mBAAnC,EAAwDC,mBAAxD,EAA6EC,aAA7E,EAA4FC,kBAA5F,EAAgHC,YAAhH,EAA8HC,eAA9H,EAA+IC,eAA/I,EAAgKC,YAAhK,QAAoL,SAApL;AACA,IAAIC,YAAY,GAAG,aAAaf,KAAK,CAACgB,UAAN,CAAiB,SAASD,YAAT,CAAsBE,KAAtB,EAA6BC,YAA7B,EAA2C;AAC1F,MAAIC,KAAK,GAAGF,KAAK,CAACE,KAAlB;AAAA,MACEC,WAAW,GAAGH,KAAK,CAACI,IADtB;AAAA,MAEEA,IAAI,GAAGD,WAAW,KAAK,KAAK,CAArB,GAAyBT,YAAzB,GAAwCS,WAFjD;AAAA,MAGEE,YAAY,GAAGL,KAAK,CAACM,KAHvB;AAAA,MAIEA,KAAK,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0Bb,aAA1B,GAA0Ca,YAJpD;AAAA,MAKEE,cAAc,GAAGP,KAAK,CAACQ,OALzB;AAAA,MAMEA,OAAO,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4BlB,wBAA5B,GAAuDkB,cANnE;AAAA,MAOEE,cAAc,GAAGT,KAAK,CAACU,OAPzB;AAAA,MAQEA,OAAO,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4BnB,mBAA5B,GAAkDmB,cAR9D;AAAA,MASEE,oBAAoB,GAAGX,KAAK,CAACY,aAT/B;AAAA,MAUEA,aAAa,GAAGD,oBAAoB,KAAK,KAAK,CAA9B,GAAkCpB,mBAAlC,GAAwDoB,oBAV1E;AAAA,MAWEE,iBAAiB,GAAGb,KAAK,CAACc,UAX5B;AAAA,MAYEA,UAAU,GAAGD,iBAAiB,KAAK,KAAK,CAA3B,GAA+BpB,kBAA/B,GAAoDoB,iBAZnE;AAAA,MAaEE,UAAU,GAAGf,KAAK,CAACe,UAbrB;AAAA,MAcEC,KAAK,GAAGhB,KAAK,CAACgB,KAdhB;AAAA,MAeEC,aAAa,GAAGjB,KAAK,CAACiB,aAfxB;AAAA,MAgBEC,UAAU,GAAGrC,wBAAwB,CAACmB,KAAD,EAAQlB,SAAR,CAhBvC;;AAiBA,MAAIqC,MAAM,GAAGF,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAACG,GAAzF;;AACA,MAAIC,OAAO,GAAGnC,MAAM,CAAC,IAAD,CAApB;;AACA,MAAIoC,MAAM,GAAGpC,MAAM,CAAC,IAAD,CAAnB;;AACA,MAAIqC,YAAY,GAAGvC,WAAW,CAAC,UAAUwC,IAAV,EAAgB;AAC7CH,IAAAA,OAAO,CAACI,OAAR,GAAkBD,IAAlB;;AACA,QAAI,OAAOvB,YAAP,KAAwB,UAA5B,EAAwC;AACtCA,MAAAA,YAAY,CAACuB,IAAD,CAAZ;AACD,KAFD,MAEO,IAAIvB,YAAJ,EAAkB;AACvBA,MAAAA,YAAY,CAACwB,OAAb,GAAuBD,IAAvB;AACD;AACF,GAP6B,EAO3B,CAACvB,YAAD,CAP2B,CAA9B;;AAQA,MAAIyB,SAAS,GAAGvC,QAAQ,CAAC,KAAD,CAAxB;AAAA,MACEwC,UAAU,GAAG/C,cAAc,CAAC8C,SAAD,EAAY,CAAZ,CAD7B;AAAA,MAEEE,gBAAgB,GAAGD,UAAU,CAAC,CAAD,CAF/B;;AAGA,MAAIE,UAAU,GAAGzC,SAAS,CAAC;AACvBc,IAAAA,KAAK,EAAEA,KADgB;AAEvBI,IAAAA,KAAK,EAAEA,KAFgB;AAGvBQ,IAAAA,UAAU,EAAEA,UAHW;AAIvBF,IAAAA,aAAa,EAAEA,aAJQ;AAKvBG,IAAAA,UAAU,EAAEA,UALW;AAMvBE,IAAAA,aAAa,EAAEA,aANQ;AAOvBb,IAAAA,IAAI,EAAEA;AAPiB,GAAD,CAA1B;AAAA,MASE0B,MAAM,GAAGD,UAAU,CAACC,MATtB;AAAA,MAUEC,KAAK,GAAGF,UAAU,CAACE,KAVrB;AAAA,MAWEC,QAAQ,GAAGH,UAAU,CAACG,QAXxB;AAAA,MAYEC,uBAAuB,GAAGJ,UAAU,CAACI,uBAZvC;;AAaAhD,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIoC,OAAO,CAACI,OAAR,IAAmB,IAAvB,EAA6B;AAC3B,UAAIS,MAAM,GAAGb,OAAO,CAACI,OAArB;AACA,UAAIU,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAV;;AACA,UAAI,CAACD,GAAL,EAAU;AACR;AACD;;AACD,UAAIE,WAAW,GAAGN,KAAlB;AACA,UAAIO,KAAK,GAAGhB,MAAM,CAACG,OAAnB;AACA,UAAIc,iBAAiB,GAAGN,uBAAuB,IAAI,IAA3B,IAAmCK,KAAK,KAAK,IAA7C,IAAqDA,KAAK,CAACE,QAA3D,IAAuEF,KAAK,CAACG,aAAN,KAAwB,CAA/F,IAAoGH,KAAK,CAACI,YAAN,KAAuB,CAAnJ;;AACA,UAAIH,iBAAJ,EAAuB;AACrB,YAAIN,uBAAuB,CAACU,UAAxB,IAAsC,IAA1C,EAAgD;AAC9CN,UAAAA,WAAW,GAAGzC,eAAe,CAACmC,KAAD,EAAQE,uBAAuB,CAACU,UAAhC,CAA7B;AACD;AACF;;AACD,UAAIC,UAAU,GAAGC,MAAM,CAACC,gBAAP,IAA2B,CAA5C;AACAZ,MAAAA,MAAM,CAACa,MAAP,GAAgBb,MAAM,CAACc,KAAP,GAAe5C,IAAI,GAAGwC,UAAtC;AACA,UAAIK,KAAK,GAAG7C,IAAI,GAAG4B,QAAP,GAAkBY,UAA9B;AACAT,MAAAA,GAAG,CAACc,KAAJ,CAAUA,KAAV,EAAiBA,KAAjB;AACAd,MAAAA,GAAG,CAACe,SAAJ,GAAgB1C,OAAhB;AACA2B,MAAAA,GAAG,CAACgB,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBnB,QAAnB,EAA6BA,QAA7B;AACAG,MAAAA,GAAG,CAACe,SAAJ,GAAgBxC,OAAhB;;AACA,UAAIf,eAAJ,EAAqB;AACnBwC,QAAAA,GAAG,CAACiB,IAAJ,CAAS,IAAIC,MAAJ,CAAWxD,YAAY,CAACwC,WAAD,EAAcP,MAAd,CAAvB,CAAT;AACD,OAFD,MAEO;AACLC,QAAAA,KAAK,CAACuB,OAAN,CAAc,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAChCD,UAAAA,GAAG,CAACD,OAAJ,CAAY,UAAUG,IAAV,EAAgBC,GAAhB,EAAqB;AAC/B,gBAAID,IAAJ,EAAU;AACRtB,cAAAA,GAAG,CAACgB,QAAJ,CAAaO,GAAG,GAAG5B,MAAnB,EAA2B0B,GAAG,GAAG1B,MAAjC,EAAyC,CAAzC,EAA4C,CAA5C;AACD;AACF,WAJD;AAKD,SAND;AAOD;;AACD,UAAIG,uBAAJ,EAA6B;AAC3BE,QAAAA,GAAG,CAACwB,WAAJ,GAAkB1B,uBAAuB,CAAC2B,OAA1C;AACD;;AACD,UAAIrB,iBAAJ,EAAuB;AACrBJ,QAAAA,GAAG,CAAC0B,SAAJ,CAAcvB,KAAd,EAAqBL,uBAAuB,CAAC6B,CAAxB,GAA4BhC,MAAjD,EAAyDG,uBAAuB,CAAC8B,CAAxB,GAA4BjC,MAArF,EAA6FG,uBAAuB,CAAC+B,CAArH,EAAwH/B,uBAAuB,CAACgC,CAAhJ;AACD;AACF;AACF,GAxCQ,CAAT;AAyCAhF,EAAAA,SAAS,CAAC,YAAY;AACpB2C,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAFQ,EAEN,CAACT,MAAD,CAFM,CAAT;;AAGA,MAAI+C,WAAW,GAAGvF,aAAa,CAAC;AAC9BoE,IAAAA,MAAM,EAAE3C,IADsB;AAE9B4C,IAAAA,KAAK,EAAE5C;AAFuB,GAAD,EAG5BY,KAH4B,CAA/B;;AAIA,MAAImD,GAAG,GAAG,IAAV;;AACA,MAAIhD,MAAM,IAAI,IAAd,EAAoB;AAClBgD,IAAAA,GAAG,GAAG,aAAapF,KAAK,CAACqF,aAAN,CAAoB,KAApB,EAA2B;AAC5ChD,MAAAA,GAAG,EAAED,MADuC;AAE5CkD,MAAAA,GAAG,EAAElD,MAFuC;AAG5CH,MAAAA,KAAK,EAAE;AACLsD,QAAAA,OAAO,EAAE;AADJ,OAHqC;AAM5CC,MAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB3C,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,OAR2C;AAS5C4C,MAAAA,GAAG,EAAElD,MATuC,CAU5C;AACA;AAX4C;AAa5CmD,MAAAA,WAAW,EAAExC,uBAAuB,KAAK,IAA5B,IAAoCA,uBAAuB,KAAK,KAAK,CAArE,GAAyE,KAAK,CAA9E,GAAkFA,uBAAuB,CAACwC;AAb3E,KAA3B,CAAnB;AAeD;;AACD,SAAO,aAAa1F,KAAK,CAACqF,aAAN,CAAoBrF,KAAK,CAAC2F,QAA1B,EAAoC,IAApC,EAA0C,aAAa3F,KAAK,CAACqF,aAAN,CAAoB,QAApB,EAA8B1F,QAAQ,CAAC;AAChHsC,IAAAA,KAAK,EAAEkD,WADyG;AAEhHnB,IAAAA,MAAM,EAAE3C,IAFwG;AAGhH4C,IAAAA,KAAK,EAAE5C,IAHyG;AAIhHoE,IAAAA,GAAG,EAAEjD,YAJ2G;AAKhHoD,IAAAA,IAAI,EAAE;AAL0G,GAAD,EAM9GzD,UAN8G,CAAtC,CAAvD,EAMHiD,GANG,CAApB;AAOD,CAtH+B,CAAhC;AAuHArE,YAAY,CAAC8E,WAAb,GAA2B,cAA3B;AACA,SAAS9E,YAAT","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"value\", \"size\", \"level\", \"bgColor\", \"fgColor\", \"includeMargin\", \"minVersion\", \"marginSize\", \"style\", \"imageSettings\"];\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useQRCode } from \"./hooks/useQRCode\";\nimport { DEFAULT_BACKGROUND_COLOR, DEFAULT_FRONT_COLOR, DEFAULT_NEED_MARGIN, DEFAULT_LEVEL, DEFAULT_MINVERSION, DEFAULT_SIZE, isSupportPath2d, excavateModules, generatePath } from \"./utils\";\nvar QRCodeCanvas = /*#__PURE__*/React.forwardRef(function QRCodeCanvas(props, forwardedRef) {\n  var value = props.value,\n    _props$size = props.size,\n    size = _props$size === void 0 ? DEFAULT_SIZE : _props$size,\n    _props$level = props.level,\n    level = _props$level === void 0 ? DEFAULT_LEVEL : _props$level,\n    _props$bgColor = props.bgColor,\n    bgColor = _props$bgColor === void 0 ? DEFAULT_BACKGROUND_COLOR : _props$bgColor,\n    _props$fgColor = props.fgColor,\n    fgColor = _props$fgColor === void 0 ? DEFAULT_FRONT_COLOR : _props$fgColor,\n    _props$includeMargin = props.includeMargin,\n    includeMargin = _props$includeMargin === void 0 ? DEFAULT_NEED_MARGIN : _props$includeMargin,\n    _props$minVersion = props.minVersion,\n    minVersion = _props$minVersion === void 0 ? DEFAULT_MINVERSION : _props$minVersion,\n    marginSize = props.marginSize,\n    style = props.style,\n    imageSettings = props.imageSettings,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var imgSrc = imageSettings === null || imageSettings === void 0 ? void 0 : imageSettings.src;\n  var _canvas = useRef(null);\n  var _image = useRef(null);\n  var setCanvasRef = useCallback(function (node) {\n    _canvas.current = node;\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(node);\n    } else if (forwardedRef) {\n      forwardedRef.current = node;\n    }\n  }, [forwardedRef]);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    setIsImageLoaded = _useState2[1];\n  var _useQRCode = useQRCode({\n      value: value,\n      level: level,\n      minVersion: minVersion,\n      includeMargin: includeMargin,\n      marginSize: marginSize,\n      imageSettings: imageSettings,\n      size: size\n    }),\n    margin = _useQRCode.margin,\n    cells = _useQRCode.cells,\n    numCells = _useQRCode.numCells,\n    calculatedImageSettings = _useQRCode.calculatedImageSettings;\n  useEffect(function () {\n    if (_canvas.current != null) {\n      var canvas = _canvas.current;\n      var ctx = canvas.getContext('2d');\n      if (!ctx) {\n        return;\n      }\n      var cellsToDraw = cells;\n      var image = _image.current;\n      var haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cellsToDraw = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      var pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      var scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (isSupportPath2d) {\n        ctx.fill(new Path2D(generatePath(cellsToDraw, margin)));\n      } else {\n        cells.forEach(function (row, rdx) {\n          row.forEach(function (cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (calculatedImageSettings) {\n        ctx.globalAlpha = calculatedImageSettings.opacity;\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  useEffect(function () {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  var canvasStyle = _objectSpread({\n    height: size,\n    width: size\n  }, style);\n  var img = null;\n  if (imgSrc != null) {\n    img = /*#__PURE__*/React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: {\n        display: 'none'\n      },\n      onLoad: function onLoad() {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n      // when crossOrigin is not set, the image will be tainted\n      // and the canvas cannot be exported to an image\n      ,\n      crossOrigin: calculatedImageSettings === null || calculatedImageSettings === void 0 ? void 0 : calculatedImageSettings.crossOrigin\n    });\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"canvas\", _extends({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: setCanvasRef,\n    role: \"img\"\n  }, otherProps)), img);\n});\nQRCodeCanvas.displayName = 'QRCodeCanvas';\nexport { QRCodeCanvas };"]},"metadata":{},"sourceType":"module"}