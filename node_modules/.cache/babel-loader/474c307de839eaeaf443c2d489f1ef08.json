{"ast":null,"code":"export const prepareComponentToken = token => {\n  const {\n    fontSize,\n    lineHeight,\n    lineWidth,\n    controlHeight,\n    controlHeightSM,\n    controlHeightLG,\n    paddingXXS,\n    controlPaddingHorizontal,\n    zIndexPopupBase,\n    colorText,\n    fontWeightStrong,\n    controlItemBgActive,\n    controlItemBgHover,\n    colorBgContainer,\n    colorFillSecondary,\n    colorBgContainerDisabled,\n    colorTextDisabled,\n    colorPrimaryHover,\n    colorPrimary,\n    controlOutline\n  } = token; // Item height default use `controlHeight - 2 * paddingXXS`,\n  // but some case `paddingXXS=0`.\n  // Let's fallback it.\n\n  const dblPaddingXXS = paddingXXS * 2;\n  const dblLineWidth = lineWidth * 2;\n  const multipleItemHeight = Math.min(controlHeight - dblPaddingXXS, controlHeight - dblLineWidth);\n  const multipleItemHeightSM = Math.min(controlHeightSM - dblPaddingXXS, controlHeightSM - dblLineWidth);\n  const multipleItemHeightLG = Math.min(controlHeightLG - dblPaddingXXS, controlHeightLG - dblLineWidth); // FIXED_ITEM_MARGIN is a hardcode calculation since calc not support rounding\n\n  const INTERNAL_FIXED_ITEM_MARGIN = Math.floor(paddingXXS / 2);\n  return {\n    INTERNAL_FIXED_ITEM_MARGIN,\n    zIndexPopup: zIndexPopupBase + 50,\n    optionSelectedColor: colorText,\n    optionSelectedFontWeight: fontWeightStrong,\n    optionSelectedBg: controlItemBgActive,\n    optionActiveBg: controlItemBgHover,\n    optionPadding: `${(controlHeight - fontSize * lineHeight) / 2}px ${controlPaddingHorizontal}px`,\n    optionFontSize: fontSize,\n    optionLineHeight: lineHeight,\n    optionHeight: controlHeight,\n    selectorBg: colorBgContainer,\n    clearBg: colorBgContainer,\n    singleItemHeightLG: controlHeightLG,\n    multipleItemBg: colorFillSecondary,\n    multipleItemBorderColor: 'transparent',\n    multipleItemHeight,\n    multipleItemHeightSM,\n    multipleItemHeightLG,\n    multipleSelectorBgDisabled: colorBgContainerDisabled,\n    multipleItemColorDisabled: colorTextDisabled,\n    multipleItemBorderColorDisabled: 'transparent',\n    showArrowPaddingInlineEnd: Math.ceil(token.fontSize * 1.25),\n    hoverBorderColor: colorPrimaryHover,\n    activeBorderColor: colorPrimary,\n    activeOutlineColor: controlOutline,\n    selectAffixPadding: paddingXXS\n  };\n};","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/select/style/token.js"],"names":["prepareComponentToken","token","fontSize","lineHeight","lineWidth","controlHeight","controlHeightSM","controlHeightLG","paddingXXS","controlPaddingHorizontal","zIndexPopupBase","colorText","fontWeightStrong","controlItemBgActive","controlItemBgHover","colorBgContainer","colorFillSecondary","colorBgContainerDisabled","colorTextDisabled","colorPrimaryHover","colorPrimary","controlOutline","dblPaddingXXS","dblLineWidth","multipleItemHeight","Math","min","multipleItemHeightSM","multipleItemHeightLG","INTERNAL_FIXED_ITEM_MARGIN","floor","zIndexPopup","optionSelectedColor","optionSelectedFontWeight","optionSelectedBg","optionActiveBg","optionPadding","optionFontSize","optionLineHeight","optionHeight","selectorBg","clearBg","singleItemHeightLG","multipleItemBg","multipleItemBorderColor","multipleSelectorBgDisabled","multipleItemColorDisabled","multipleItemBorderColorDisabled","showArrowPaddingInlineEnd","ceil","hoverBorderColor","activeBorderColor","activeOutlineColor","selectAffixPadding"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAGC,KAAK,IAAI;AAC5C,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,eALI;AAMJC,IAAAA,eANI;AAOJC,IAAAA,UAPI;AAQJC,IAAAA,wBARI;AASJC,IAAAA,eATI;AAUJC,IAAAA,SAVI;AAWJC,IAAAA,gBAXI;AAYJC,IAAAA,mBAZI;AAaJC,IAAAA,kBAbI;AAcJC,IAAAA,gBAdI;AAeJC,IAAAA,kBAfI;AAgBJC,IAAAA,wBAhBI;AAiBJC,IAAAA,iBAjBI;AAkBJC,IAAAA,iBAlBI;AAmBJC,IAAAA,YAnBI;AAoBJC,IAAAA;AApBI,MAqBFpB,KArBJ,CAD4C,CAuB5C;AACA;AACA;;AACA,QAAMqB,aAAa,GAAGd,UAAU,GAAG,CAAnC;AACA,QAAMe,YAAY,GAAGnB,SAAS,GAAG,CAAjC;AACA,QAAMoB,kBAAkB,GAAGC,IAAI,CAACC,GAAL,CAASrB,aAAa,GAAGiB,aAAzB,EAAwCjB,aAAa,GAAGkB,YAAxD,CAA3B;AACA,QAAMI,oBAAoB,GAAGF,IAAI,CAACC,GAAL,CAASpB,eAAe,GAAGgB,aAA3B,EAA0ChB,eAAe,GAAGiB,YAA5D,CAA7B;AACA,QAAMK,oBAAoB,GAAGH,IAAI,CAACC,GAAL,CAASnB,eAAe,GAAGe,aAA3B,EAA0Cf,eAAe,GAAGgB,YAA5D,CAA7B,CA9B4C,CA+B5C;;AACA,QAAMM,0BAA0B,GAAGJ,IAAI,CAACK,KAAL,CAAWtB,UAAU,GAAG,CAAxB,CAAnC;AACA,SAAO;AACLqB,IAAAA,0BADK;AAELE,IAAAA,WAAW,EAAErB,eAAe,GAAG,EAF1B;AAGLsB,IAAAA,mBAAmB,EAAErB,SAHhB;AAILsB,IAAAA,wBAAwB,EAAErB,gBAJrB;AAKLsB,IAAAA,gBAAgB,EAAErB,mBALb;AAMLsB,IAAAA,cAAc,EAAErB,kBANX;AAOLsB,IAAAA,aAAa,EAAG,GAAE,CAAC/B,aAAa,GAAGH,QAAQ,GAAGC,UAA5B,IAA0C,CAAE,MAAKM,wBAAyB,IAPvF;AAQL4B,IAAAA,cAAc,EAAEnC,QARX;AASLoC,IAAAA,gBAAgB,EAAEnC,UATb;AAULoC,IAAAA,YAAY,EAAElC,aAVT;AAWLmC,IAAAA,UAAU,EAAEzB,gBAXP;AAYL0B,IAAAA,OAAO,EAAE1B,gBAZJ;AAaL2B,IAAAA,kBAAkB,EAAEnC,eAbf;AAcLoC,IAAAA,cAAc,EAAE3B,kBAdX;AAeL4B,IAAAA,uBAAuB,EAAE,aAfpB;AAgBLpB,IAAAA,kBAhBK;AAiBLG,IAAAA,oBAjBK;AAkBLC,IAAAA,oBAlBK;AAmBLiB,IAAAA,0BAA0B,EAAE5B,wBAnBvB;AAoBL6B,IAAAA,yBAAyB,EAAE5B,iBApBtB;AAqBL6B,IAAAA,+BAA+B,EAAE,aArB5B;AAsBLC,IAAAA,yBAAyB,EAAEvB,IAAI,CAACwB,IAAL,CAAUhD,KAAK,CAACC,QAAN,GAAiB,IAA3B,CAtBtB;AAuBLgD,IAAAA,gBAAgB,EAAE/B,iBAvBb;AAwBLgC,IAAAA,iBAAiB,EAAE/B,YAxBd;AAyBLgC,IAAAA,kBAAkB,EAAE/B,cAzBf;AA0BLgC,IAAAA,kBAAkB,EAAE7C;AA1Bf,GAAP;AA4BD,CA7DM","sourcesContent":["export const prepareComponentToken = token => {\n  const {\n    fontSize,\n    lineHeight,\n    lineWidth,\n    controlHeight,\n    controlHeightSM,\n    controlHeightLG,\n    paddingXXS,\n    controlPaddingHorizontal,\n    zIndexPopupBase,\n    colorText,\n    fontWeightStrong,\n    controlItemBgActive,\n    controlItemBgHover,\n    colorBgContainer,\n    colorFillSecondary,\n    colorBgContainerDisabled,\n    colorTextDisabled,\n    colorPrimaryHover,\n    colorPrimary,\n    controlOutline\n  } = token;\n  // Item height default use `controlHeight - 2 * paddingXXS`,\n  // but some case `paddingXXS=0`.\n  // Let's fallback it.\n  const dblPaddingXXS = paddingXXS * 2;\n  const dblLineWidth = lineWidth * 2;\n  const multipleItemHeight = Math.min(controlHeight - dblPaddingXXS, controlHeight - dblLineWidth);\n  const multipleItemHeightSM = Math.min(controlHeightSM - dblPaddingXXS, controlHeightSM - dblLineWidth);\n  const multipleItemHeightLG = Math.min(controlHeightLG - dblPaddingXXS, controlHeightLG - dblLineWidth);\n  // FIXED_ITEM_MARGIN is a hardcode calculation since calc not support rounding\n  const INTERNAL_FIXED_ITEM_MARGIN = Math.floor(paddingXXS / 2);\n  return {\n    INTERNAL_FIXED_ITEM_MARGIN,\n    zIndexPopup: zIndexPopupBase + 50,\n    optionSelectedColor: colorText,\n    optionSelectedFontWeight: fontWeightStrong,\n    optionSelectedBg: controlItemBgActive,\n    optionActiveBg: controlItemBgHover,\n    optionPadding: `${(controlHeight - fontSize * lineHeight) / 2}px ${controlPaddingHorizontal}px`,\n    optionFontSize: fontSize,\n    optionLineHeight: lineHeight,\n    optionHeight: controlHeight,\n    selectorBg: colorBgContainer,\n    clearBg: colorBgContainer,\n    singleItemHeightLG: controlHeightLG,\n    multipleItemBg: colorFillSecondary,\n    multipleItemBorderColor: 'transparent',\n    multipleItemHeight,\n    multipleItemHeightSM,\n    multipleItemHeightLG,\n    multipleSelectorBgDisabled: colorBgContainerDisabled,\n    multipleItemColorDisabled: colorTextDisabled,\n    multipleItemBorderColorDisabled: 'transparent',\n    showArrowPaddingInlineEnd: Math.ceil(token.fontSize * 1.25),\n    hoverBorderColor: colorPrimaryHover,\n    activeBorderColor: colorPrimary,\n    activeOutlineColor: controlOutline,\n    selectAffixPadding: paddingXXS\n  };\n};"]},"metadata":{},"sourceType":"module"}