{"ast":null,"code":"\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useRef, useState } from 'react';\nimport EyeInvisibleOutlined from \"@ant-design/icons/es/icons/EyeInvisibleOutlined\";\nimport EyeOutlined from \"@ant-design/icons/es/icons/EyeOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport { ConfigContext } from '../config-provider';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport useRemovePasswordTimeout from './hooks/useRemovePasswordTimeout';\nimport Input from './Input';\n\nconst defaultIconRender = visible => visible ? /*#__PURE__*/React.createElement(EyeOutlined, null) : /*#__PURE__*/React.createElement(EyeInvisibleOutlined, null);\n\nconst actionMap = {\n  click: 'onClick',\n  hover: 'onMouseOver'\n};\nconst Password = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    disabled: customDisabled,\n    action = 'click',\n    visibilityToggle = true,\n    iconRender = defaultIconRender\n  } = props; // ===================== Disabled =====================\n\n  const disabled = React.useContext(DisabledContext);\n  const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  const visibilityControlled = typeof visibilityToggle === 'object' && visibilityToggle.visible !== undefined;\n  const [visible, setVisible] = useState(() => visibilityControlled ? visibilityToggle.visible : false);\n  const inputRef = useRef(null);\n  React.useEffect(() => {\n    if (visibilityControlled) {\n      setVisible(visibilityToggle.visible);\n    }\n  }, [visibilityControlled, visibilityToggle]); // Remove Password value\n\n  const removePasswordTimeout = useRemovePasswordTimeout(inputRef);\n\n  const onVisibleChange = () => {\n    var _a;\n\n    if (mergedDisabled) {\n      return;\n    }\n\n    if (visible) {\n      removePasswordTimeout();\n    }\n\n    const nextVisible = !visible;\n    setVisible(nextVisible);\n\n    if (typeof visibilityToggle === 'object') {\n      (_a = visibilityToggle.onVisibleChange) === null || _a === void 0 ? void 0 : _a.call(visibilityToggle, nextVisible);\n    }\n  };\n\n  const getIcon = prefixCls => {\n    const iconTrigger = actionMap[action] || '';\n    const icon = iconRender(visible);\n    const iconProps = {\n      [iconTrigger]: onVisibleChange,\n      className: `${prefixCls}-icon`,\n      key: 'passwordIcon',\n      onMouseDown: e => {\n        // Prevent focused state lost\n        // https://github.com/ant-design/ant-design/issues/15173\n        e.preventDefault();\n      },\n      onMouseUp: e => {\n        // Prevent caret position change\n        // https://github.com/ant-design/ant-design/issues/23524\n        e.preventDefault();\n      }\n    };\n    return /*#__PURE__*/React.cloneElement( /*#__PURE__*/React.isValidElement(icon) ? icon : /*#__PURE__*/React.createElement(\"span\", null, icon), iconProps);\n  };\n\n  const {\n    className,\n    prefixCls: customizePrefixCls,\n    inputPrefixCls: customizeInputPrefixCls,\n    size\n  } = props,\n        restProps = __rest(props, [\"className\", \"prefixCls\", \"inputPrefixCls\", \"size\"]);\n\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const inputPrefixCls = getPrefixCls('input', customizeInputPrefixCls);\n  const prefixCls = getPrefixCls('input-password', customizePrefixCls);\n  const suffixIcon = visibilityToggle && getIcon(prefixCls);\n  const inputClassName = classNames(prefixCls, className, {\n    [`${prefixCls}-${size}`]: !!size\n  });\n  const omittedProps = Object.assign(Object.assign({}, omit(restProps, ['suffix', 'iconRender', 'visibilityToggle'])), {\n    type: visible ? 'text' : 'password',\n    className: inputClassName,\n    prefixCls: inputPrefixCls,\n    suffix: suffixIcon\n  });\n\n  if (size) {\n    omittedProps.size = size;\n  }\n\n  return /*#__PURE__*/React.createElement(Input, Object.assign({\n    ref: composeRef(ref, inputRef)\n  }, omittedProps));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Password.displayName = 'Input.Password';\n}\n\nexport default Password;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/input/Password.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","useRef","useState","EyeInvisibleOutlined","EyeOutlined","classNames","omit","composeRef","ConfigContext","DisabledContext","useRemovePasswordTimeout","Input","defaultIconRender","visible","createElement","actionMap","click","hover","Password","forwardRef","props","ref","disabled","customDisabled","action","visibilityToggle","iconRender","useContext","mergedDisabled","visibilityControlled","undefined","setVisible","inputRef","useEffect","removePasswordTimeout","onVisibleChange","_a","nextVisible","getIcon","prefixCls","iconTrigger","icon","iconProps","className","key","onMouseDown","preventDefault","onMouseUp","cloneElement","isValidElement","customizePrefixCls","inputPrefixCls","customizeInputPrefixCls","size","restProps","getPrefixCls","suffixIcon","inputClassName","omittedProps","assign","type","suffix","process","env","NODE_ENV","displayName"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAG,QAAQ,KAAKA,MAAb,IAAuB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClD,MAAIC,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIC,CAAT,IAAcH,CAAd,EAAiB,IAAII,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,CAArC,EAAwCG,CAAxC,KAA8CF,CAAC,CAACO,OAAF,CAAUL,CAAV,IAAe,CAAjE,EAAoED,CAAC,CAACC,CAAD,CAAD,GAAOH,CAAC,CAACG,CAAD,CAAR;;AACrF,MAAIH,CAAC,IAAI,IAAL,IAAa,OAAOI,MAAM,CAACK,qBAAd,KAAwC,UAAzD,EAAqE,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWP,CAAC,GAAGC,MAAM,CAACK,qBAAP,CAA6BT,CAA7B,CAApB,EAAqDU,CAAC,GAAGP,CAAC,CAACQ,MAA3D,EAAmED,CAAC,EAApE,EAAwE;AAC3I,QAAIT,CAAC,CAACO,OAAF,CAAUL,CAAC,CAACO,CAAD,CAAX,IAAkB,CAAlB,IAAuBN,MAAM,CAACC,SAAP,CAAiBO,oBAAjB,CAAsCL,IAAtC,CAA2CP,CAA3C,EAA8CG,CAAC,CAACO,CAAD,CAA/C,CAA3B,EAAgFR,CAAC,CAACC,CAAC,CAACO,CAAD,CAAF,CAAD,GAAUV,CAAC,CAACG,CAAC,CAACO,CAAD,CAAF,CAAX;AACjF;AACD,SAAOR,CAAP;AACD,CAPD;;AAQA,OAAO,KAAKW,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,oBAAP,MAAiC,iDAAjC;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,wBAAP,MAAqC,kCAArC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,MAAMC,iBAAiB,GAAGC,OAAO,IAAIA,OAAO,GAAG,aAAab,KAAK,CAACc,aAAN,CAAoBV,WAApB,EAAiC,IAAjC,CAAhB,GAAyD,aAAaJ,KAAK,CAACc,aAAN,CAAoBX,oBAApB,EAA0C,IAA1C,CAAlH;;AACA,MAAMY,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,SADS;AAEhBC,EAAAA,KAAK,EAAE;AAFS,CAAlB;AAIA,MAAMC,QAAQ,GAAG,aAAalB,KAAK,CAACmB,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC7D,QAAM;AACJC,IAAAA,QAAQ,EAAEC,cADN;AAEJC,IAAAA,MAAM,GAAG,OAFL;AAGJC,IAAAA,gBAAgB,GAAG,IAHf;AAIJC,IAAAA,UAAU,GAAGd;AAJT,MAKFQ,KALJ,CAD6D,CAO7D;;AACA,QAAME,QAAQ,GAAGtB,KAAK,CAAC2B,UAAN,CAAiBlB,eAAjB,CAAjB;AACA,QAAMmB,cAAc,GAAGL,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuDA,cAAvD,GAAwED,QAA/F;AACA,QAAMO,oBAAoB,GAAG,OAAOJ,gBAAP,KAA4B,QAA5B,IAAwCA,gBAAgB,CAACZ,OAAjB,KAA6BiB,SAAlG;AACA,QAAM,CAACjB,OAAD,EAAUkB,UAAV,IAAwB7B,QAAQ,CAAC,MAAM2B,oBAAoB,GAAGJ,gBAAgB,CAACZ,OAApB,GAA8B,KAAzD,CAAtC;AACA,QAAMmB,QAAQ,GAAG/B,MAAM,CAAC,IAAD,CAAvB;AACAD,EAAAA,KAAK,CAACiC,SAAN,CAAgB,MAAM;AACpB,QAAIJ,oBAAJ,EAA0B;AACxBE,MAAAA,UAAU,CAACN,gBAAgB,CAACZ,OAAlB,CAAV;AACD;AACF,GAJD,EAIG,CAACgB,oBAAD,EAAuBJ,gBAAvB,CAJH,EAb6D,CAkB7D;;AACA,QAAMS,qBAAqB,GAAGxB,wBAAwB,CAACsB,QAAD,CAAtD;;AACA,QAAMG,eAAe,GAAG,MAAM;AAC5B,QAAIC,EAAJ;;AACA,QAAIR,cAAJ,EAAoB;AAClB;AACD;;AACD,QAAIf,OAAJ,EAAa;AACXqB,MAAAA,qBAAqB;AACtB;;AACD,UAAMG,WAAW,GAAG,CAACxB,OAArB;AACAkB,IAAAA,UAAU,CAACM,WAAD,CAAV;;AACA,QAAI,OAAOZ,gBAAP,KAA4B,QAAhC,EAA0C;AACxC,OAACW,EAAE,GAAGX,gBAAgB,CAACU,eAAvB,MAA4C,IAA5C,IAAoDC,EAAE,KAAK,KAAK,CAAhE,GAAoE,KAAK,CAAzE,GAA6EA,EAAE,CAAC1C,IAAH,CAAQ+B,gBAAR,EAA0BY,WAA1B,CAA7E;AACD;AACF,GAbD;;AAcA,QAAMC,OAAO,GAAGC,SAAS,IAAI;AAC3B,UAAMC,WAAW,GAAGzB,SAAS,CAACS,MAAD,CAAT,IAAqB,EAAzC;AACA,UAAMiB,IAAI,GAAGf,UAAU,CAACb,OAAD,CAAvB;AACA,UAAM6B,SAAS,GAAG;AAChB,OAACF,WAAD,GAAeL,eADC;AAEhBQ,MAAAA,SAAS,EAAG,GAAEJ,SAAU,OAFR;AAGhBK,MAAAA,GAAG,EAAE,cAHW;AAIhBC,MAAAA,WAAW,EAAEzD,CAAC,IAAI;AAChB;AACA;AACAA,QAAAA,CAAC,CAAC0D,cAAF;AACD,OARe;AAShBC,MAAAA,SAAS,EAAE3D,CAAC,IAAI;AACd;AACA;AACAA,QAAAA,CAAC,CAAC0D,cAAF;AACD;AAbe,KAAlB;AAeA,WAAO,aAAa9C,KAAK,CAACgD,YAAN,EAAmB,aAAahD,KAAK,CAACiD,cAAN,CAAqBR,IAArB,IAA6BA,IAA7B,GAAoC,aAAazC,KAAK,CAACc,aAAN,CAAoB,MAApB,EAA4B,IAA5B,EAAkC2B,IAAlC,CAAjF,EAA0HC,SAA1H,CAApB;AACD,GAnBD;;AAoBA,QAAM;AACFC,IAAAA,SADE;AAEFJ,IAAAA,SAAS,EAAEW,kBAFT;AAGFC,IAAAA,cAAc,EAAEC,uBAHd;AAIFC,IAAAA;AAJE,MAKAjC,KALN;AAAA,QAMEkC,SAAS,GAAGpE,MAAM,CAACkC,KAAD,EAAQ,CAAC,WAAD,EAAc,WAAd,EAA2B,gBAA3B,EAA6C,MAA7C,CAAR,CANpB;;AAOA,QAAM;AACJmC,IAAAA;AADI,MAEFvD,KAAK,CAAC2B,UAAN,CAAiBnB,aAAjB,CAFJ;AAGA,QAAM2C,cAAc,GAAGI,YAAY,CAAC,OAAD,EAAUH,uBAAV,CAAnC;AACA,QAAMb,SAAS,GAAGgB,YAAY,CAAC,gBAAD,EAAmBL,kBAAnB,CAA9B;AACA,QAAMM,UAAU,GAAG/B,gBAAgB,IAAIa,OAAO,CAACC,SAAD,CAA9C;AACA,QAAMkB,cAAc,GAAGpD,UAAU,CAACkC,SAAD,EAAYI,SAAZ,EAAuB;AACtD,KAAE,GAAEJ,SAAU,IAAGc,IAAK,EAAtB,GAA0B,CAAC,CAACA;AAD0B,GAAvB,CAAjC;AAGA,QAAMK,YAAY,GAAGnE,MAAM,CAACoE,MAAP,CAAcpE,MAAM,CAACoE,MAAP,CAAc,EAAd,EAAkBrD,IAAI,CAACgD,SAAD,EAAY,CAAC,QAAD,EAAW,YAAX,EAAyB,kBAAzB,CAAZ,CAAtB,CAAd,EAAgG;AACnHM,IAAAA,IAAI,EAAE/C,OAAO,GAAG,MAAH,GAAY,UAD0F;AAEnH8B,IAAAA,SAAS,EAAEc,cAFwG;AAGnHlB,IAAAA,SAAS,EAAEY,cAHwG;AAInHU,IAAAA,MAAM,EAAEL;AAJ2G,GAAhG,CAArB;;AAMA,MAAIH,IAAJ,EAAU;AACRK,IAAAA,YAAY,CAACL,IAAb,GAAoBA,IAApB;AACD;;AACD,SAAO,aAAarD,KAAK,CAACc,aAAN,CAAoBH,KAApB,EAA2BpB,MAAM,CAACoE,MAAP,CAAc;AAC3DtC,IAAAA,GAAG,EAAEd,UAAU,CAACc,GAAD,EAAMW,QAAN;AAD4C,GAAd,EAE5C0B,YAF4C,CAA3B,CAApB;AAGD,CAlF6B,CAA9B;;AAmFA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC9C,EAAAA,QAAQ,CAAC+C,WAAT,GAAuB,gBAAvB;AACD;;AACD,eAAe/C,QAAf","sourcesContent":["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useRef, useState } from 'react';\nimport EyeInvisibleOutlined from \"@ant-design/icons/es/icons/EyeInvisibleOutlined\";\nimport EyeOutlined from \"@ant-design/icons/es/icons/EyeOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport { ConfigContext } from '../config-provider';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport useRemovePasswordTimeout from './hooks/useRemovePasswordTimeout';\nimport Input from './Input';\nconst defaultIconRender = visible => visible ? /*#__PURE__*/React.createElement(EyeOutlined, null) : /*#__PURE__*/React.createElement(EyeInvisibleOutlined, null);\nconst actionMap = {\n  click: 'onClick',\n  hover: 'onMouseOver'\n};\nconst Password = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    disabled: customDisabled,\n    action = 'click',\n    visibilityToggle = true,\n    iconRender = defaultIconRender\n  } = props;\n  // ===================== Disabled =====================\n  const disabled = React.useContext(DisabledContext);\n  const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  const visibilityControlled = typeof visibilityToggle === 'object' && visibilityToggle.visible !== undefined;\n  const [visible, setVisible] = useState(() => visibilityControlled ? visibilityToggle.visible : false);\n  const inputRef = useRef(null);\n  React.useEffect(() => {\n    if (visibilityControlled) {\n      setVisible(visibilityToggle.visible);\n    }\n  }, [visibilityControlled, visibilityToggle]);\n  // Remove Password value\n  const removePasswordTimeout = useRemovePasswordTimeout(inputRef);\n  const onVisibleChange = () => {\n    var _a;\n    if (mergedDisabled) {\n      return;\n    }\n    if (visible) {\n      removePasswordTimeout();\n    }\n    const nextVisible = !visible;\n    setVisible(nextVisible);\n    if (typeof visibilityToggle === 'object') {\n      (_a = visibilityToggle.onVisibleChange) === null || _a === void 0 ? void 0 : _a.call(visibilityToggle, nextVisible);\n    }\n  };\n  const getIcon = prefixCls => {\n    const iconTrigger = actionMap[action] || '';\n    const icon = iconRender(visible);\n    const iconProps = {\n      [iconTrigger]: onVisibleChange,\n      className: `${prefixCls}-icon`,\n      key: 'passwordIcon',\n      onMouseDown: e => {\n        // Prevent focused state lost\n        // https://github.com/ant-design/ant-design/issues/15173\n        e.preventDefault();\n      },\n      onMouseUp: e => {\n        // Prevent caret position change\n        // https://github.com/ant-design/ant-design/issues/23524\n        e.preventDefault();\n      }\n    };\n    return /*#__PURE__*/React.cloneElement(/*#__PURE__*/React.isValidElement(icon) ? icon : /*#__PURE__*/React.createElement(\"span\", null, icon), iconProps);\n  };\n  const {\n      className,\n      prefixCls: customizePrefixCls,\n      inputPrefixCls: customizeInputPrefixCls,\n      size\n    } = props,\n    restProps = __rest(props, [\"className\", \"prefixCls\", \"inputPrefixCls\", \"size\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const inputPrefixCls = getPrefixCls('input', customizeInputPrefixCls);\n  const prefixCls = getPrefixCls('input-password', customizePrefixCls);\n  const suffixIcon = visibilityToggle && getIcon(prefixCls);\n  const inputClassName = classNames(prefixCls, className, {\n    [`${prefixCls}-${size}`]: !!size\n  });\n  const omittedProps = Object.assign(Object.assign({}, omit(restProps, ['suffix', 'iconRender', 'visibilityToggle'])), {\n    type: visible ? 'text' : 'password',\n    className: inputClassName,\n    prefixCls: inputPrefixCls,\n    suffix: suffixIcon\n  });\n  if (size) {\n    omittedProps.size = size;\n  }\n  return /*#__PURE__*/React.createElement(Input, Object.assign({\n    ref: composeRef(ref, inputRef)\n  }, omittedProps));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Password.displayName = 'Input.Password';\n}\nexport default Password;"]},"metadata":{},"sourceType":"module"}