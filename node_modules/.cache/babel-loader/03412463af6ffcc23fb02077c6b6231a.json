{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useMergedState } from 'rc-util';\nimport { useMemo } from 'react';\nimport { generateColor } from \"../util\";\n\nvar useColorState = function useColorState(defaultValue, value) {\n  var _useMergedState = useMergedState(defaultValue, {\n    value: value\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedValue = _useMergedState2[0],\n      setValue = _useMergedState2[1];\n\n  var color = useMemo(function () {\n    return generateColor(mergedValue);\n  }, [mergedValue]);\n  return [color, setValue];\n};\n\nexport default useColorState;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@rc-component/color-picker/es/hooks/useColorState.js"],"names":["_slicedToArray","useMergedState","useMemo","generateColor","useColorState","defaultValue","value","_useMergedState","_useMergedState2","mergedValue","setValue","color"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,aAAT,QAA8B,SAA9B;;AACA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,YAAvB,EAAqCC,KAArC,EAA4C;AAC9D,MAAIC,eAAe,GAAGN,cAAc,CAACI,YAAD,EAAe;AAC/CC,IAAAA,KAAK,EAAEA;AADwC,GAAf,CAApC;AAAA,MAGEE,gBAAgB,GAAGR,cAAc,CAACO,eAAD,EAAkB,CAAlB,CAHnC;AAAA,MAIEE,WAAW,GAAGD,gBAAgB,CAAC,CAAD,CAJhC;AAAA,MAKEE,QAAQ,GAAGF,gBAAgB,CAAC,CAAD,CAL7B;;AAMA,MAAIG,KAAK,GAAGT,OAAO,CAAC,YAAY;AAC9B,WAAOC,aAAa,CAACM,WAAD,CAApB;AACD,GAFkB,EAEhB,CAACA,WAAD,CAFgB,CAAnB;AAGA,SAAO,CAACE,KAAD,EAAQD,QAAR,CAAP;AACD,CAXD;;AAYA,eAAeN,aAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useMergedState } from 'rc-util';\nimport { useMemo } from 'react';\nimport { generateColor } from \"../util\";\nvar useColorState = function useColorState(defaultValue, value) {\n  var _useMergedState = useMergedState(defaultValue, {\n      value: value\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedValue = _useMergedState2[0],\n    setValue = _useMergedState2[1];\n  var color = useMemo(function () {\n    return generateColor(mergedValue);\n  }, [mergedValue]);\n  return [color, setValue];\n};\nexport default useColorState;"]},"metadata":{},"sourceType":"module"}