{"ast":null,"code":"'use client';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { blue } from '@ant-design/colors';\nimport Context from \"./Context\";\nimport ReactIcon from \"./IconBase\";\nimport { getTwoToneColor, setTwoToneColor } from \"./twoTonePrimaryColor\";\nimport { normalizeTwoToneColors } from \"../utils\"; // Initial setting\n// should move it to antd main repo?\n\nsetTwoToneColor(blue.primary); // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/34757#issuecomment-488848720\n\nconst Icon = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // affect outter <i>...</i>\n    className,\n    // affect inner <svg>...</svg>\n    icon,\n    spin,\n    rotate,\n    tabIndex,\n    onClick,\n    // other\n    twoToneColor,\n    ...restProps\n  } = props;\n  const {\n    prefixCls = 'anticon',\n    rootClassName\n  } = React.useContext(Context);\n  const classString = classNames(rootClassName, prefixCls, {\n    [`${prefixCls}-${icon.name}`]: !!icon.name,\n    [`${prefixCls}-spin`]: !!spin || icon.name === 'loading'\n  }, className);\n  let iconTabIndex = tabIndex;\n\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n\n  const svgStyle = rotate ? {\n    msTransform: `rotate(${rotate}deg)`,\n    transform: `rotate(${rotate}deg)`\n  } : undefined;\n  const [primaryColor, secondaryColor] = normalizeTwoToneColors(twoToneColor);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    role: \"img\",\n    \"aria-label\": icon.name\n  }, restProps, {\n    ref: ref,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), /*#__PURE__*/React.createElement(ReactIcon, {\n    icon: icon,\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor,\n    style: svgStyle\n  }));\n});\nIcon.displayName = 'AntdIcon';\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nexport default Icon;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@ant-design/icons/es/components/AntdIcon.js"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","classNames","blue","Context","ReactIcon","getTwoToneColor","setTwoToneColor","normalizeTwoToneColors","primary","Icon","forwardRef","props","ref","className","icon","spin","rotate","tabIndex","onClick","twoToneColor","restProps","prefixCls","rootClassName","useContext","classString","name","iconTabIndex","undefined","svgStyle","msTransform","transform","primaryColor","secondaryColor","createElement","role","style","displayName"],"mappings":"AAAA;;AAEA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,GAAgBD,MAAM,CAACC,MAAP,CAAcC,IAAd,EAAhB,GAAuC,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIP,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAAlR;AAAoR,SAAOJ,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AACnV,OAAO,KAAKQ,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,uBAAjD;AACA,SAASC,sBAAT,QAAuC,UAAvC,C,CACA;AACA;;AACAD,eAAe,CAACJ,IAAI,CAACM,OAAN,CAAf,C,CAEA;;AAEA,MAAMC,IAAI,GAAG,aAAaT,KAAK,CAACU,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACzD,QAAM;AACJ;AACAC,IAAAA,SAFI;AAGJ;AACAC,IAAAA,IAJI;AAKJC,IAAAA,IALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA,QAPI;AAQJC,IAAAA,OARI;AASJ;AACAC,IAAAA,YAVI;AAWJ,OAAGC;AAXC,MAYFT,KAZJ;AAaA,QAAM;AACJU,IAAAA,SAAS,GAAG,SADR;AAEJC,IAAAA;AAFI,MAGFtB,KAAK,CAACuB,UAAN,CAAiBpB,OAAjB,CAHJ;AAIA,QAAMqB,WAAW,GAAGvB,UAAU,CAACqB,aAAD,EAAgBD,SAAhB,EAA2B;AACvD,KAAE,GAAEA,SAAU,IAAGP,IAAI,CAACW,IAAK,EAA3B,GAA+B,CAAC,CAACX,IAAI,CAACW,IADiB;AAEvD,KAAE,GAAEJ,SAAU,OAAd,GAAuB,CAAC,CAACN,IAAF,IAAUD,IAAI,CAACW,IAAL,KAAc;AAFQ,GAA3B,EAG3BZ,SAH2B,CAA9B;AAIA,MAAIa,YAAY,GAAGT,QAAnB;;AACA,MAAIS,YAAY,KAAKC,SAAjB,IAA8BT,OAAlC,EAA2C;AACzCQ,IAAAA,YAAY,GAAG,CAAC,CAAhB;AACD;;AACD,QAAME,QAAQ,GAAGZ,MAAM,GAAG;AACxBa,IAAAA,WAAW,EAAG,UAASb,MAAO,MADN;AAExBc,IAAAA,SAAS,EAAG,UAASd,MAAO;AAFJ,GAAH,GAGnBW,SAHJ;AAIA,QAAM,CAACI,YAAD,EAAeC,cAAf,IAAiCzB,sBAAsB,CAACY,YAAD,CAA7D;AACA,SAAO,aAAanB,KAAK,CAACiC,aAAN,CAAoB,MAApB,EAA4B/C,QAAQ,CAAC;AACvDgD,IAAAA,IAAI,EAAE,KADiD;AAEvD,kBAAcpB,IAAI,CAACW;AAFoC,GAAD,EAGrDL,SAHqD,EAG1C;AACZR,IAAAA,GAAG,EAAEA,GADO;AAEZK,IAAAA,QAAQ,EAAES,YAFE;AAGZR,IAAAA,OAAO,EAAEA,OAHG;AAIZL,IAAAA,SAAS,EAAEW;AAJC,GAH0C,CAApC,EAQhB,aAAaxB,KAAK,CAACiC,aAAN,CAAoB7B,SAApB,EAA+B;AAC9CU,IAAAA,IAAI,EAAEA,IADwC;AAE9CiB,IAAAA,YAAY,EAAEA,YAFgC;AAG9CC,IAAAA,cAAc,EAAEA,cAH8B;AAI9CG,IAAAA,KAAK,EAAEP;AAJuC,GAA/B,CARG,CAApB;AAcD,CA7CyB,CAA1B;AA8CAnB,IAAI,CAAC2B,WAAL,GAAmB,UAAnB;AACA3B,IAAI,CAACJ,eAAL,GAAuBA,eAAvB;AACAI,IAAI,CAACH,eAAL,GAAuBA,eAAvB;AACA,eAAeG,IAAf","sourcesContent":["'use client';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { blue } from '@ant-design/colors';\nimport Context from \"./Context\";\nimport ReactIcon from \"./IconBase\";\nimport { getTwoToneColor, setTwoToneColor } from \"./twoTonePrimaryColor\";\nimport { normalizeTwoToneColors } from \"../utils\";\n// Initial setting\n// should move it to antd main repo?\nsetTwoToneColor(blue.primary);\n\n// https://github.com/DefinitelyTyped/DefinitelyTyped/issues/34757#issuecomment-488848720\n\nconst Icon = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // affect outter <i>...</i>\n    className,\n    // affect inner <svg>...</svg>\n    icon,\n    spin,\n    rotate,\n    tabIndex,\n    onClick,\n    // other\n    twoToneColor,\n    ...restProps\n  } = props;\n  const {\n    prefixCls = 'anticon',\n    rootClassName\n  } = React.useContext(Context);\n  const classString = classNames(rootClassName, prefixCls, {\n    [`${prefixCls}-${icon.name}`]: !!icon.name,\n    [`${prefixCls}-spin`]: !!spin || icon.name === 'loading'\n  }, className);\n  let iconTabIndex = tabIndex;\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n  const svgStyle = rotate ? {\n    msTransform: `rotate(${rotate}deg)`,\n    transform: `rotate(${rotate}deg)`\n  } : undefined;\n  const [primaryColor, secondaryColor] = normalizeTwoToneColors(twoToneColor);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    role: \"img\",\n    \"aria-label\": icon.name\n  }, restProps, {\n    ref: ref,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), /*#__PURE__*/React.createElement(ReactIcon, {\n    icon: icon,\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor,\n    style: svgStyle\n  }));\n});\nIcon.displayName = 'AntdIcon';\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nexport default Icon;"]},"metadata":{},"sourceType":"module"}