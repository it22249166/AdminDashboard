{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useRef } from 'react';\nimport useColorDrag from \"../hooks/useColorDrag\";\nimport Palette from \"./Palette\";\nimport classNames from 'classnames';\nimport { useEvent } from 'rc-util';\nimport { Color } from \"../color\";\nimport { calcOffset, calculateColor } from \"../util\";\nimport Gradient from \"./Gradient\";\nimport Handler from \"./Handler\";\nimport Transform from \"./Transform\";\n\nvar Slider = function Slider(props) {\n  var prefixCls = props.prefixCls,\n      colors = props.colors,\n      disabled = props.disabled,\n      onChange = props.onChange,\n      onChangeComplete = props.onChangeComplete,\n      color = props.color,\n      type = props.type;\n  var sliderRef = useRef();\n  var transformRef = useRef();\n  var colorRef = useRef(color);\n\n  var getValue = function getValue(c) {\n    return type === 'hue' ? c.getHue() : c.a * 100;\n  };\n\n  var onDragChange = useEvent(function (offsetValue) {\n    var calcColor = calculateColor({\n      offset: offsetValue,\n      targetRef: transformRef,\n      containerRef: sliderRef,\n      color: color,\n      type: type\n    });\n    colorRef.current = calcColor;\n    onChange(getValue(calcColor));\n  });\n\n  var _useColorDrag = useColorDrag({\n    color: color,\n    targetRef: transformRef,\n    containerRef: sliderRef,\n    calculate: function calculate() {\n      return calcOffset(color, type);\n    },\n    onDragChange: onDragChange,\n    onDragChangeComplete: function onDragChangeComplete() {\n      onChangeComplete(getValue(colorRef.current));\n    },\n    direction: 'x',\n    disabledDrag: disabled\n  }),\n      _useColorDrag2 = _slicedToArray(_useColorDrag, 2),\n      offset = _useColorDrag2[0],\n      dragStartHandle = _useColorDrag2[1];\n\n  var handleColor = React.useMemo(function () {\n    if (type === 'hue') {\n      var hsb = color.toHsb();\n      hsb.s = 1;\n      hsb.b = 1;\n      hsb.a = 1;\n      var lightColor = new Color(hsb);\n      return lightColor;\n    }\n\n    return color;\n  }, [color, type]); // ========================= Gradient =========================\n\n  var gradientList = React.useMemo(function () {\n    return colors.map(function (info) {\n      return \"\".concat(info.color, \" \").concat(info.percent, \"%\");\n    });\n  }, [colors]); // ========================== Render ==========================\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: sliderRef,\n    className: classNames(\"\".concat(prefixCls, \"-slider\"), \"\".concat(prefixCls, \"-slider-\").concat(type)),\n    onMouseDown: dragStartHandle,\n    onTouchStart: dragStartHandle\n  }, /*#__PURE__*/React.createElement(Palette, {\n    prefixCls: prefixCls\n  }, /*#__PURE__*/React.createElement(Transform, {\n    x: offset.x,\n    y: offset.y,\n    ref: transformRef\n  }, /*#__PURE__*/React.createElement(Handler, {\n    size: \"small\",\n    color: handleColor.toHexString(),\n    prefixCls: prefixCls\n  })), /*#__PURE__*/React.createElement(Gradient, {\n    colors: gradientList,\n    type: type,\n    prefixCls: prefixCls\n  })));\n};\n\nexport default Slider;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@rc-component/color-picker/es/components/Slider.js"],"names":["_slicedToArray","React","useRef","useColorDrag","Palette","classNames","useEvent","Color","calcOffset","calculateColor","Gradient","Handler","Transform","Slider","props","prefixCls","colors","disabled","onChange","onChangeComplete","color","type","sliderRef","transformRef","colorRef","getValue","c","getHue","a","onDragChange","offsetValue","calcColor","offset","targetRef","containerRef","current","_useColorDrag","calculate","onDragChangeComplete","direction","disabledDrag","_useColorDrag2","dragStartHandle","handleColor","useMemo","hsb","toHsb","s","b","lightColor","gradientList","map","info","concat","percent","createElement","ref","className","onMouseDown","onTouchStart","x","y","size","toHexString"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useRef } from 'react';\nimport useColorDrag from \"../hooks/useColorDrag\";\nimport Palette from \"./Palette\";\nimport classNames from 'classnames';\nimport { useEvent } from 'rc-util';\nimport { Color } from \"../color\";\nimport { calcOffset, calculateColor } from \"../util\";\nimport Gradient from \"./Gradient\";\nimport Handler from \"./Handler\";\nimport Transform from \"./Transform\";\nvar Slider = function Slider(props) {\n  var prefixCls = props.prefixCls,\n    colors = props.colors,\n    disabled = props.disabled,\n    onChange = props.onChange,\n    onChangeComplete = props.onChangeComplete,\n    color = props.color,\n    type = props.type;\n  var sliderRef = useRef();\n  var transformRef = useRef();\n  var colorRef = useRef(color);\n  var getValue = function getValue(c) {\n    return type === 'hue' ? c.getHue() : c.a * 100;\n  };\n  var onDragChange = useEvent(function (offsetValue) {\n    var calcColor = calculateColor({\n      offset: offsetValue,\n      targetRef: transformRef,\n      containerRef: sliderRef,\n      color: color,\n      type: type\n    });\n    colorRef.current = calcColor;\n    onChange(getValue(calcColor));\n  });\n  var _useColorDrag = useColorDrag({\n      color: color,\n      targetRef: transformRef,\n      containerRef: sliderRef,\n      calculate: function calculate() {\n        return calcOffset(color, type);\n      },\n      onDragChange: onDragChange,\n      onDragChangeComplete: function onDragChangeComplete() {\n        onChangeComplete(getValue(colorRef.current));\n      },\n      direction: 'x',\n      disabledDrag: disabled\n    }),\n    _useColorDrag2 = _slicedToArray(_useColorDrag, 2),\n    offset = _useColorDrag2[0],\n    dragStartHandle = _useColorDrag2[1];\n  var handleColor = React.useMemo(function () {\n    if (type === 'hue') {\n      var hsb = color.toHsb();\n      hsb.s = 1;\n      hsb.b = 1;\n      hsb.a = 1;\n      var lightColor = new Color(hsb);\n      return lightColor;\n    }\n    return color;\n  }, [color, type]);\n\n  // ========================= Gradient =========================\n  var gradientList = React.useMemo(function () {\n    return colors.map(function (info) {\n      return \"\".concat(info.color, \" \").concat(info.percent, \"%\");\n    });\n  }, [colors]);\n\n  // ========================== Render ==========================\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: sliderRef,\n    className: classNames(\"\".concat(prefixCls, \"-slider\"), \"\".concat(prefixCls, \"-slider-\").concat(type)),\n    onMouseDown: dragStartHandle,\n    onTouchStart: dragStartHandle\n  }, /*#__PURE__*/React.createElement(Palette, {\n    prefixCls: prefixCls\n  }, /*#__PURE__*/React.createElement(Transform, {\n    x: offset.x,\n    y: offset.y,\n    ref: transformRef\n  }, /*#__PURE__*/React.createElement(Handler, {\n    size: \"small\",\n    color: handleColor.toHexString(),\n    prefixCls: prefixCls\n  })), /*#__PURE__*/React.createElement(Gradient, {\n    colors: gradientList,\n    type: type,\n    prefixCls: prefixCls\n  })));\n};\nexport default Slider;"]},"metadata":{},"sourceType":"module"}