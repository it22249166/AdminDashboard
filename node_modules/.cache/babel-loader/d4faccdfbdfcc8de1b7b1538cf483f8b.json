{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"className\", \"showSearch\", \"tagRender\", \"direction\", \"omitDomProps\", \"displayValues\", \"onDisplayValuesChange\", \"emptyOptions\", \"notFoundContent\", \"onClear\", \"mode\", \"disabled\", \"loading\", \"getInputElement\", \"getRawInputElement\", \"open\", \"defaultOpen\", \"onDropdownVisibleChange\", \"activeValue\", \"onActiveValueChange\", \"activeDescendantId\", \"searchValue\", \"autoClearSearchValue\", \"onSearch\", \"onSearchSplit\", \"tokenSeparators\", \"allowClear\", \"prefix\", \"suffixIcon\", \"clearIcon\", \"OptionList\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"placement\", \"builtinPlacements\", \"getPopupContainer\", \"showAction\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\"];\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useAllowClear } from \"../hooks/useAllowClear\";\nimport { BaseSelectContext } from \"../hooks/useBaseProps\";\nimport useDelayReset from \"../hooks/useDelayReset\";\nimport useLock from \"../hooks/useLock\";\nimport useSelectTriggerControl from \"../hooks/useSelectTriggerControl\";\nimport Selector from \"../Selector\";\nimport SelectTrigger from \"../SelectTrigger\";\nimport TransBtn from \"../TransBtn\";\nimport { getSeparatedContent, isValidCount } from \"../utils/valueUtil\";\nimport SelectContext from \"../SelectContext\";\nimport Polite from \"./Polite\";\nvar DEFAULT_OMIT_PROPS = ['value', 'onChange', 'removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'onPopupScroll', 'tabIndex'];\nexport var isMultiple = function isMultiple(mode) {\n  return mode === 'tags' || mode === 'multiple';\n};\nvar BaseSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _customizeRawInputEle;\n\n  var id = props.id,\n      prefixCls = props.prefixCls,\n      className = props.className,\n      showSearch = props.showSearch,\n      tagRender = props.tagRender,\n      direction = props.direction,\n      omitDomProps = props.omitDomProps,\n      displayValues = props.displayValues,\n      onDisplayValuesChange = props.onDisplayValuesChange,\n      emptyOptions = props.emptyOptions,\n      _props$notFoundConten = props.notFoundContent,\n      notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n      onClear = props.onClear,\n      mode = props.mode,\n      disabled = props.disabled,\n      loading = props.loading,\n      getInputElement = props.getInputElement,\n      getRawInputElement = props.getRawInputElement,\n      open = props.open,\n      defaultOpen = props.defaultOpen,\n      onDropdownVisibleChange = props.onDropdownVisibleChange,\n      activeValue = props.activeValue,\n      onActiveValueChange = props.onActiveValueChange,\n      activeDescendantId = props.activeDescendantId,\n      searchValue = props.searchValue,\n      autoClearSearchValue = props.autoClearSearchValue,\n      onSearch = props.onSearch,\n      onSearchSplit = props.onSearchSplit,\n      tokenSeparators = props.tokenSeparators,\n      allowClear = props.allowClear,\n      prefix = props.prefix,\n      suffixIcon = props.suffixIcon,\n      clearIcon = props.clearIcon,\n      OptionList = props.OptionList,\n      animation = props.animation,\n      transitionName = props.transitionName,\n      dropdownStyle = props.dropdownStyle,\n      dropdownClassName = props.dropdownClassName,\n      dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n      dropdownRender = props.dropdownRender,\n      dropdownAlign = props.dropdownAlign,\n      placement = props.placement,\n      builtinPlacements = props.builtinPlacements,\n      getPopupContainer = props.getPopupContainer,\n      _props$showAction = props.showAction,\n      showAction = _props$showAction === void 0 ? [] : _props$showAction,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      onKeyUp = props.onKeyUp,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      restProps = _objectWithoutProperties(props, _excluded); // ============================== MISC ==============================\n\n\n  var multiple = isMultiple(mode);\n  var mergedShowSearch = (showSearch !== undefined ? showSearch : multiple) || mode === 'combobox';\n\n  var domProps = _objectSpread({}, restProps);\n\n  DEFAULT_OMIT_PROPS.forEach(function (propName) {\n    delete domProps[propName];\n  });\n  omitDomProps === null || omitDomProps === void 0 || omitDomProps.forEach(function (propName) {\n    delete domProps[propName];\n  }); // ============================= Mobile =============================\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mobile = _React$useState2[0],\n      setMobile = _React$useState2[1];\n\n  React.useEffect(function () {\n    // Only update on the client side\n    setMobile(isMobile());\n  }, []); // ============================== Refs ==============================\n\n  var containerRef = React.useRef(null);\n  var selectorDomRef = React.useRef(null);\n  var triggerRef = React.useRef(null);\n  var selectorRef = React.useRef(null);\n  var listRef = React.useRef(null);\n  var blurRef = React.useRef(false);\n  /** Used for component focused management */\n\n  var _useDelayReset = useDelayReset(),\n      _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n      mockFocused = _useDelayReset2[0],\n      setMockFocused = _useDelayReset2[1],\n      cancelSetMockFocused = _useDelayReset2[2]; // =========================== Imperative ===========================\n\n\n  React.useImperativeHandle(ref, function () {\n    var _selectorRef$current, _selectorRef$current2;\n\n    return {\n      focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n      blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n      scrollTo: function scrollTo(arg) {\n        var _listRef$current;\n\n        return (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo(arg);\n      },\n      nativeElement: containerRef.current || selectorDomRef.current\n    };\n  }); // ========================== Search Value ==========================\n\n  var mergedSearchValue = React.useMemo(function () {\n    var _displayValues$;\n\n    if (mode !== 'combobox') {\n      return searchValue;\n    }\n\n    var val = (_displayValues$ = displayValues[0]) === null || _displayValues$ === void 0 ? void 0 : _displayValues$.value;\n    return typeof val === 'string' || typeof val === 'number' ? String(val) : '';\n  }, [searchValue, mode, displayValues]); // ========================== Custom Input ==========================\n  // Only works in `combobox`\n\n  var customizeInputElement = mode === 'combobox' && typeof getInputElement === 'function' && getInputElement() || null; // Used for customize replacement for `rc-cascader`\n\n  var customizeRawInputElement = typeof getRawInputElement === 'function' && getRawInputElement();\n  var customizeRawInputRef = useComposeRef(selectorDomRef, customizeRawInputElement === null || customizeRawInputElement === void 0 || (_customizeRawInputEle = customizeRawInputElement.props) === null || _customizeRawInputEle === void 0 ? void 0 : _customizeRawInputEle.ref); // ============================== Open ==============================\n  // SSR not support Portal which means we need delay `open` for the first time render\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rendered = _React$useState4[0],\n      setRendered = _React$useState4[1];\n\n  useLayoutEffect(function () {\n    setRendered(true);\n  }, []);\n\n  var _useMergedState = useMergedState(false, {\n    defaultValue: defaultOpen,\n    value: open\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      innerOpen = _useMergedState2[0],\n      setInnerOpen = _useMergedState2[1];\n\n  var mergedOpen = rendered ? innerOpen : false; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n  var emptyListContent = !notFoundContent && emptyOptions;\n\n  if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n    mergedOpen = false;\n  }\n\n  var triggerOpen = emptyListContent ? false : mergedOpen;\n  var onToggleOpen = React.useCallback(function (newOpen) {\n    var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n    if (!disabled) {\n      setInnerOpen(nextOpen);\n\n      if (mergedOpen !== nextOpen) {\n        onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 || onDropdownVisibleChange(nextOpen);\n      }\n    }\n  }, [disabled, mergedOpen, setInnerOpen, onDropdownVisibleChange]); // ============================= Search =============================\n\n  var tokenWithEnter = React.useMemo(function () {\n    return (tokenSeparators || []).some(function (tokenSeparator) {\n      return ['\\n', '\\r\\n'].includes(tokenSeparator);\n    });\n  }, [tokenSeparators]);\n\n  var _ref = React.useContext(SelectContext) || {},\n      maxCount = _ref.maxCount,\n      rawValues = _ref.rawValues;\n\n  var onInternalSearch = function onInternalSearch(searchText, fromTyping, isCompositing) {\n    if (multiple && isValidCount(maxCount) && (rawValues === null || rawValues === void 0 ? void 0 : rawValues.size) >= maxCount) {\n      return;\n    }\n\n    var ret = true;\n    var newSearchText = searchText;\n    onActiveValueChange === null || onActiveValueChange === void 0 || onActiveValueChange(null);\n    var separatedList = getSeparatedContent(searchText, tokenSeparators, isValidCount(maxCount) ? maxCount - rawValues.size : undefined); // Check if match the `tokenSeparators`\n\n    var patchLabels = isCompositing ? null : separatedList; // Ignore combobox since it's not split-able\n\n    if (mode !== 'combobox' && patchLabels) {\n      newSearchText = '';\n      onSearchSplit === null || onSearchSplit === void 0 || onSearchSplit(patchLabels); // Should close when paste finish\n\n      onToggleOpen(false); // Tell Selector that break next actions\n\n      ret = false;\n    }\n\n    if (onSearch && mergedSearchValue !== newSearchText) {\n      onSearch(newSearchText, {\n        source: fromTyping ? 'typing' : 'effect'\n      });\n    }\n\n    return ret;\n  }; // Only triggered when menu is closed & mode is tags\n  // If menu is open, OptionList will take charge\n  // If mode isn't tags, press enter is not meaningful when you can't see any option\n\n\n  var onInternalSearchSubmit = function onInternalSearchSubmit(searchText) {\n    // prevent empty tags from appearing when you click the Enter button\n    if (!searchText || !searchText.trim()) {\n      return;\n    }\n\n    onSearch(searchText, {\n      source: 'submit'\n    });\n  }; // Close will clean up single mode search text\n\n\n  React.useEffect(function () {\n    if (!mergedOpen && !multiple && mode !== 'combobox') {\n      onInternalSearch('', false, false);\n    }\n  }, [mergedOpen]); // ============================ Disabled ============================\n  // Close dropdown & remove focus state when disabled change\n\n  React.useEffect(function () {\n    if (innerOpen && disabled) {\n      setInnerOpen(false);\n    } // After onBlur is triggered, the focused does not need to be reset\n\n\n    if (disabled && !blurRef.current) {\n      setMockFocused(false);\n    }\n  }, [disabled]); // ============================ Keyboard ============================\n\n  /**\n   * We record input value here to check if can press to clean up by backspace\n   * - null: Key is not down, this is reset by key up\n   * - true: Search text is empty when first time backspace down\n   * - false: Search text is not empty when first time backspace down\n   */\n\n  var _useLock = useLock(),\n      _useLock2 = _slicedToArray(_useLock, 2),\n      getClearLock = _useLock2[0],\n      setClearLock = _useLock2[1];\n\n  var keyLockRef = React.useRef(false); // KeyDown\n\n  var onInternalKeyDown = function onInternalKeyDown(event) {\n    var clearLock = getClearLock();\n    var key = event.key;\n    var isEnterKey = key === 'Enter';\n\n    if (isEnterKey) {\n      // Do not submit form when type in the input\n      if (mode !== 'combobox') {\n        event.preventDefault();\n      } // We only manage open state here, close logic should handle by list component\n\n\n      if (!mergedOpen) {\n        onToggleOpen(true);\n      }\n    }\n\n    setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n    if (key === 'Backspace' && !clearLock && multiple && !mergedSearchValue && displayValues.length) {\n      var cloneDisplayValues = _toConsumableArray(displayValues);\n\n      var removedDisplayValue = null;\n\n      for (var i = cloneDisplayValues.length - 1; i >= 0; i -= 1) {\n        var current = cloneDisplayValues[i];\n\n        if (!current.disabled) {\n          cloneDisplayValues.splice(i, 1);\n          removedDisplayValue = current;\n          break;\n        }\n      }\n\n      if (removedDisplayValue) {\n        onDisplayValuesChange(cloneDisplayValues, {\n          type: 'remove',\n          values: [removedDisplayValue]\n        });\n      }\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    if (mergedOpen && (!isEnterKey || !keyLockRef.current)) {\n      var _listRef$current2; // Lock the Enter key after it is pressed to avoid repeated triggering of the onChange event.\n\n\n      if (isEnterKey) {\n        keyLockRef.current = true;\n      }\n\n      (_listRef$current2 = listRef.current) === null || _listRef$current2 === void 0 || _listRef$current2.onKeyDown.apply(_listRef$current2, [event].concat(rest));\n    }\n\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown.apply(void 0, [event].concat(rest));\n  }; // KeyUp\n\n\n  var onInternalKeyUp = function onInternalKeyUp(event) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      rest[_key2 - 1] = arguments[_key2];\n    }\n\n    if (mergedOpen) {\n      var _listRef$current3;\n\n      (_listRef$current3 = listRef.current) === null || _listRef$current3 === void 0 || _listRef$current3.onKeyUp.apply(_listRef$current3, [event].concat(rest));\n    }\n\n    if (event.key === 'Enter') {\n      keyLockRef.current = false;\n    }\n\n    onKeyUp === null || onKeyUp === void 0 || onKeyUp.apply(void 0, [event].concat(rest));\n  }; // ============================ Selector ============================\n\n\n  var onSelectorRemove = function onSelectorRemove(val) {\n    var newValues = displayValues.filter(function (i) {\n      return i !== val;\n    });\n    onDisplayValuesChange(newValues, {\n      type: 'remove',\n      values: [val]\n    });\n  };\n\n  var onInputBlur = function onInputBlur() {\n    // Unlock the Enter key after the input blur; otherwise, the Enter key needs to be pressed twice to trigger the correct effect.\n    keyLockRef.current = false;\n  }; // ========================== Focus / Blur ==========================\n\n  /** Record real focus status */\n\n\n  var focusRef = React.useRef(false);\n\n  var onContainerFocus = function onContainerFocus() {\n    setMockFocused(true);\n\n    if (!disabled) {\n      if (onFocus && !focusRef.current) {\n        onFocus.apply(void 0, arguments);\n      } // `showAction` should handle `focus` if set\n\n\n      if (showAction.includes('focus')) {\n        onToggleOpen(true);\n      }\n    }\n\n    focusRef.current = true;\n  };\n\n  var onContainerBlur = function onContainerBlur() {\n    blurRef.current = true;\n    setMockFocused(false, function () {\n      focusRef.current = false;\n      blurRef.current = false;\n      onToggleOpen(false);\n    });\n\n    if (disabled) {\n      return;\n    }\n\n    if (mergedSearchValue) {\n      // `tags` mode should move `searchValue` into values\n      if (mode === 'tags') {\n        onSearch(mergedSearchValue, {\n          source: 'submit'\n        });\n      } else if (mode === 'multiple') {\n        // `multiple` mode only clean the search value but not trigger event\n        onSearch('', {\n          source: 'blur'\n        });\n      }\n    }\n\n    if (onBlur) {\n      onBlur.apply(void 0, arguments);\n    }\n  }; // Give focus back of Select\n\n\n  var activeTimeoutIds = [];\n  React.useEffect(function () {\n    return function () {\n      activeTimeoutIds.forEach(function (timeoutId) {\n        return clearTimeout(timeoutId);\n      });\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    };\n  }, []);\n\n  var onInternalMouseDown = function onInternalMouseDown(event) {\n    var _triggerRef$current;\n\n    var target = event.target;\n    var popupElement = (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n    if (popupElement && popupElement.contains(target)) {\n      var timeoutId = setTimeout(function () {\n        var index = activeTimeoutIds.indexOf(timeoutId);\n\n        if (index !== -1) {\n          activeTimeoutIds.splice(index, 1);\n        }\n\n        cancelSetMockFocused();\n\n        if (!mobile && !popupElement.contains(document.activeElement)) {\n          var _selectorRef$current3;\n\n          (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 || _selectorRef$current3.focus();\n        }\n      });\n      activeTimeoutIds.push(timeoutId);\n    }\n\n    for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      restArgs[_key3 - 1] = arguments[_key3];\n    }\n\n    onMouseDown === null || onMouseDown === void 0 || onMouseDown.apply(void 0, [event].concat(restArgs));\n  }; // ============================ Dropdown ============================\n\n\n  var _React$useState5 = React.useState({}),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      forceUpdate = _React$useState6[1]; // We need force update here since popup dom is render async\n\n\n  function onPopupMouseEnter() {\n    forceUpdate({});\n  } // Used for raw custom input trigger\n\n\n  var onTriggerVisibleChange;\n\n  if (customizeRawInputElement) {\n    onTriggerVisibleChange = function onTriggerVisibleChange(newOpen) {\n      onToggleOpen(newOpen);\n    };\n  } // Close when click on non-select element\n\n\n  useSelectTriggerControl(function () {\n    var _triggerRef$current2;\n\n    return [containerRef.current, (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : _triggerRef$current2.getPopupElement()];\n  }, triggerOpen, onToggleOpen, !!customizeRawInputElement); // ============================ Context =============================\n\n  var baseSelectContext = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, props), {}, {\n      notFoundContent: notFoundContent,\n      open: mergedOpen,\n      triggerOpen: triggerOpen,\n      id: id,\n      showSearch: mergedShowSearch,\n      multiple: multiple,\n      toggleOpen: onToggleOpen\n    });\n  }, [props, notFoundContent, triggerOpen, mergedOpen, id, mergedShowSearch, multiple, onToggleOpen]); // ==================================================================\n  // ==                            Render                            ==\n  // ==================================================================\n  // ============================= Arrow ==============================\n\n  var showSuffixIcon = !!suffixIcon || loading;\n  var arrowNode;\n\n  if (showSuffixIcon) {\n    arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n      customizeIcon: suffixIcon,\n      customizeIconProps: {\n        loading: loading,\n        searchValue: mergedSearchValue,\n        open: mergedOpen,\n        focused: mockFocused,\n        showSearch: mergedShowSearch\n      }\n    });\n  } // ============================= Clear ==============================\n\n\n  var onClearMouseDown = function onClearMouseDown() {\n    var _selectorRef$current4;\n\n    onClear === null || onClear === void 0 || onClear();\n    (_selectorRef$current4 = selectorRef.current) === null || _selectorRef$current4 === void 0 || _selectorRef$current4.focus();\n    onDisplayValuesChange([], {\n      type: 'clear',\n      values: displayValues\n    });\n    onInternalSearch('', false, false);\n  };\n\n  var _useAllowClear = useAllowClear(prefixCls, onClearMouseDown, displayValues, allowClear, clearIcon, disabled, mergedSearchValue, mode),\n      mergedAllowClear = _useAllowClear.allowClear,\n      clearNode = _useAllowClear.clearIcon; // =========================== OptionList ===========================\n\n\n  var optionList = /*#__PURE__*/React.createElement(OptionList, {\n    ref: listRef\n  }); // ============================= Select =============================\n\n  var mergedClassName = classNames(prefixCls, className, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-focused\"), mockFocused), \"\".concat(prefixCls, \"-multiple\"), multiple), \"\".concat(prefixCls, \"-single\"), !multiple), \"\".concat(prefixCls, \"-allow-clear\"), allowClear), \"\".concat(prefixCls, \"-show-arrow\"), showSuffixIcon), \"\".concat(prefixCls, \"-disabled\"), disabled), \"\".concat(prefixCls, \"-loading\"), loading), \"\".concat(prefixCls, \"-open\"), mergedOpen), \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch)); // >>> Selector\n\n  var selectorNode = /*#__PURE__*/React.createElement(SelectTrigger, {\n    ref: triggerRef,\n    disabled: disabled,\n    prefixCls: prefixCls,\n    visible: triggerOpen,\n    popupElement: optionList,\n    animation: animation,\n    transitionName: transitionName,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: dropdownClassName,\n    direction: direction,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    dropdownRender: dropdownRender,\n    dropdownAlign: dropdownAlign,\n    placement: placement,\n    builtinPlacements: builtinPlacements,\n    getPopupContainer: getPopupContainer,\n    empty: emptyOptions,\n    getTriggerDOMNode: function getTriggerDOMNode(node) {\n      return (// TODO: This is workaround and should be removed in `rc-select`\n        // And use new standard `nativeElement` for ref.\n        // But we should update `rc-resize-observer` first.\n        selectorDomRef.current || node\n      );\n    },\n    onPopupVisibleChange: onTriggerVisibleChange,\n    onPopupMouseEnter: onPopupMouseEnter\n  }, customizeRawInputElement ? /*#__PURE__*/React.cloneElement(customizeRawInputElement, {\n    ref: customizeRawInputRef\n  }) : /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n    domRef: selectorDomRef,\n    prefixCls: prefixCls,\n    inputElement: customizeInputElement,\n    ref: selectorRef,\n    id: id,\n    prefix: prefix,\n    showSearch: mergedShowSearch,\n    autoClearSearchValue: autoClearSearchValue,\n    mode: mode,\n    activeDescendantId: activeDescendantId,\n    tagRender: tagRender,\n    values: displayValues,\n    open: mergedOpen,\n    onToggleOpen: onToggleOpen,\n    activeValue: activeValue,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    onSearchSubmit: onInternalSearchSubmit,\n    onRemove: onSelectorRemove,\n    tokenWithEnter: tokenWithEnter,\n    onInputBlur: onInputBlur\n  }))); // >>> Render\n\n  var renderNode; // Render raw\n\n  if (customizeRawInputElement) {\n    renderNode = selectorNode;\n  } else {\n    renderNode = /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), /*#__PURE__*/React.createElement(Polite, {\n      visible: mockFocused && !mergedOpen,\n      values: displayValues\n    }), selectorNode, arrowNode, mergedAllowClear && clearNode);\n  }\n\n  return /*#__PURE__*/React.createElement(BaseSelectContext.Provider, {\n    value: baseSelectContext\n  }, renderNode);\n}); // Set display name for dev\n\nif (process.env.NODE_ENV !== 'production') {\n  BaseSelect.displayName = 'BaseSelect';\n}\n\nexport default BaseSelect;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-select/es/BaseSelect/index.js"],"names":["_extends","_defineProperty","_toConsumableArray","_slicedToArray","_objectSpread","_objectWithoutProperties","_excluded","classNames","useLayoutEffect","useMergedState","isMobile","useComposeRef","React","useAllowClear","BaseSelectContext","useDelayReset","useLock","useSelectTriggerControl","Selector","SelectTrigger","TransBtn","getSeparatedContent","isValidCount","SelectContext","Polite","DEFAULT_OMIT_PROPS","isMultiple","mode","BaseSelect","forwardRef","props","ref","_customizeRawInputEle","id","prefixCls","className","showSearch","tagRender","direction","omitDomProps","displayValues","onDisplayValuesChange","emptyOptions","_props$notFoundConten","notFoundContent","onClear","disabled","loading","getInputElement","getRawInputElement","open","defaultOpen","onDropdownVisibleChange","activeValue","onActiveValueChange","activeDescendantId","searchValue","autoClearSearchValue","onSearch","onSearchSplit","tokenSeparators","allowClear","prefix","suffixIcon","clearIcon","OptionList","animation","transitionName","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","placement","builtinPlacements","getPopupContainer","_props$showAction","showAction","onFocus","onBlur","onKeyUp","onKeyDown","onMouseDown","restProps","multiple","mergedShowSearch","undefined","domProps","forEach","propName","_React$useState","useState","_React$useState2","mobile","setMobile","useEffect","containerRef","useRef","selectorDomRef","triggerRef","selectorRef","listRef","blurRef","_useDelayReset","_useDelayReset2","mockFocused","setMockFocused","cancelSetMockFocused","useImperativeHandle","_selectorRef$current","_selectorRef$current2","focus","current","blur","scrollTo","arg","_listRef$current","nativeElement","mergedSearchValue","useMemo","_displayValues$","val","value","String","customizeInputElement","customizeRawInputElement","customizeRawInputRef","_React$useState3","_React$useState4","rendered","setRendered","_useMergedState","defaultValue","_useMergedState2","innerOpen","setInnerOpen","mergedOpen","emptyListContent","triggerOpen","onToggleOpen","useCallback","newOpen","nextOpen","tokenWithEnter","some","tokenSeparator","includes","_ref","useContext","maxCount","rawValues","onInternalSearch","searchText","fromTyping","isCompositing","size","ret","newSearchText","separatedList","patchLabels","source","onInternalSearchSubmit","trim","_useLock","_useLock2","getClearLock","setClearLock","keyLockRef","onInternalKeyDown","event","clearLock","key","isEnterKey","preventDefault","length","cloneDisplayValues","removedDisplayValue","i","splice","type","values","_len","arguments","rest","Array","_key","_listRef$current2","apply","concat","onInternalKeyUp","_len2","_key2","_listRef$current3","onSelectorRemove","newValues","filter","onInputBlur","focusRef","onContainerFocus","onContainerBlur","activeTimeoutIds","timeoutId","clearTimeout","onInternalMouseDown","_triggerRef$current","target","popupElement","getPopupElement","contains","setTimeout","index","indexOf","document","activeElement","_selectorRef$current3","push","_len3","restArgs","_key3","_React$useState5","_React$useState6","forceUpdate","onPopupMouseEnter","onTriggerVisibleChange","_triggerRef$current2","baseSelectContext","toggleOpen","showSuffixIcon","arrowNode","createElement","customizeIcon","customizeIconProps","focused","onClearMouseDown","_selectorRef$current4","_useAllowClear","mergedAllowClear","clearNode","optionList","mergedClassName","selectorNode","visible","empty","getTriggerDOMNode","node","onPopupVisibleChange","cloneElement","domRef","inputElement","onSearchSubmit","onRemove","renderNode","Provider","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"className\", \"showSearch\", \"tagRender\", \"direction\", \"omitDomProps\", \"displayValues\", \"onDisplayValuesChange\", \"emptyOptions\", \"notFoundContent\", \"onClear\", \"mode\", \"disabled\", \"loading\", \"getInputElement\", \"getRawInputElement\", \"open\", \"defaultOpen\", \"onDropdownVisibleChange\", \"activeValue\", \"onActiveValueChange\", \"activeDescendantId\", \"searchValue\", \"autoClearSearchValue\", \"onSearch\", \"onSearchSplit\", \"tokenSeparators\", \"allowClear\", \"prefix\", \"suffixIcon\", \"clearIcon\", \"OptionList\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"placement\", \"builtinPlacements\", \"getPopupContainer\", \"showAction\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\"];\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useAllowClear } from \"../hooks/useAllowClear\";\nimport { BaseSelectContext } from \"../hooks/useBaseProps\";\nimport useDelayReset from \"../hooks/useDelayReset\";\nimport useLock from \"../hooks/useLock\";\nimport useSelectTriggerControl from \"../hooks/useSelectTriggerControl\";\nimport Selector from \"../Selector\";\nimport SelectTrigger from \"../SelectTrigger\";\nimport TransBtn from \"../TransBtn\";\nimport { getSeparatedContent, isValidCount } from \"../utils/valueUtil\";\nimport SelectContext from \"../SelectContext\";\nimport Polite from \"./Polite\";\nvar DEFAULT_OMIT_PROPS = ['value', 'onChange', 'removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'onPopupScroll', 'tabIndex'];\nexport var isMultiple = function isMultiple(mode) {\n  return mode === 'tags' || mode === 'multiple';\n};\nvar BaseSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _customizeRawInputEle;\n  var id = props.id,\n    prefixCls = props.prefixCls,\n    className = props.className,\n    showSearch = props.showSearch,\n    tagRender = props.tagRender,\n    direction = props.direction,\n    omitDomProps = props.omitDomProps,\n    displayValues = props.displayValues,\n    onDisplayValuesChange = props.onDisplayValuesChange,\n    emptyOptions = props.emptyOptions,\n    _props$notFoundConten = props.notFoundContent,\n    notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n    onClear = props.onClear,\n    mode = props.mode,\n    disabled = props.disabled,\n    loading = props.loading,\n    getInputElement = props.getInputElement,\n    getRawInputElement = props.getRawInputElement,\n    open = props.open,\n    defaultOpen = props.defaultOpen,\n    onDropdownVisibleChange = props.onDropdownVisibleChange,\n    activeValue = props.activeValue,\n    onActiveValueChange = props.onActiveValueChange,\n    activeDescendantId = props.activeDescendantId,\n    searchValue = props.searchValue,\n    autoClearSearchValue = props.autoClearSearchValue,\n    onSearch = props.onSearch,\n    onSearchSplit = props.onSearchSplit,\n    tokenSeparators = props.tokenSeparators,\n    allowClear = props.allowClear,\n    prefix = props.prefix,\n    suffixIcon = props.suffixIcon,\n    clearIcon = props.clearIcon,\n    OptionList = props.OptionList,\n    animation = props.animation,\n    transitionName = props.transitionName,\n    dropdownStyle = props.dropdownStyle,\n    dropdownClassName = props.dropdownClassName,\n    dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n    dropdownRender = props.dropdownRender,\n    dropdownAlign = props.dropdownAlign,\n    placement = props.placement,\n    builtinPlacements = props.builtinPlacements,\n    getPopupContainer = props.getPopupContainer,\n    _props$showAction = props.showAction,\n    showAction = _props$showAction === void 0 ? [] : _props$showAction,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    onKeyUp = props.onKeyUp,\n    onKeyDown = props.onKeyDown,\n    onMouseDown = props.onMouseDown,\n    restProps = _objectWithoutProperties(props, _excluded);\n\n  // ============================== MISC ==============================\n  var multiple = isMultiple(mode);\n  var mergedShowSearch = (showSearch !== undefined ? showSearch : multiple) || mode === 'combobox';\n  var domProps = _objectSpread({}, restProps);\n  DEFAULT_OMIT_PROPS.forEach(function (propName) {\n    delete domProps[propName];\n  });\n  omitDomProps === null || omitDomProps === void 0 || omitDomProps.forEach(function (propName) {\n    delete domProps[propName];\n  });\n\n  // ============================= Mobile =============================\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mobile = _React$useState2[0],\n    setMobile = _React$useState2[1];\n  React.useEffect(function () {\n    // Only update on the client side\n    setMobile(isMobile());\n  }, []);\n\n  // ============================== Refs ==============================\n  var containerRef = React.useRef(null);\n  var selectorDomRef = React.useRef(null);\n  var triggerRef = React.useRef(null);\n  var selectorRef = React.useRef(null);\n  var listRef = React.useRef(null);\n  var blurRef = React.useRef(false);\n\n  /** Used for component focused management */\n  var _useDelayReset = useDelayReset(),\n    _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n    mockFocused = _useDelayReset2[0],\n    setMockFocused = _useDelayReset2[1],\n    cancelSetMockFocused = _useDelayReset2[2];\n\n  // =========================== Imperative ===========================\n  React.useImperativeHandle(ref, function () {\n    var _selectorRef$current, _selectorRef$current2;\n    return {\n      focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n      blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n      scrollTo: function scrollTo(arg) {\n        var _listRef$current;\n        return (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo(arg);\n      },\n      nativeElement: containerRef.current || selectorDomRef.current\n    };\n  });\n\n  // ========================== Search Value ==========================\n  var mergedSearchValue = React.useMemo(function () {\n    var _displayValues$;\n    if (mode !== 'combobox') {\n      return searchValue;\n    }\n    var val = (_displayValues$ = displayValues[0]) === null || _displayValues$ === void 0 ? void 0 : _displayValues$.value;\n    return typeof val === 'string' || typeof val === 'number' ? String(val) : '';\n  }, [searchValue, mode, displayValues]);\n\n  // ========================== Custom Input ==========================\n  // Only works in `combobox`\n  var customizeInputElement = mode === 'combobox' && typeof getInputElement === 'function' && getInputElement() || null;\n\n  // Used for customize replacement for `rc-cascader`\n  var customizeRawInputElement = typeof getRawInputElement === 'function' && getRawInputElement();\n  var customizeRawInputRef = useComposeRef(selectorDomRef, customizeRawInputElement === null || customizeRawInputElement === void 0 || (_customizeRawInputEle = customizeRawInputElement.props) === null || _customizeRawInputEle === void 0 ? void 0 : _customizeRawInputEle.ref);\n\n  // ============================== Open ==============================\n  // SSR not support Portal which means we need delay `open` for the first time render\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    rendered = _React$useState4[0],\n    setRendered = _React$useState4[1];\n  useLayoutEffect(function () {\n    setRendered(true);\n  }, []);\n  var _useMergedState = useMergedState(false, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    innerOpen = _useMergedState2[0],\n    setInnerOpen = _useMergedState2[1];\n  var mergedOpen = rendered ? innerOpen : false;\n\n  // Not trigger `open` in `combobox` when `notFoundContent` is empty\n  var emptyListContent = !notFoundContent && emptyOptions;\n  if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n    mergedOpen = false;\n  }\n  var triggerOpen = emptyListContent ? false : mergedOpen;\n  var onToggleOpen = React.useCallback(function (newOpen) {\n    var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n    if (!disabled) {\n      setInnerOpen(nextOpen);\n      if (mergedOpen !== nextOpen) {\n        onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 || onDropdownVisibleChange(nextOpen);\n      }\n    }\n  }, [disabled, mergedOpen, setInnerOpen, onDropdownVisibleChange]);\n\n  // ============================= Search =============================\n  var tokenWithEnter = React.useMemo(function () {\n    return (tokenSeparators || []).some(function (tokenSeparator) {\n      return ['\\n', '\\r\\n'].includes(tokenSeparator);\n    });\n  }, [tokenSeparators]);\n  var _ref = React.useContext(SelectContext) || {},\n    maxCount = _ref.maxCount,\n    rawValues = _ref.rawValues;\n  var onInternalSearch = function onInternalSearch(searchText, fromTyping, isCompositing) {\n    if (multiple && isValidCount(maxCount) && (rawValues === null || rawValues === void 0 ? void 0 : rawValues.size) >= maxCount) {\n      return;\n    }\n    var ret = true;\n    var newSearchText = searchText;\n    onActiveValueChange === null || onActiveValueChange === void 0 || onActiveValueChange(null);\n    var separatedList = getSeparatedContent(searchText, tokenSeparators, isValidCount(maxCount) ? maxCount - rawValues.size : undefined);\n\n    // Check if match the `tokenSeparators`\n    var patchLabels = isCompositing ? null : separatedList;\n\n    // Ignore combobox since it's not split-able\n    if (mode !== 'combobox' && patchLabels) {\n      newSearchText = '';\n      onSearchSplit === null || onSearchSplit === void 0 || onSearchSplit(patchLabels);\n\n      // Should close when paste finish\n      onToggleOpen(false);\n\n      // Tell Selector that break next actions\n      ret = false;\n    }\n    if (onSearch && mergedSearchValue !== newSearchText) {\n      onSearch(newSearchText, {\n        source: fromTyping ? 'typing' : 'effect'\n      });\n    }\n    return ret;\n  };\n\n  // Only triggered when menu is closed & mode is tags\n  // If menu is open, OptionList will take charge\n  // If mode isn't tags, press enter is not meaningful when you can't see any option\n  var onInternalSearchSubmit = function onInternalSearchSubmit(searchText) {\n    // prevent empty tags from appearing when you click the Enter button\n    if (!searchText || !searchText.trim()) {\n      return;\n    }\n    onSearch(searchText, {\n      source: 'submit'\n    });\n  };\n\n  // Close will clean up single mode search text\n  React.useEffect(function () {\n    if (!mergedOpen && !multiple && mode !== 'combobox') {\n      onInternalSearch('', false, false);\n    }\n  }, [mergedOpen]);\n\n  // ============================ Disabled ============================\n  // Close dropdown & remove focus state when disabled change\n  React.useEffect(function () {\n    if (innerOpen && disabled) {\n      setInnerOpen(false);\n    }\n\n    // After onBlur is triggered, the focused does not need to be reset\n    if (disabled && !blurRef.current) {\n      setMockFocused(false);\n    }\n  }, [disabled]);\n\n  // ============================ Keyboard ============================\n  /**\n   * We record input value here to check if can press to clean up by backspace\n   * - null: Key is not down, this is reset by key up\n   * - true: Search text is empty when first time backspace down\n   * - false: Search text is not empty when first time backspace down\n   */\n  var _useLock = useLock(),\n    _useLock2 = _slicedToArray(_useLock, 2),\n    getClearLock = _useLock2[0],\n    setClearLock = _useLock2[1];\n  var keyLockRef = React.useRef(false);\n\n  // KeyDown\n  var onInternalKeyDown = function onInternalKeyDown(event) {\n    var clearLock = getClearLock();\n    var key = event.key;\n    var isEnterKey = key === 'Enter';\n    if (isEnterKey) {\n      // Do not submit form when type in the input\n      if (mode !== 'combobox') {\n        event.preventDefault();\n      }\n\n      // We only manage open state here, close logic should handle by list component\n      if (!mergedOpen) {\n        onToggleOpen(true);\n      }\n    }\n    setClearLock(!!mergedSearchValue);\n\n    // Remove value by `backspace`\n    if (key === 'Backspace' && !clearLock && multiple && !mergedSearchValue && displayValues.length) {\n      var cloneDisplayValues = _toConsumableArray(displayValues);\n      var removedDisplayValue = null;\n      for (var i = cloneDisplayValues.length - 1; i >= 0; i -= 1) {\n        var current = cloneDisplayValues[i];\n        if (!current.disabled) {\n          cloneDisplayValues.splice(i, 1);\n          removedDisplayValue = current;\n          break;\n        }\n      }\n      if (removedDisplayValue) {\n        onDisplayValuesChange(cloneDisplayValues, {\n          type: 'remove',\n          values: [removedDisplayValue]\n        });\n      }\n    }\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n    if (mergedOpen && (!isEnterKey || !keyLockRef.current)) {\n      var _listRef$current2;\n      // Lock the Enter key after it is pressed to avoid repeated triggering of the onChange event.\n      if (isEnterKey) {\n        keyLockRef.current = true;\n      }\n      (_listRef$current2 = listRef.current) === null || _listRef$current2 === void 0 || _listRef$current2.onKeyDown.apply(_listRef$current2, [event].concat(rest));\n    }\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown.apply(void 0, [event].concat(rest));\n  };\n\n  // KeyUp\n  var onInternalKeyUp = function onInternalKeyUp(event) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      rest[_key2 - 1] = arguments[_key2];\n    }\n    if (mergedOpen) {\n      var _listRef$current3;\n      (_listRef$current3 = listRef.current) === null || _listRef$current3 === void 0 || _listRef$current3.onKeyUp.apply(_listRef$current3, [event].concat(rest));\n    }\n    if (event.key === 'Enter') {\n      keyLockRef.current = false;\n    }\n    onKeyUp === null || onKeyUp === void 0 || onKeyUp.apply(void 0, [event].concat(rest));\n  };\n\n  // ============================ Selector ============================\n  var onSelectorRemove = function onSelectorRemove(val) {\n    var newValues = displayValues.filter(function (i) {\n      return i !== val;\n    });\n    onDisplayValuesChange(newValues, {\n      type: 'remove',\n      values: [val]\n    });\n  };\n  var onInputBlur = function onInputBlur() {\n    // Unlock the Enter key after the input blur; otherwise, the Enter key needs to be pressed twice to trigger the correct effect.\n    keyLockRef.current = false;\n  };\n\n  // ========================== Focus / Blur ==========================\n  /** Record real focus status */\n  var focusRef = React.useRef(false);\n  var onContainerFocus = function onContainerFocus() {\n    setMockFocused(true);\n    if (!disabled) {\n      if (onFocus && !focusRef.current) {\n        onFocus.apply(void 0, arguments);\n      }\n\n      // `showAction` should handle `focus` if set\n      if (showAction.includes('focus')) {\n        onToggleOpen(true);\n      }\n    }\n    focusRef.current = true;\n  };\n  var onContainerBlur = function onContainerBlur() {\n    blurRef.current = true;\n    setMockFocused(false, function () {\n      focusRef.current = false;\n      blurRef.current = false;\n      onToggleOpen(false);\n    });\n    if (disabled) {\n      return;\n    }\n    if (mergedSearchValue) {\n      // `tags` mode should move `searchValue` into values\n      if (mode === 'tags') {\n        onSearch(mergedSearchValue, {\n          source: 'submit'\n        });\n      } else if (mode === 'multiple') {\n        // `multiple` mode only clean the search value but not trigger event\n        onSearch('', {\n          source: 'blur'\n        });\n      }\n    }\n    if (onBlur) {\n      onBlur.apply(void 0, arguments);\n    }\n  };\n\n  // Give focus back of Select\n  var activeTimeoutIds = [];\n  React.useEffect(function () {\n    return function () {\n      activeTimeoutIds.forEach(function (timeoutId) {\n        return clearTimeout(timeoutId);\n      });\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    };\n  }, []);\n  var onInternalMouseDown = function onInternalMouseDown(event) {\n    var _triggerRef$current;\n    var target = event.target;\n    var popupElement = (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.getPopupElement();\n\n    // We should give focus back to selector if clicked item is not focusable\n    if (popupElement && popupElement.contains(target)) {\n      var timeoutId = setTimeout(function () {\n        var index = activeTimeoutIds.indexOf(timeoutId);\n        if (index !== -1) {\n          activeTimeoutIds.splice(index, 1);\n        }\n        cancelSetMockFocused();\n        if (!mobile && !popupElement.contains(document.activeElement)) {\n          var _selectorRef$current3;\n          (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 || _selectorRef$current3.focus();\n        }\n      });\n      activeTimeoutIds.push(timeoutId);\n    }\n    for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      restArgs[_key3 - 1] = arguments[_key3];\n    }\n    onMouseDown === null || onMouseDown === void 0 || onMouseDown.apply(void 0, [event].concat(restArgs));\n  };\n\n  // ============================ Dropdown ============================\n  var _React$useState5 = React.useState({}),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    forceUpdate = _React$useState6[1];\n  // We need force update here since popup dom is render async\n  function onPopupMouseEnter() {\n    forceUpdate({});\n  }\n\n  // Used for raw custom input trigger\n  var onTriggerVisibleChange;\n  if (customizeRawInputElement) {\n    onTriggerVisibleChange = function onTriggerVisibleChange(newOpen) {\n      onToggleOpen(newOpen);\n    };\n  }\n\n  // Close when click on non-select element\n  useSelectTriggerControl(function () {\n    var _triggerRef$current2;\n    return [containerRef.current, (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : _triggerRef$current2.getPopupElement()];\n  }, triggerOpen, onToggleOpen, !!customizeRawInputElement);\n\n  // ============================ Context =============================\n  var baseSelectContext = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, props), {}, {\n      notFoundContent: notFoundContent,\n      open: mergedOpen,\n      triggerOpen: triggerOpen,\n      id: id,\n      showSearch: mergedShowSearch,\n      multiple: multiple,\n      toggleOpen: onToggleOpen\n    });\n  }, [props, notFoundContent, triggerOpen, mergedOpen, id, mergedShowSearch, multiple, onToggleOpen]);\n\n  // ==================================================================\n  // ==                            Render                            ==\n  // ==================================================================\n\n  // ============================= Arrow ==============================\n  var showSuffixIcon = !!suffixIcon || loading;\n  var arrowNode;\n  if (showSuffixIcon) {\n    arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n      customizeIcon: suffixIcon,\n      customizeIconProps: {\n        loading: loading,\n        searchValue: mergedSearchValue,\n        open: mergedOpen,\n        focused: mockFocused,\n        showSearch: mergedShowSearch\n      }\n    });\n  }\n\n  // ============================= Clear ==============================\n  var onClearMouseDown = function onClearMouseDown() {\n    var _selectorRef$current4;\n    onClear === null || onClear === void 0 || onClear();\n    (_selectorRef$current4 = selectorRef.current) === null || _selectorRef$current4 === void 0 || _selectorRef$current4.focus();\n    onDisplayValuesChange([], {\n      type: 'clear',\n      values: displayValues\n    });\n    onInternalSearch('', false, false);\n  };\n  var _useAllowClear = useAllowClear(prefixCls, onClearMouseDown, displayValues, allowClear, clearIcon, disabled, mergedSearchValue, mode),\n    mergedAllowClear = _useAllowClear.allowClear,\n    clearNode = _useAllowClear.clearIcon;\n\n  // =========================== OptionList ===========================\n  var optionList = /*#__PURE__*/React.createElement(OptionList, {\n    ref: listRef\n  });\n\n  // ============================= Select =============================\n  var mergedClassName = classNames(prefixCls, className, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-focused\"), mockFocused), \"\".concat(prefixCls, \"-multiple\"), multiple), \"\".concat(prefixCls, \"-single\"), !multiple), \"\".concat(prefixCls, \"-allow-clear\"), allowClear), \"\".concat(prefixCls, \"-show-arrow\"), showSuffixIcon), \"\".concat(prefixCls, \"-disabled\"), disabled), \"\".concat(prefixCls, \"-loading\"), loading), \"\".concat(prefixCls, \"-open\"), mergedOpen), \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch));\n\n  // >>> Selector\n  var selectorNode = /*#__PURE__*/React.createElement(SelectTrigger, {\n    ref: triggerRef,\n    disabled: disabled,\n    prefixCls: prefixCls,\n    visible: triggerOpen,\n    popupElement: optionList,\n    animation: animation,\n    transitionName: transitionName,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: dropdownClassName,\n    direction: direction,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    dropdownRender: dropdownRender,\n    dropdownAlign: dropdownAlign,\n    placement: placement,\n    builtinPlacements: builtinPlacements,\n    getPopupContainer: getPopupContainer,\n    empty: emptyOptions,\n    getTriggerDOMNode: function getTriggerDOMNode(node) {\n      return (\n        // TODO: This is workaround and should be removed in `rc-select`\n        // And use new standard `nativeElement` for ref.\n        // But we should update `rc-resize-observer` first.\n        selectorDomRef.current || node\n      );\n    },\n    onPopupVisibleChange: onTriggerVisibleChange,\n    onPopupMouseEnter: onPopupMouseEnter\n  }, customizeRawInputElement ? ( /*#__PURE__*/React.cloneElement(customizeRawInputElement, {\n    ref: customizeRawInputRef\n  })) : /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n    domRef: selectorDomRef,\n    prefixCls: prefixCls,\n    inputElement: customizeInputElement,\n    ref: selectorRef,\n    id: id,\n    prefix: prefix,\n    showSearch: mergedShowSearch,\n    autoClearSearchValue: autoClearSearchValue,\n    mode: mode,\n    activeDescendantId: activeDescendantId,\n    tagRender: tagRender,\n    values: displayValues,\n    open: mergedOpen,\n    onToggleOpen: onToggleOpen,\n    activeValue: activeValue,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    onSearchSubmit: onInternalSearchSubmit,\n    onRemove: onSelectorRemove,\n    tokenWithEnter: tokenWithEnter,\n    onInputBlur: onInputBlur\n  })));\n\n  // >>> Render\n  var renderNode;\n\n  // Render raw\n  if (customizeRawInputElement) {\n    renderNode = selectorNode;\n  } else {\n    renderNode = /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), /*#__PURE__*/React.createElement(Polite, {\n      visible: mockFocused && !mergedOpen,\n      values: displayValues\n    }), selectorNode, arrowNode, mergedAllowClear && clearNode);\n  }\n  return /*#__PURE__*/React.createElement(BaseSelectContext.Provider, {\n    value: baseSelectContext\n  }, renderNode);\n});\n\n// Set display name for dev\nif (process.env.NODE_ENV !== 'production') {\n  BaseSelect.displayName = 'BaseSelect';\n}\nexport default BaseSelect;"]},"metadata":{},"sourceType":"module"}