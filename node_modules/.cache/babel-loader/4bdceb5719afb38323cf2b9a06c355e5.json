{"ast":null,"code":"import { generate, presetPalettes, presetPrimaryColors } from '@ant-design/colors';\nimport { defaultPresetColors } from '../seed';\nimport genColorMapToken from '../shared/genColorMapToken';\nimport genCommonMapToken from '../shared/genCommonMapToken';\nimport genControlHeight from '../shared/genControlHeight';\nimport genFontMapToken from '../shared/genFontMapToken';\nimport genSizeMapToken from '../shared/genSizeMapToken';\nimport { generateColorPalettes, generateNeutralColorPalettes } from './colors';\nexport default function derivative(token) {\n  // pink is deprecated name of magenta, keep this for backwards compatibility\n  presetPrimaryColors.pink = presetPrimaryColors.magenta;\n  presetPalettes.pink = presetPalettes.magenta;\n  const colorPalettes = Object.keys(defaultPresetColors).map(colorKey => {\n    const colors = token[colorKey] === presetPrimaryColors[colorKey] ? presetPalettes[colorKey] : generate(token[colorKey]);\n    return Array.from({\n      length: 10\n    }, () => 1).reduce((prev, _, i) => {\n      prev[`${colorKey}-${i + 1}`] = colors[i];\n      prev[`${colorKey}${i + 1}`] = colors[i];\n      return prev;\n    }, {});\n  }).reduce((prev, cur) => {\n    // biome-ignore lint/style/noParameterAssign: it is a reduce\n    prev = Object.assign(Object.assign({}, prev), cur);\n    return prev;\n  }, {});\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, token), colorPalettes), genColorMapToken(token, {\n    generateColorPalettes,\n    generateNeutralColorPalettes\n  })), genFontMapToken(token.fontSize)), genSizeMapToken(token)), genControlHeight(token)), genCommonMapToken(token));\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/theme/themes/default/index.js"],"names":["generate","presetPalettes","presetPrimaryColors","defaultPresetColors","genColorMapToken","genCommonMapToken","genControlHeight","genFontMapToken","genSizeMapToken","generateColorPalettes","generateNeutralColorPalettes","derivative","token","pink","magenta","colorPalettes","Object","keys","map","colorKey","colors","Array","from","length","reduce","prev","_","i","cur","assign","fontSize"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,cAAnB,EAAmCC,mBAAnC,QAA8D,oBAA9D;AACA,SAASC,mBAAT,QAAoC,SAApC;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,SAASC,qBAAT,EAAgCC,4BAAhC,QAAoE,UAApE;AACA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACxC;AACAV,EAAAA,mBAAmB,CAACW,IAApB,GAA2BX,mBAAmB,CAACY,OAA/C;AACAb,EAAAA,cAAc,CAACY,IAAf,GAAsBZ,cAAc,CAACa,OAArC;AACA,QAAMC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYd,mBAAZ,EAAiCe,GAAjC,CAAqCC,QAAQ,IAAI;AACrE,UAAMC,MAAM,GAAGR,KAAK,CAACO,QAAD,CAAL,KAAoBjB,mBAAmB,CAACiB,QAAD,CAAvC,GAAoDlB,cAAc,CAACkB,QAAD,CAAlE,GAA+EnB,QAAQ,CAACY,KAAK,CAACO,QAAD,CAAN,CAAtG;AACA,WAAOE,KAAK,CAACC,IAAN,CAAW;AAChBC,MAAAA,MAAM,EAAE;AADQ,KAAX,EAEJ,MAAM,CAFF,EAEKC,MAFL,CAEY,CAACC,IAAD,EAAOC,CAAP,EAAUC,CAAV,KAAgB;AACjCF,MAAAA,IAAI,CAAE,GAAEN,QAAS,IAAGQ,CAAC,GAAG,CAAE,EAAtB,CAAJ,GAA+BP,MAAM,CAACO,CAAD,CAArC;AACAF,MAAAA,IAAI,CAAE,GAAEN,QAAS,GAAEQ,CAAC,GAAG,CAAE,EAArB,CAAJ,GAA8BP,MAAM,CAACO,CAAD,CAApC;AACA,aAAOF,IAAP;AACD,KANM,EAMJ,EANI,CAAP;AAOD,GATqB,EASnBD,MATmB,CASZ,CAACC,IAAD,EAAOG,GAAP,KAAe;AACvB;AACAH,IAAAA,IAAI,GAAGT,MAAM,CAACa,MAAP,CAAcb,MAAM,CAACa,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,CAAd,EAAuCG,GAAvC,CAAP;AACA,WAAOH,IAAP;AACD,GAbqB,EAanB,EAbmB,CAAtB;AAcA,SAAOT,MAAM,CAACa,MAAP,CAAcb,MAAM,CAACa,MAAP,CAAcb,MAAM,CAACa,MAAP,CAAcb,MAAM,CAACa,MAAP,CAAcb,MAAM,CAACa,MAAP,CAAcb,MAAM,CAACa,MAAP,CAAcb,MAAM,CAACa,MAAP,CAAc,EAAd,EAAkBjB,KAAlB,CAAd,EAAwCG,aAAxC,CAAd,EAAsEX,gBAAgB,CAACQ,KAAD,EAAQ;AAC3JH,IAAAA,qBAD2J;AAE3JC,IAAAA;AAF2J,GAAR,CAAtF,CAAd,EAG5CH,eAAe,CAACK,KAAK,CAACkB,QAAP,CAH6B,CAAd,EAGItB,eAAe,CAACI,KAAD,CAHnB,CAAd,EAG2CN,gBAAgB,CAACM,KAAD,CAH3D,CAAd,EAGmFP,iBAAiB,CAACO,KAAD,CAHpG,CAAP;AAID","sourcesContent":["import { generate, presetPalettes, presetPrimaryColors } from '@ant-design/colors';\nimport { defaultPresetColors } from '../seed';\nimport genColorMapToken from '../shared/genColorMapToken';\nimport genCommonMapToken from '../shared/genCommonMapToken';\nimport genControlHeight from '../shared/genControlHeight';\nimport genFontMapToken from '../shared/genFontMapToken';\nimport genSizeMapToken from '../shared/genSizeMapToken';\nimport { generateColorPalettes, generateNeutralColorPalettes } from './colors';\nexport default function derivative(token) {\n  // pink is deprecated name of magenta, keep this for backwards compatibility\n  presetPrimaryColors.pink = presetPrimaryColors.magenta;\n  presetPalettes.pink = presetPalettes.magenta;\n  const colorPalettes = Object.keys(defaultPresetColors).map(colorKey => {\n    const colors = token[colorKey] === presetPrimaryColors[colorKey] ? presetPalettes[colorKey] : generate(token[colorKey]);\n    return Array.from({\n      length: 10\n    }, () => 1).reduce((prev, _, i) => {\n      prev[`${colorKey}-${i + 1}`] = colors[i];\n      prev[`${colorKey}${i + 1}`] = colors[i];\n      return prev;\n    }, {});\n  }).reduce((prev, cur) => {\n    // biome-ignore lint/style/noParameterAssign: it is a reduce\n    prev = Object.assign(Object.assign({}, prev), cur);\n    return prev;\n  }, {});\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, token), colorPalettes), genColorMapToken(token, {\n    generateColorPalettes,\n    generateNeutralColorPalettes\n  })), genFontMapToken(token.fontSize)), genSizeMapToken(token)), genControlHeight(token)), genCommonMapToken(token));\n}"]},"metadata":{},"sourceType":"module"}