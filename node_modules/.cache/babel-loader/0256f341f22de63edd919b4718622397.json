{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useBaseProps } from 'rc-select';\nimport Tree from 'rc-tree';\nimport { UnstableContext } from 'rc-tree';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport * as React from 'react';\nimport LegacyContext from \"./LegacyContext\";\nimport TreeSelectContext from \"./TreeSelectContext\";\nimport { getAllKeys, isCheckDisabled } from \"./utils/valueUtil\";\nimport { useEvent } from 'rc-util';\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\n\nvar OptionList = function OptionList(_, ref) {\n  var _useBaseProps = useBaseProps(),\n      prefixCls = _useBaseProps.prefixCls,\n      multiple = _useBaseProps.multiple,\n      searchValue = _useBaseProps.searchValue,\n      toggleOpen = _useBaseProps.toggleOpen,\n      open = _useBaseProps.open,\n      notFoundContent = _useBaseProps.notFoundContent;\n\n  var _React$useContext = React.useContext(TreeSelectContext),\n      virtual = _React$useContext.virtual,\n      listHeight = _React$useContext.listHeight,\n      listItemHeight = _React$useContext.listItemHeight,\n      listItemScrollOffset = _React$useContext.listItemScrollOffset,\n      treeData = _React$useContext.treeData,\n      fieldNames = _React$useContext.fieldNames,\n      onSelect = _React$useContext.onSelect,\n      dropdownMatchSelectWidth = _React$useContext.dropdownMatchSelectWidth,\n      treeExpandAction = _React$useContext.treeExpandAction,\n      treeTitleRender = _React$useContext.treeTitleRender,\n      onPopupScroll = _React$useContext.onPopupScroll,\n      leftMaxCount = _React$useContext.leftMaxCount,\n      leafCountOnly = _React$useContext.leafCountOnly,\n      valueEntities = _React$useContext.valueEntities;\n\n  var _React$useContext2 = React.useContext(LegacyContext),\n      checkable = _React$useContext2.checkable,\n      checkedKeys = _React$useContext2.checkedKeys,\n      halfCheckedKeys = _React$useContext2.halfCheckedKeys,\n      treeExpandedKeys = _React$useContext2.treeExpandedKeys,\n      treeDefaultExpandAll = _React$useContext2.treeDefaultExpandAll,\n      treeDefaultExpandedKeys = _React$useContext2.treeDefaultExpandedKeys,\n      onTreeExpand = _React$useContext2.onTreeExpand,\n      treeIcon = _React$useContext2.treeIcon,\n      showTreeIcon = _React$useContext2.showTreeIcon,\n      switcherIcon = _React$useContext2.switcherIcon,\n      treeLine = _React$useContext2.treeLine,\n      treeNodeFilterProp = _React$useContext2.treeNodeFilterProp,\n      loadData = _React$useContext2.loadData,\n      treeLoadedKeys = _React$useContext2.treeLoadedKeys,\n      treeMotion = _React$useContext2.treeMotion,\n      onTreeLoad = _React$useContext2.onTreeLoad,\n      keyEntities = _React$useContext2.keyEntities;\n\n  var treeRef = React.useRef();\n  var memoTreeData = useMemo(function () {\n    return treeData;\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [open, treeData], function (prev, next) {\n    return next[0] && prev[1] !== next[1];\n  }); // ========================== Values ==========================\n\n  var mergedCheckedKeys = React.useMemo(function () {\n    if (!checkable) {\n      return null;\n    }\n\n    return {\n      checked: checkedKeys,\n      halfChecked: halfCheckedKeys\n    };\n  }, [checkable, checkedKeys, halfCheckedKeys]); // ========================== Scroll ==========================\n\n  React.useEffect(function () {\n    // Single mode should scroll to current key\n    if (open && !multiple && checkedKeys.length) {\n      var _treeRef$current;\n\n      (_treeRef$current = treeRef.current) === null || _treeRef$current === void 0 || _treeRef$current.scrollTo({\n        key: checkedKeys[0]\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [open]); // ========================== Events ==========================\n\n  var onListMouseDown = function onListMouseDown(event) {\n    event.preventDefault();\n  };\n\n  var onInternalSelect = function onInternalSelect(__, info) {\n    var node = info.node;\n\n    if (checkable && isCheckDisabled(node)) {\n      return;\n    }\n\n    onSelect(node.key, {\n      selected: !checkedKeys.includes(node.key)\n    });\n\n    if (!multiple) {\n      toggleOpen(false);\n    }\n  }; // =========================== Keys ===========================\n\n\n  var _React$useState = React.useState(treeDefaultExpandedKeys),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expandedKeys = _React$useState2[0],\n      setExpandedKeys = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      searchExpandedKeys = _React$useState4[0],\n      setSearchExpandedKeys = _React$useState4[1];\n\n  var mergedExpandedKeys = React.useMemo(function () {\n    if (treeExpandedKeys) {\n      return _toConsumableArray(treeExpandedKeys);\n    }\n\n    return searchValue ? searchExpandedKeys : expandedKeys;\n  }, [expandedKeys, searchExpandedKeys, treeExpandedKeys, searchValue]);\n\n  var onInternalExpand = function onInternalExpand(keys) {\n    setExpandedKeys(keys);\n    setSearchExpandedKeys(keys);\n\n    if (onTreeExpand) {\n      onTreeExpand(keys);\n    }\n  }; // ========================== Search ==========================\n\n\n  var lowerSearchValue = String(searchValue).toLowerCase();\n\n  var filterTreeNode = function filterTreeNode(treeNode) {\n    if (!lowerSearchValue) {\n      return false;\n    }\n\n    return String(treeNode[treeNodeFilterProp]).toLowerCase().includes(lowerSearchValue);\n  };\n\n  React.useEffect(function () {\n    if (searchValue) {\n      setSearchExpandedKeys(getAllKeys(treeData, fieldNames));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [searchValue]); // ========================= Disabled =========================\n  // Cache disabled states in React state to ensure re-render when cache updates\n\n  var _React$useState5 = React.useState(function () {\n    return new Map();\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      disabledCache = _React$useState6[0],\n      setDisabledCache = _React$useState6[1];\n\n  React.useEffect(function () {\n    if (leftMaxCount) {\n      setDisabledCache(new Map());\n    }\n  }, [leftMaxCount]);\n\n  function getDisabledWithCache(node) {\n    var value = node[fieldNames.value];\n\n    if (!disabledCache.has(value)) {\n      var entity = valueEntities.get(value);\n      var isLeaf = (entity.children || []).length === 0;\n\n      if (!isLeaf) {\n        var checkableChildren = entity.children.filter(function (childTreeNode) {\n          return !childTreeNode.node.disabled && !childTreeNode.node.disableCheckbox && !checkedKeys.includes(childTreeNode.node[fieldNames.value]);\n        });\n        var checkableChildrenCount = checkableChildren.length;\n        disabledCache.set(value, checkableChildrenCount > leftMaxCount);\n      } else {\n        disabledCache.set(value, false);\n      }\n    }\n\n    return disabledCache.get(value);\n  }\n\n  var nodeDisabled = useEvent(function (node) {\n    var nodeValue = node[fieldNames.value];\n\n    if (checkedKeys.includes(nodeValue)) {\n      return false;\n    }\n\n    if (leftMaxCount === null) {\n      return false;\n    }\n\n    if (leftMaxCount <= 0) {\n      return true;\n    } // This is a low performance calculation\n\n\n    if (leafCountOnly && leftMaxCount) {\n      return getDisabledWithCache(node);\n    }\n\n    return false;\n  }); // ========================== Get First Selectable Node ==========================\n\n  var getFirstMatchingNode = function getFirstMatchingNode(nodes) {\n    var _iterator = _createForOfIteratorHelper(nodes),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var node = _step.value;\n\n        if (node.disabled || node.selectable === false) {\n          continue;\n        }\n\n        if (searchValue) {\n          if (filterTreeNode(node)) {\n            return node;\n          }\n        } else {\n          return node;\n        }\n\n        if (node[fieldNames.children]) {\n          var matchInChildren = getFirstMatchingNode(node[fieldNames.children]);\n\n          if (matchInChildren) {\n            return matchInChildren;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return null;\n  }; // ========================== Active ==========================\n\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      activeKey = _React$useState8[0],\n      setActiveKey = _React$useState8[1];\n\n  var activeEntity = keyEntities[activeKey];\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var nextActiveKey = null;\n\n    var getFirstNode = function getFirstNode() {\n      var firstNode = getFirstMatchingNode(memoTreeData);\n      return firstNode ? firstNode[fieldNames.value] : null;\n    }; // single mode active first checked node\n\n\n    if (!multiple && checkedKeys.length && !searchValue) {\n      nextActiveKey = checkedKeys[0];\n    } else {\n      nextActiveKey = getFirstNode();\n    }\n\n    setActiveKey(nextActiveKey);\n  }, [open, searchValue]); // ========================= Keyboard =========================\n\n  React.useImperativeHandle(ref, function () {\n    var _treeRef$current2;\n\n    return {\n      scrollTo: (_treeRef$current2 = treeRef.current) === null || _treeRef$current2 === void 0 ? void 0 : _treeRef$current2.scrollTo,\n      onKeyDown: function onKeyDown(event) {\n        var _treeRef$current3;\n\n        var which = event.which;\n\n        switch (which) {\n          // >>> Arrow keys\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n          case KeyCode.LEFT:\n          case KeyCode.RIGHT:\n            (_treeRef$current3 = treeRef.current) === null || _treeRef$current3 === void 0 || _treeRef$current3.onKeyDown(event);\n            break;\n          // >>> Select item\n\n          case KeyCode.ENTER:\n            {\n              if (activeEntity) {\n                var isNodeDisabled = nodeDisabled(activeEntity.node);\n\n                var _ref = (activeEntity === null || activeEntity === void 0 ? void 0 : activeEntity.node) || {},\n                    selectable = _ref.selectable,\n                    value = _ref.value,\n                    disabled = _ref.disabled;\n\n                if (selectable !== false && !disabled && !isNodeDisabled) {\n                  onInternalSelect(null, {\n                    node: {\n                      key: activeKey\n                    },\n                    selected: !checkedKeys.includes(value)\n                  });\n                }\n              }\n\n              break;\n            }\n          // >>> Close\n\n          case KeyCode.ESC:\n            {\n              toggleOpen(false);\n            }\n        }\n      },\n      onKeyUp: function onKeyUp() {}\n    };\n  });\n  var hasLoadDataFn = useMemo(function () {\n    return searchValue ? false : true;\n  }, [searchValue, treeExpandedKeys || expandedKeys], function (_ref2, _ref3) {\n    var _ref4 = _slicedToArray(_ref2, 1),\n        preSearchValue = _ref4[0];\n\n    var _ref5 = _slicedToArray(_ref3, 2),\n        nextSearchValue = _ref5[0],\n        nextExcludeSearchExpandedKeys = _ref5[1];\n\n    return preSearchValue !== nextSearchValue && !!(nextSearchValue || nextExcludeSearchExpandedKeys);\n  });\n  var syncLoadData = hasLoadDataFn ? loadData : null; // ========================== Render ==========================\n\n  if (memoTreeData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      role: \"listbox\",\n      className: \"\".concat(prefixCls, \"-empty\"),\n      onMouseDown: onListMouseDown\n    }, notFoundContent);\n  }\n\n  var treeProps = {\n    fieldNames: fieldNames\n  };\n\n  if (treeLoadedKeys) {\n    treeProps.loadedKeys = treeLoadedKeys;\n  }\n\n  if (mergedExpandedKeys) {\n    treeProps.expandedKeys = mergedExpandedKeys;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: onListMouseDown\n  }, activeEntity && open && /*#__PURE__*/React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, activeEntity.node.value), /*#__PURE__*/React.createElement(UnstableContext.Provider, {\n    value: {\n      nodeDisabled: nodeDisabled\n    }\n  }, /*#__PURE__*/React.createElement(Tree, _extends({\n    ref: treeRef,\n    focusable: false,\n    prefixCls: \"\".concat(prefixCls, \"-tree\"),\n    treeData: memoTreeData,\n    height: listHeight,\n    itemHeight: listItemHeight,\n    itemScrollOffset: listItemScrollOffset,\n    virtual: virtual !== false && dropdownMatchSelectWidth !== false,\n    multiple: multiple,\n    icon: treeIcon,\n    showIcon: showTreeIcon,\n    switcherIcon: switcherIcon,\n    showLine: treeLine,\n    loadData: syncLoadData,\n    motion: treeMotion,\n    activeKey: activeKey // We handle keys by out instead tree self\n    ,\n    checkable: checkable,\n    checkStrictly: true,\n    checkedKeys: mergedCheckedKeys,\n    selectedKeys: !checkable ? checkedKeys : [],\n    defaultExpandAll: treeDefaultExpandAll,\n    titleRender: treeTitleRender\n  }, treeProps, {\n    // Proxy event out\n    onActiveChange: setActiveKey,\n    onSelect: onInternalSelect,\n    onCheck: onInternalSelect,\n    onExpand: onInternalExpand,\n    onLoad: onTreeLoad,\n    filterTreeNode: filterTreeNode,\n    expandAction: treeExpandAction,\n    onScroll: onPopupScroll\n  }))));\n};\n\nvar RefOptionList = /*#__PURE__*/React.forwardRef(OptionList);\n\nif (process.env.NODE_ENV !== 'production') {\n  RefOptionList.displayName = 'OptionList';\n}\n\nexport default RefOptionList;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-tree-select/es/OptionList.js"],"names":["_extends","_createForOfIteratorHelper","_toConsumableArray","_slicedToArray","useBaseProps","Tree","UnstableContext","KeyCode","useMemo","React","LegacyContext","TreeSelectContext","getAllKeys","isCheckDisabled","useEvent","HIDDEN_STYLE","width","height","display","overflow","opacity","border","padding","margin","OptionList","_","ref","_useBaseProps","prefixCls","multiple","searchValue","toggleOpen","open","notFoundContent","_React$useContext","useContext","virtual","listHeight","listItemHeight","listItemScrollOffset","treeData","fieldNames","onSelect","dropdownMatchSelectWidth","treeExpandAction","treeTitleRender","onPopupScroll","leftMaxCount","leafCountOnly","valueEntities","_React$useContext2","checkable","checkedKeys","halfCheckedKeys","treeExpandedKeys","treeDefaultExpandAll","treeDefaultExpandedKeys","onTreeExpand","treeIcon","showTreeIcon","switcherIcon","treeLine","treeNodeFilterProp","loadData","treeLoadedKeys","treeMotion","onTreeLoad","keyEntities","treeRef","useRef","memoTreeData","prev","next","mergedCheckedKeys","checked","halfChecked","useEffect","length","_treeRef$current","current","scrollTo","key","onListMouseDown","event","preventDefault","onInternalSelect","__","info","node","selected","includes","_React$useState","useState","_React$useState2","expandedKeys","setExpandedKeys","_React$useState3","_React$useState4","searchExpandedKeys","setSearchExpandedKeys","mergedExpandedKeys","onInternalExpand","keys","lowerSearchValue","String","toLowerCase","filterTreeNode","treeNode","_React$useState5","Map","_React$useState6","disabledCache","setDisabledCache","getDisabledWithCache","value","has","entity","get","isLeaf","children","checkableChildren","filter","childTreeNode","disabled","disableCheckbox","checkableChildrenCount","set","nodeDisabled","nodeValue","getFirstMatchingNode","nodes","_iterator","_step","s","n","done","selectable","matchInChildren","err","e","f","_React$useState7","_React$useState8","activeKey","setActiveKey","activeEntity","nextActiveKey","getFirstNode","firstNode","useImperativeHandle","_treeRef$current2","onKeyDown","_treeRef$current3","which","UP","DOWN","LEFT","RIGHT","ENTER","isNodeDisabled","_ref","ESC","onKeyUp","hasLoadDataFn","_ref2","_ref3","_ref4","preSearchValue","_ref5","nextSearchValue","nextExcludeSearchExpandedKeys","syncLoadData","createElement","role","className","concat","onMouseDown","treeProps","loadedKeys","style","Provider","focusable","itemHeight","itemScrollOffset","icon","showIcon","showLine","motion","checkStrictly","selectedKeys","defaultExpandAll","titleRender","onActiveChange","onCheck","onExpand","onLoad","expandAction","onScroll","RefOptionList","forwardRef","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useBaseProps } from 'rc-select';\nimport Tree from 'rc-tree';\nimport { UnstableContext } from 'rc-tree';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport * as React from 'react';\nimport LegacyContext from \"./LegacyContext\";\nimport TreeSelectContext from \"./TreeSelectContext\";\nimport { getAllKeys, isCheckDisabled } from \"./utils/valueUtil\";\nimport { useEvent } from 'rc-util';\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\nvar OptionList = function OptionList(_, ref) {\n  var _useBaseProps = useBaseProps(),\n    prefixCls = _useBaseProps.prefixCls,\n    multiple = _useBaseProps.multiple,\n    searchValue = _useBaseProps.searchValue,\n    toggleOpen = _useBaseProps.toggleOpen,\n    open = _useBaseProps.open,\n    notFoundContent = _useBaseProps.notFoundContent;\n  var _React$useContext = React.useContext(TreeSelectContext),\n    virtual = _React$useContext.virtual,\n    listHeight = _React$useContext.listHeight,\n    listItemHeight = _React$useContext.listItemHeight,\n    listItemScrollOffset = _React$useContext.listItemScrollOffset,\n    treeData = _React$useContext.treeData,\n    fieldNames = _React$useContext.fieldNames,\n    onSelect = _React$useContext.onSelect,\n    dropdownMatchSelectWidth = _React$useContext.dropdownMatchSelectWidth,\n    treeExpandAction = _React$useContext.treeExpandAction,\n    treeTitleRender = _React$useContext.treeTitleRender,\n    onPopupScroll = _React$useContext.onPopupScroll,\n    leftMaxCount = _React$useContext.leftMaxCount,\n    leafCountOnly = _React$useContext.leafCountOnly,\n    valueEntities = _React$useContext.valueEntities;\n  var _React$useContext2 = React.useContext(LegacyContext),\n    checkable = _React$useContext2.checkable,\n    checkedKeys = _React$useContext2.checkedKeys,\n    halfCheckedKeys = _React$useContext2.halfCheckedKeys,\n    treeExpandedKeys = _React$useContext2.treeExpandedKeys,\n    treeDefaultExpandAll = _React$useContext2.treeDefaultExpandAll,\n    treeDefaultExpandedKeys = _React$useContext2.treeDefaultExpandedKeys,\n    onTreeExpand = _React$useContext2.onTreeExpand,\n    treeIcon = _React$useContext2.treeIcon,\n    showTreeIcon = _React$useContext2.showTreeIcon,\n    switcherIcon = _React$useContext2.switcherIcon,\n    treeLine = _React$useContext2.treeLine,\n    treeNodeFilterProp = _React$useContext2.treeNodeFilterProp,\n    loadData = _React$useContext2.loadData,\n    treeLoadedKeys = _React$useContext2.treeLoadedKeys,\n    treeMotion = _React$useContext2.treeMotion,\n    onTreeLoad = _React$useContext2.onTreeLoad,\n    keyEntities = _React$useContext2.keyEntities;\n  var treeRef = React.useRef();\n  var memoTreeData = useMemo(function () {\n    return treeData;\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [open, treeData], function (prev, next) {\n    return next[0] && prev[1] !== next[1];\n  });\n\n  // ========================== Values ==========================\n  var mergedCheckedKeys = React.useMemo(function () {\n    if (!checkable) {\n      return null;\n    }\n    return {\n      checked: checkedKeys,\n      halfChecked: halfCheckedKeys\n    };\n  }, [checkable, checkedKeys, halfCheckedKeys]);\n\n  // ========================== Scroll ==========================\n  React.useEffect(function () {\n    // Single mode should scroll to current key\n    if (open && !multiple && checkedKeys.length) {\n      var _treeRef$current;\n      (_treeRef$current = treeRef.current) === null || _treeRef$current === void 0 || _treeRef$current.scrollTo({\n        key: checkedKeys[0]\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open]);\n\n  // ========================== Events ==========================\n  var onListMouseDown = function onListMouseDown(event) {\n    event.preventDefault();\n  };\n  var onInternalSelect = function onInternalSelect(__, info) {\n    var node = info.node;\n    if (checkable && isCheckDisabled(node)) {\n      return;\n    }\n    onSelect(node.key, {\n      selected: !checkedKeys.includes(node.key)\n    });\n    if (!multiple) {\n      toggleOpen(false);\n    }\n  };\n\n  // =========================== Keys ===========================\n  var _React$useState = React.useState(treeDefaultExpandedKeys),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    expandedKeys = _React$useState2[0],\n    setExpandedKeys = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    searchExpandedKeys = _React$useState4[0],\n    setSearchExpandedKeys = _React$useState4[1];\n  var mergedExpandedKeys = React.useMemo(function () {\n    if (treeExpandedKeys) {\n      return _toConsumableArray(treeExpandedKeys);\n    }\n    return searchValue ? searchExpandedKeys : expandedKeys;\n  }, [expandedKeys, searchExpandedKeys, treeExpandedKeys, searchValue]);\n  var onInternalExpand = function onInternalExpand(keys) {\n    setExpandedKeys(keys);\n    setSearchExpandedKeys(keys);\n    if (onTreeExpand) {\n      onTreeExpand(keys);\n    }\n  };\n\n  // ========================== Search ==========================\n  var lowerSearchValue = String(searchValue).toLowerCase();\n  var filterTreeNode = function filterTreeNode(treeNode) {\n    if (!lowerSearchValue) {\n      return false;\n    }\n    return String(treeNode[treeNodeFilterProp]).toLowerCase().includes(lowerSearchValue);\n  };\n  React.useEffect(function () {\n    if (searchValue) {\n      setSearchExpandedKeys(getAllKeys(treeData, fieldNames));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchValue]);\n\n  // ========================= Disabled =========================\n  // Cache disabled states in React state to ensure re-render when cache updates\n  var _React$useState5 = React.useState(function () {\n      return new Map();\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    disabledCache = _React$useState6[0],\n    setDisabledCache = _React$useState6[1];\n  React.useEffect(function () {\n    if (leftMaxCount) {\n      setDisabledCache(new Map());\n    }\n  }, [leftMaxCount]);\n  function getDisabledWithCache(node) {\n    var value = node[fieldNames.value];\n    if (!disabledCache.has(value)) {\n      var entity = valueEntities.get(value);\n      var isLeaf = (entity.children || []).length === 0;\n      if (!isLeaf) {\n        var checkableChildren = entity.children.filter(function (childTreeNode) {\n          return !childTreeNode.node.disabled && !childTreeNode.node.disableCheckbox && !checkedKeys.includes(childTreeNode.node[fieldNames.value]);\n        });\n        var checkableChildrenCount = checkableChildren.length;\n        disabledCache.set(value, checkableChildrenCount > leftMaxCount);\n      } else {\n        disabledCache.set(value, false);\n      }\n    }\n    return disabledCache.get(value);\n  }\n  var nodeDisabled = useEvent(function (node) {\n    var nodeValue = node[fieldNames.value];\n    if (checkedKeys.includes(nodeValue)) {\n      return false;\n    }\n    if (leftMaxCount === null) {\n      return false;\n    }\n    if (leftMaxCount <= 0) {\n      return true;\n    }\n\n    // This is a low performance calculation\n    if (leafCountOnly && leftMaxCount) {\n      return getDisabledWithCache(node);\n    }\n    return false;\n  });\n\n  // ========================== Get First Selectable Node ==========================\n  var getFirstMatchingNode = function getFirstMatchingNode(nodes) {\n    var _iterator = _createForOfIteratorHelper(nodes),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var node = _step.value;\n        if (node.disabled || node.selectable === false) {\n          continue;\n        }\n        if (searchValue) {\n          if (filterTreeNode(node)) {\n            return node;\n          }\n        } else {\n          return node;\n        }\n        if (node[fieldNames.children]) {\n          var matchInChildren = getFirstMatchingNode(node[fieldNames.children]);\n          if (matchInChildren) {\n            return matchInChildren;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return null;\n  };\n\n  // ========================== Active ==========================\n  var _React$useState7 = React.useState(null),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    activeKey = _React$useState8[0],\n    setActiveKey = _React$useState8[1];\n  var activeEntity = keyEntities[activeKey];\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n    var nextActiveKey = null;\n    var getFirstNode = function getFirstNode() {\n      var firstNode = getFirstMatchingNode(memoTreeData);\n      return firstNode ? firstNode[fieldNames.value] : null;\n    };\n\n    // single mode active first checked node\n    if (!multiple && checkedKeys.length && !searchValue) {\n      nextActiveKey = checkedKeys[0];\n    } else {\n      nextActiveKey = getFirstNode();\n    }\n    setActiveKey(nextActiveKey);\n  }, [open, searchValue]);\n\n  // ========================= Keyboard =========================\n  React.useImperativeHandle(ref, function () {\n    var _treeRef$current2;\n    return {\n      scrollTo: (_treeRef$current2 = treeRef.current) === null || _treeRef$current2 === void 0 ? void 0 : _treeRef$current2.scrollTo,\n      onKeyDown: function onKeyDown(event) {\n        var _treeRef$current3;\n        var which = event.which;\n        switch (which) {\n          // >>> Arrow keys\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n          case KeyCode.LEFT:\n          case KeyCode.RIGHT:\n            (_treeRef$current3 = treeRef.current) === null || _treeRef$current3 === void 0 || _treeRef$current3.onKeyDown(event);\n            break;\n\n          // >>> Select item\n          case KeyCode.ENTER:\n            {\n              if (activeEntity) {\n                var isNodeDisabled = nodeDisabled(activeEntity.node);\n                var _ref = (activeEntity === null || activeEntity === void 0 ? void 0 : activeEntity.node) || {},\n                  selectable = _ref.selectable,\n                  value = _ref.value,\n                  disabled = _ref.disabled;\n                if (selectable !== false && !disabled && !isNodeDisabled) {\n                  onInternalSelect(null, {\n                    node: {\n                      key: activeKey\n                    },\n                    selected: !checkedKeys.includes(value)\n                  });\n                }\n              }\n              break;\n            }\n\n          // >>> Close\n          case KeyCode.ESC:\n            {\n              toggleOpen(false);\n            }\n        }\n      },\n      onKeyUp: function onKeyUp() {}\n    };\n  });\n  var hasLoadDataFn = useMemo(function () {\n    return searchValue ? false : true;\n  }, [searchValue, treeExpandedKeys || expandedKeys], function (_ref2, _ref3) {\n    var _ref4 = _slicedToArray(_ref2, 1),\n      preSearchValue = _ref4[0];\n    var _ref5 = _slicedToArray(_ref3, 2),\n      nextSearchValue = _ref5[0],\n      nextExcludeSearchExpandedKeys = _ref5[1];\n    return preSearchValue !== nextSearchValue && !!(nextSearchValue || nextExcludeSearchExpandedKeys);\n  });\n  var syncLoadData = hasLoadDataFn ? loadData : null;\n\n  // ========================== Render ==========================\n  if (memoTreeData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      role: \"listbox\",\n      className: \"\".concat(prefixCls, \"-empty\"),\n      onMouseDown: onListMouseDown\n    }, notFoundContent);\n  }\n  var treeProps = {\n    fieldNames: fieldNames\n  };\n  if (treeLoadedKeys) {\n    treeProps.loadedKeys = treeLoadedKeys;\n  }\n  if (mergedExpandedKeys) {\n    treeProps.expandedKeys = mergedExpandedKeys;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: onListMouseDown\n  }, activeEntity && open && /*#__PURE__*/React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, activeEntity.node.value), /*#__PURE__*/React.createElement(UnstableContext.Provider, {\n    value: {\n      nodeDisabled: nodeDisabled\n    }\n  }, /*#__PURE__*/React.createElement(Tree, _extends({\n    ref: treeRef,\n    focusable: false,\n    prefixCls: \"\".concat(prefixCls, \"-tree\"),\n    treeData: memoTreeData,\n    height: listHeight,\n    itemHeight: listItemHeight,\n    itemScrollOffset: listItemScrollOffset,\n    virtual: virtual !== false && dropdownMatchSelectWidth !== false,\n    multiple: multiple,\n    icon: treeIcon,\n    showIcon: showTreeIcon,\n    switcherIcon: switcherIcon,\n    showLine: treeLine,\n    loadData: syncLoadData,\n    motion: treeMotion,\n    activeKey: activeKey\n    // We handle keys by out instead tree self\n    ,\n    checkable: checkable,\n    checkStrictly: true,\n    checkedKeys: mergedCheckedKeys,\n    selectedKeys: !checkable ? checkedKeys : [],\n    defaultExpandAll: treeDefaultExpandAll,\n    titleRender: treeTitleRender\n  }, treeProps, {\n    // Proxy event out\n    onActiveChange: setActiveKey,\n    onSelect: onInternalSelect,\n    onCheck: onInternalSelect,\n    onExpand: onInternalExpand,\n    onLoad: onTreeLoad,\n    filterTreeNode: filterTreeNode,\n    expandAction: treeExpandAction,\n    onScroll: onPopupScroll\n  }))));\n};\nvar RefOptionList = /*#__PURE__*/React.forwardRef(OptionList);\nif (process.env.NODE_ENV !== 'production') {\n  RefOptionList.displayName = 'OptionList';\n}\nexport default RefOptionList;"]},"metadata":{},"sourceType":"module"}