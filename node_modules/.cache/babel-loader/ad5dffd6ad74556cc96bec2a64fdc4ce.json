{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { forwardRef, useMemo } from 'react';\nimport { ColorPickerPrefixCls, defaultColor } from \"./util\";\nimport classNames from 'classnames';\nimport { Color } from \"./color\";\nimport ColorBlock from \"./components/ColorBlock\";\nimport Picker from \"./components/Picker\";\nimport useColorState from \"./hooks/useColorState\";\nimport useComponent from \"./hooks/useComponent\";\nvar HUE_COLORS = [{\n  color: 'rgb(255, 0, 0)',\n  percent: 0\n}, {\n  color: 'rgb(255, 255, 0)',\n  percent: 17\n}, {\n  color: 'rgb(0, 255, 0)',\n  percent: 33\n}, {\n  color: 'rgb(0, 255, 255)',\n  percent: 50\n}, {\n  color: 'rgb(0, 0, 255)',\n  percent: 67\n}, {\n  color: 'rgb(255, 0, 255)',\n  percent: 83\n}, {\n  color: 'rgb(255, 0, 0)',\n  percent: 100\n}];\nvar ColorPicker = /*#__PURE__*/forwardRef(function (props, ref) {\n  var value = props.value,\n      defaultValue = props.defaultValue,\n      _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? ColorPickerPrefixCls : _props$prefixCls,\n      onChange = props.onChange,\n      onChangeComplete = props.onChangeComplete,\n      className = props.className,\n      style = props.style,\n      panelRender = props.panelRender,\n      _props$disabledAlpha = props.disabledAlpha,\n      disabledAlpha = _props$disabledAlpha === void 0 ? false : _props$disabledAlpha,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      components = props.components; // ========================== Components ==========================\n\n  var _useComponent = useComponent(components),\n      _useComponent2 = _slicedToArray(_useComponent, 1),\n      Slider = _useComponent2[0]; // ============================ Color =============================\n\n\n  var _useColorState = useColorState(defaultValue || defaultColor, value),\n      _useColorState2 = _slicedToArray(_useColorState, 2),\n      colorValue = _useColorState2[0],\n      setColorValue = _useColorState2[1];\n\n  var alphaColor = useMemo(function () {\n    return colorValue.setA(1).toRgbString();\n  }, [colorValue]); // ============================ Events ============================\n\n  var handleChange = function handleChange(data, type) {\n    if (!value) {\n      setColorValue(data);\n    }\n\n    onChange === null || onChange === void 0 || onChange(data, type);\n  }; // Convert\n\n\n  var getHueColor = function getHueColor(hue) {\n    return new Color(colorValue.setHue(hue));\n  };\n\n  var getAlphaColor = function getAlphaColor(alpha) {\n    return new Color(colorValue.setA(alpha / 100));\n  }; // Slider change\n\n\n  var onHueChange = function onHueChange(hue) {\n    handleChange(getHueColor(hue), {\n      type: 'hue',\n      value: hue\n    });\n  };\n\n  var onAlphaChange = function onAlphaChange(alpha) {\n    handleChange(getAlphaColor(alpha), {\n      type: 'alpha',\n      value: alpha\n    });\n  }; // Complete\n\n\n  var onHueChangeComplete = function onHueChangeComplete(hue) {\n    if (onChangeComplete) {\n      onChangeComplete(getHueColor(hue));\n    }\n  };\n\n  var onAlphaChangeComplete = function onAlphaChangeComplete(alpha) {\n    if (onChangeComplete) {\n      onChangeComplete(getAlphaColor(alpha));\n    }\n  }; // ============================ Render ============================\n\n\n  var mergeCls = classNames(\"\".concat(prefixCls, \"-panel\"), className, _defineProperty({}, \"\".concat(prefixCls, \"-panel-disabled\"), disabled));\n  var sharedSliderProps = {\n    prefixCls: prefixCls,\n    disabled: disabled,\n    color: colorValue\n  };\n  var defaultPanel = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Picker, _extends({\n    onChange: handleChange\n  }, sharedSliderProps, {\n    onChangeComplete: onChangeComplete\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-slider-container\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(prefixCls, \"-slider-group\"), _defineProperty({}, \"\".concat(prefixCls, \"-slider-group-disabled-alpha\"), disabledAlpha))\n  }, /*#__PURE__*/React.createElement(Slider, _extends({}, sharedSliderProps, {\n    type: \"hue\",\n    colors: HUE_COLORS,\n    min: 0,\n    max: 359,\n    value: colorValue.getHue(),\n    onChange: onHueChange,\n    onChangeComplete: onHueChangeComplete\n  })), !disabledAlpha && /*#__PURE__*/React.createElement(Slider, _extends({}, sharedSliderProps, {\n    type: \"alpha\",\n    colors: [{\n      percent: 0,\n      color: 'rgba(255, 0, 4, 0)'\n    }, {\n      percent: 100,\n      color: alphaColor\n    }],\n    min: 0,\n    max: 100,\n    value: colorValue.a * 100,\n    onChange: onAlphaChange,\n    onChangeComplete: onAlphaChangeComplete\n  }))), /*#__PURE__*/React.createElement(ColorBlock, {\n    color: colorValue.toRgbString(),\n    prefixCls: prefixCls\n  })));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: mergeCls,\n    style: style,\n    ref: ref\n  }, typeof panelRender === 'function' ? panelRender(defaultPanel) : defaultPanel);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ColorPicker.displayName = 'ColorPicker';\n}\n\nexport default ColorPicker;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/@rc-component/color-picker/es/ColorPicker.js"],"names":["_extends","_defineProperty","_slicedToArray","React","forwardRef","useMemo","ColorPickerPrefixCls","defaultColor","classNames","Color","ColorBlock","Picker","useColorState","useComponent","HUE_COLORS","color","percent","ColorPicker","props","ref","value","defaultValue","_props$prefixCls","prefixCls","onChange","onChangeComplete","className","style","panelRender","_props$disabledAlpha","disabledAlpha","_props$disabled","disabled","components","_useComponent","_useComponent2","Slider","_useColorState","_useColorState2","colorValue","setColorValue","alphaColor","setA","toRgbString","handleChange","data","type","getHueColor","hue","setHue","getAlphaColor","alpha","onHueChange","onAlphaChange","onHueChangeComplete","onAlphaChangeComplete","mergeCls","concat","sharedSliderProps","defaultPanel","createElement","Fragment","colors","min","max","getHue","a","process","env","NODE_ENV","displayName"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,SAASC,oBAAT,EAA+BC,YAA/B,QAAmD,QAAnD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,IAAIC,UAAU,GAAG,CAAC;AAChBC,EAAAA,KAAK,EAAE,gBADS;AAEhBC,EAAAA,OAAO,EAAE;AAFO,CAAD,EAGd;AACDD,EAAAA,KAAK,EAAE,kBADN;AAEDC,EAAAA,OAAO,EAAE;AAFR,CAHc,EAMd;AACDD,EAAAA,KAAK,EAAE,gBADN;AAEDC,EAAAA,OAAO,EAAE;AAFR,CANc,EASd;AACDD,EAAAA,KAAK,EAAE,kBADN;AAEDC,EAAAA,OAAO,EAAE;AAFR,CATc,EAYd;AACDD,EAAAA,KAAK,EAAE,gBADN;AAEDC,EAAAA,OAAO,EAAE;AAFR,CAZc,EAed;AACDD,EAAAA,KAAK,EAAE,kBADN;AAEDC,EAAAA,OAAO,EAAE;AAFR,CAfc,EAkBd;AACDD,EAAAA,KAAK,EAAE,gBADN;AAEDC,EAAAA,OAAO,EAAE;AAFR,CAlBc,CAAjB;AAsBA,IAAIC,WAAW,GAAG,aAAab,UAAU,CAAC,UAAUc,KAAV,EAAiBC,GAAjB,EAAsB;AAC9D,MAAIC,KAAK,GAAGF,KAAK,CAACE,KAAlB;AAAA,MACEC,YAAY,GAAGH,KAAK,CAACG,YADvB;AAAA,MAEEC,gBAAgB,GAAGJ,KAAK,CAACK,SAF3B;AAAA,MAGEA,SAAS,GAAGD,gBAAgB,KAAK,KAAK,CAA1B,GAA8BhB,oBAA9B,GAAqDgB,gBAHnE;AAAA,MAIEE,QAAQ,GAAGN,KAAK,CAACM,QAJnB;AAAA,MAKEC,gBAAgB,GAAGP,KAAK,CAACO,gBAL3B;AAAA,MAMEC,SAAS,GAAGR,KAAK,CAACQ,SANpB;AAAA,MAOEC,KAAK,GAAGT,KAAK,CAACS,KAPhB;AAAA,MAQEC,WAAW,GAAGV,KAAK,CAACU,WARtB;AAAA,MASEC,oBAAoB,GAAGX,KAAK,CAACY,aAT/B;AAAA,MAUEA,aAAa,GAAGD,oBAAoB,KAAK,KAAK,CAA9B,GAAkC,KAAlC,GAA0CA,oBAV5D;AAAA,MAWEE,eAAe,GAAGb,KAAK,CAACc,QAX1B;AAAA,MAYEA,QAAQ,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,KAA7B,GAAqCA,eAZlD;AAAA,MAaEE,UAAU,GAAGf,KAAK,CAACe,UAbrB,CAD8D,CAgB9D;;AACA,MAAIC,aAAa,GAAGrB,YAAY,CAACoB,UAAD,CAAhC;AAAA,MACEE,cAAc,GAAGjC,cAAc,CAACgC,aAAD,EAAgB,CAAhB,CADjC;AAAA,MAEEE,MAAM,GAAGD,cAAc,CAAC,CAAD,CAFzB,CAjB8D,CAqB9D;;;AACA,MAAIE,cAAc,GAAGzB,aAAa,CAACS,YAAY,IAAId,YAAjB,EAA+Ba,KAA/B,CAAlC;AAAA,MACEkB,eAAe,GAAGpC,cAAc,CAACmC,cAAD,EAAiB,CAAjB,CADlC;AAAA,MAEEE,UAAU,GAAGD,eAAe,CAAC,CAAD,CAF9B;AAAA,MAGEE,aAAa,GAAGF,eAAe,CAAC,CAAD,CAHjC;;AAIA,MAAIG,UAAU,GAAGpC,OAAO,CAAC,YAAY;AACnC,WAAOkC,UAAU,CAACG,IAAX,CAAgB,CAAhB,EAAmBC,WAAnB,EAAP;AACD,GAFuB,EAErB,CAACJ,UAAD,CAFqB,CAAxB,CA1B8D,CA8B9D;;AACA,MAAIK,YAAY,GAAG,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;AACnD,QAAI,CAAC1B,KAAL,EAAY;AACVoB,MAAAA,aAAa,CAACK,IAAD,CAAb;AACD;;AACDrB,IAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,IAA4CA,QAAQ,CAACqB,IAAD,EAAOC,IAAP,CAApD;AACD,GALD,CA/B8D,CAsC9D;;;AACA,MAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AAC1C,WAAO,IAAIvC,KAAJ,CAAU8B,UAAU,CAACU,MAAX,CAAkBD,GAAlB,CAAV,CAAP;AACD,GAFD;;AAGA,MAAIE,aAAa,GAAG,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAChD,WAAO,IAAI1C,KAAJ,CAAU8B,UAAU,CAACG,IAAX,CAAgBS,KAAK,GAAG,GAAxB,CAAV,CAAP;AACD,GAFD,CA1C8D,CA8C9D;;;AACA,MAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBJ,GAArB,EAA0B;AAC1CJ,IAAAA,YAAY,CAACG,WAAW,CAACC,GAAD,CAAZ,EAAmB;AAC7BF,MAAAA,IAAI,EAAE,KADuB;AAE7B1B,MAAAA,KAAK,EAAE4B;AAFsB,KAAnB,CAAZ;AAID,GALD;;AAMA,MAAIK,aAAa,GAAG,SAASA,aAAT,CAAuBF,KAAvB,EAA8B;AAChDP,IAAAA,YAAY,CAACM,aAAa,CAACC,KAAD,CAAd,EAAuB;AACjCL,MAAAA,IAAI,EAAE,OAD2B;AAEjC1B,MAAAA,KAAK,EAAE+B;AAF0B,KAAvB,CAAZ;AAID,GALD,CArD8D,CA4D9D;;;AACA,MAAIG,mBAAmB,GAAG,SAASA,mBAAT,CAA6BN,GAA7B,EAAkC;AAC1D,QAAIvB,gBAAJ,EAAsB;AACpBA,MAAAA,gBAAgB,CAACsB,WAAW,CAACC,GAAD,CAAZ,CAAhB;AACD;AACF,GAJD;;AAKA,MAAIO,qBAAqB,GAAG,SAASA,qBAAT,CAA+BJ,KAA/B,EAAsC;AAChE,QAAI1B,gBAAJ,EAAsB;AACpBA,MAAAA,gBAAgB,CAACyB,aAAa,CAACC,KAAD,CAAd,CAAhB;AACD;AACF,GAJD,CAlE8D,CAwE9D;;;AACA,MAAIK,QAAQ,GAAGhD,UAAU,CAAC,GAAGiD,MAAH,CAAUlC,SAAV,EAAqB,QAArB,CAAD,EAAiCG,SAAjC,EAA4CzB,eAAe,CAAC,EAAD,EAAK,GAAGwD,MAAH,CAAUlC,SAAV,EAAqB,iBAArB,CAAL,EAA8CS,QAA9C,CAA3D,CAAzB;AACA,MAAI0B,iBAAiB,GAAG;AACtBnC,IAAAA,SAAS,EAAEA,SADW;AAEtBS,IAAAA,QAAQ,EAAEA,QAFY;AAGtBjB,IAAAA,KAAK,EAAEwB;AAHe,GAAxB;AAKA,MAAIoB,YAAY,GAAG,aAAaxD,KAAK,CAACyD,aAAN,CAAoBzD,KAAK,CAAC0D,QAA1B,EAAoC,IAApC,EAA0C,aAAa1D,KAAK,CAACyD,aAAN,CAAoBjD,MAApB,EAA4BX,QAAQ,CAAC;AAC1HwB,IAAAA,QAAQ,EAAEoB;AADgH,GAAD,EAExHc,iBAFwH,EAErG;AACpBjC,IAAAA,gBAAgB,EAAEA;AADE,GAFqG,CAApC,CAAvD,EAI3B,aAAatB,KAAK,CAACyD,aAAN,CAAoB,KAApB,EAA2B;AAC3ClC,IAAAA,SAAS,EAAE,GAAG+B,MAAH,CAAUlC,SAAV,EAAqB,mBAArB;AADgC,GAA3B,EAEf,aAAapB,KAAK,CAACyD,aAAN,CAAoB,KAApB,EAA2B;AACzClC,IAAAA,SAAS,EAAElB,UAAU,CAAC,GAAGiD,MAAH,CAAUlC,SAAV,EAAqB,eAArB,CAAD,EAAwCtB,eAAe,CAAC,EAAD,EAAK,GAAGwD,MAAH,CAAUlC,SAAV,EAAqB,8BAArB,CAAL,EAA2DO,aAA3D,CAAvD;AADoB,GAA3B,EAEb,aAAa3B,KAAK,CAACyD,aAAN,CAAoBxB,MAApB,EAA4BpC,QAAQ,CAAC,EAAD,EAAK0D,iBAAL,EAAwB;AAC1EZ,IAAAA,IAAI,EAAE,KADoE;AAE1EgB,IAAAA,MAAM,EAAEhD,UAFkE;AAG1EiD,IAAAA,GAAG,EAAE,CAHqE;AAI1EC,IAAAA,GAAG,EAAE,GAJqE;AAK1E5C,IAAAA,KAAK,EAAEmB,UAAU,CAAC0B,MAAX,EALmE;AAM1EzC,IAAAA,QAAQ,EAAE4B,WANgE;AAO1E3B,IAAAA,gBAAgB,EAAE6B;AAPwD,GAAxB,CAApC,CAFA,EAUX,CAACxB,aAAD,IAAkB,aAAa3B,KAAK,CAACyD,aAAN,CAAoBxB,MAApB,EAA4BpC,QAAQ,CAAC,EAAD,EAAK0D,iBAAL,EAAwB;AAC9FZ,IAAAA,IAAI,EAAE,OADwF;AAE9FgB,IAAAA,MAAM,EAAE,CAAC;AACP9C,MAAAA,OAAO,EAAE,CADF;AAEPD,MAAAA,KAAK,EAAE;AAFA,KAAD,EAGL;AACDC,MAAAA,OAAO,EAAE,GADR;AAEDD,MAAAA,KAAK,EAAE0B;AAFN,KAHK,CAFsF;AAS9FsB,IAAAA,GAAG,EAAE,CATyF;AAU9FC,IAAAA,GAAG,EAAE,GAVyF;AAW9F5C,IAAAA,KAAK,EAAEmB,UAAU,CAAC2B,CAAX,GAAe,GAXwE;AAY9F1C,IAAAA,QAAQ,EAAE6B,aAZoF;AAa9F5B,IAAAA,gBAAgB,EAAE8B;AAb4E,GAAxB,CAApC,CAVpB,CAFE,EA0BZ,aAAapD,KAAK,CAACyD,aAAN,CAAoBlD,UAApB,EAAgC;AACjDK,IAAAA,KAAK,EAAEwB,UAAU,CAACI,WAAX,EAD0C;AAEjDpB,IAAAA,SAAS,EAAEA;AAFsC,GAAhC,CA1BD,CAJc,CAAhC;AAkCA,SAAO,aAAapB,KAAK,CAACyD,aAAN,CAAoB,KAApB,EAA2B;AAC7ClC,IAAAA,SAAS,EAAE8B,QADkC;AAE7C7B,IAAAA,KAAK,EAAEA,KAFsC;AAG7CR,IAAAA,GAAG,EAAEA;AAHwC,GAA3B,EAIjB,OAAOS,WAAP,KAAuB,UAAvB,GAAoCA,WAAW,CAAC+B,YAAD,CAA/C,GAAgEA,YAJ/C,CAApB;AAKD,CAtHwC,CAAzC;;AAuHA,IAAIQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCpD,EAAAA,WAAW,CAACqD,WAAZ,GAA0B,aAA1B;AACD;;AACD,eAAerD,WAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { forwardRef, useMemo } from 'react';\nimport { ColorPickerPrefixCls, defaultColor } from \"./util\";\nimport classNames from 'classnames';\nimport { Color } from \"./color\";\nimport ColorBlock from \"./components/ColorBlock\";\nimport Picker from \"./components/Picker\";\nimport useColorState from \"./hooks/useColorState\";\nimport useComponent from \"./hooks/useComponent\";\nvar HUE_COLORS = [{\n  color: 'rgb(255, 0, 0)',\n  percent: 0\n}, {\n  color: 'rgb(255, 255, 0)',\n  percent: 17\n}, {\n  color: 'rgb(0, 255, 0)',\n  percent: 33\n}, {\n  color: 'rgb(0, 255, 255)',\n  percent: 50\n}, {\n  color: 'rgb(0, 0, 255)',\n  percent: 67\n}, {\n  color: 'rgb(255, 0, 255)',\n  percent: 83\n}, {\n  color: 'rgb(255, 0, 0)',\n  percent: 100\n}];\nvar ColorPicker = /*#__PURE__*/forwardRef(function (props, ref) {\n  var value = props.value,\n    defaultValue = props.defaultValue,\n    _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? ColorPickerPrefixCls : _props$prefixCls,\n    onChange = props.onChange,\n    onChangeComplete = props.onChangeComplete,\n    className = props.className,\n    style = props.style,\n    panelRender = props.panelRender,\n    _props$disabledAlpha = props.disabledAlpha,\n    disabledAlpha = _props$disabledAlpha === void 0 ? false : _props$disabledAlpha,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    components = props.components;\n\n  // ========================== Components ==========================\n  var _useComponent = useComponent(components),\n    _useComponent2 = _slicedToArray(_useComponent, 1),\n    Slider = _useComponent2[0];\n\n  // ============================ Color =============================\n  var _useColorState = useColorState(defaultValue || defaultColor, value),\n    _useColorState2 = _slicedToArray(_useColorState, 2),\n    colorValue = _useColorState2[0],\n    setColorValue = _useColorState2[1];\n  var alphaColor = useMemo(function () {\n    return colorValue.setA(1).toRgbString();\n  }, [colorValue]);\n\n  // ============================ Events ============================\n  var handleChange = function handleChange(data, type) {\n    if (!value) {\n      setColorValue(data);\n    }\n    onChange === null || onChange === void 0 || onChange(data, type);\n  };\n\n  // Convert\n  var getHueColor = function getHueColor(hue) {\n    return new Color(colorValue.setHue(hue));\n  };\n  var getAlphaColor = function getAlphaColor(alpha) {\n    return new Color(colorValue.setA(alpha / 100));\n  };\n\n  // Slider change\n  var onHueChange = function onHueChange(hue) {\n    handleChange(getHueColor(hue), {\n      type: 'hue',\n      value: hue\n    });\n  };\n  var onAlphaChange = function onAlphaChange(alpha) {\n    handleChange(getAlphaColor(alpha), {\n      type: 'alpha',\n      value: alpha\n    });\n  };\n\n  // Complete\n  var onHueChangeComplete = function onHueChangeComplete(hue) {\n    if (onChangeComplete) {\n      onChangeComplete(getHueColor(hue));\n    }\n  };\n  var onAlphaChangeComplete = function onAlphaChangeComplete(alpha) {\n    if (onChangeComplete) {\n      onChangeComplete(getAlphaColor(alpha));\n    }\n  };\n\n  // ============================ Render ============================\n  var mergeCls = classNames(\"\".concat(prefixCls, \"-panel\"), className, _defineProperty({}, \"\".concat(prefixCls, \"-panel-disabled\"), disabled));\n  var sharedSliderProps = {\n    prefixCls: prefixCls,\n    disabled: disabled,\n    color: colorValue\n  };\n  var defaultPanel = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Picker, _extends({\n    onChange: handleChange\n  }, sharedSliderProps, {\n    onChangeComplete: onChangeComplete\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-slider-container\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(prefixCls, \"-slider-group\"), _defineProperty({}, \"\".concat(prefixCls, \"-slider-group-disabled-alpha\"), disabledAlpha))\n  }, /*#__PURE__*/React.createElement(Slider, _extends({}, sharedSliderProps, {\n    type: \"hue\",\n    colors: HUE_COLORS,\n    min: 0,\n    max: 359,\n    value: colorValue.getHue(),\n    onChange: onHueChange,\n    onChangeComplete: onHueChangeComplete\n  })), !disabledAlpha && /*#__PURE__*/React.createElement(Slider, _extends({}, sharedSliderProps, {\n    type: \"alpha\",\n    colors: [{\n      percent: 0,\n      color: 'rgba(255, 0, 4, 0)'\n    }, {\n      percent: 100,\n      color: alphaColor\n    }],\n    min: 0,\n    max: 100,\n    value: colorValue.a * 100,\n    onChange: onAlphaChange,\n    onChangeComplete: onAlphaChangeComplete\n  }))), /*#__PURE__*/React.createElement(ColorBlock, {\n    color: colorValue.toRgbString(),\n    prefixCls: prefixCls\n  })));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: mergeCls,\n    style: style,\n    ref: ref\n  }, typeof panelRender === 'function' ? panelRender(defaultPanel) : defaultPanel);\n});\nif (process.env.NODE_ENV !== 'production') {\n  ColorPicker.displayName = 'ColorPicker';\n}\nexport default ColorPicker;"]},"metadata":{},"sourceType":"module"}