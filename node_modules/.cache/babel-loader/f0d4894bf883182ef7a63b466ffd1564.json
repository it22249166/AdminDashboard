{"ast":null,"code":"import raf from \"rc-util/es/raf\";\nimport * as React from 'react';\n\nfunction smoothScrollOffset(offset) {\n  return Math.floor(Math.pow(offset, 0.5));\n}\n\nexport function getPageXY(e, horizontal) {\n  var obj = 'touches' in e ? e.touches[0] : e;\n  return obj[horizontal ? 'pageX' : 'pageY'] - window[horizontal ? 'scrollX' : 'scrollY'];\n}\nexport default function useScrollDrag(inVirtual, componentRef, onScrollOffset) {\n  React.useEffect(function () {\n    var ele = componentRef.current;\n\n    if (inVirtual && ele) {\n      var mouseDownLock = false;\n      var rafId;\n\n      var _offset;\n\n      var stopScroll = function stopScroll() {\n        raf.cancel(rafId);\n      };\n\n      var continueScroll = function continueScroll() {\n        stopScroll();\n        rafId = raf(function () {\n          onScrollOffset(_offset);\n          continueScroll();\n        });\n      };\n\n      var onMouseDown = function onMouseDown(e) {\n        // Skip if element set draggable\n        if (e.target.draggable || e.button !== 0) {\n          return;\n        } // Skip if nest List has handled this event\n\n\n        var event = e;\n\n        if (!event._virtualHandled) {\n          event._virtualHandled = true;\n          mouseDownLock = true;\n        }\n      };\n\n      var onMouseUp = function onMouseUp() {\n        mouseDownLock = false;\n        stopScroll();\n      };\n\n      var onMouseMove = function onMouseMove(e) {\n        if (mouseDownLock) {\n          var mouseY = getPageXY(e, false);\n\n          var _ele$getBoundingClien = ele.getBoundingClientRect(),\n              top = _ele$getBoundingClien.top,\n              bottom = _ele$getBoundingClien.bottom;\n\n          if (mouseY <= top) {\n            var diff = top - mouseY;\n            _offset = -smoothScrollOffset(diff);\n            continueScroll();\n          } else if (mouseY >= bottom) {\n            var _diff = mouseY - bottom;\n\n            _offset = smoothScrollOffset(_diff);\n            continueScroll();\n          } else {\n            stopScroll();\n          }\n        }\n      };\n\n      ele.addEventListener('mousedown', onMouseDown);\n      ele.ownerDocument.addEventListener('mouseup', onMouseUp);\n      ele.ownerDocument.addEventListener('mousemove', onMouseMove);\n      return function () {\n        ele.removeEventListener('mousedown', onMouseDown);\n        ele.ownerDocument.removeEventListener('mouseup', onMouseUp);\n        ele.ownerDocument.removeEventListener('mousemove', onMouseMove);\n        stopScroll();\n      };\n    }\n  }, [inVirtual]);\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-virtual-list/es/hooks/useScrollDrag.js"],"names":["raf","React","smoothScrollOffset","offset","Math","floor","pow","getPageXY","e","horizontal","obj","touches","window","useScrollDrag","inVirtual","componentRef","onScrollOffset","useEffect","ele","current","mouseDownLock","rafId","_offset","stopScroll","cancel","continueScroll","onMouseDown","target","draggable","button","event","_virtualHandled","onMouseUp","onMouseMove","mouseY","_ele$getBoundingClien","getBoundingClientRect","top","bottom","diff","_diff","addEventListener","ownerDocument","removeEventListener"],"mappings":"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","sourcesContent":["import raf from \"rc-util/es/raf\";\nimport * as React from 'react';\nfunction smoothScrollOffset(offset) {\n  return Math.floor(Math.pow(offset, 0.5));\n}\nexport function getPageXY(e, horizontal) {\n  var obj = 'touches' in e ? e.touches[0] : e;\n  return obj[horizontal ? 'pageX' : 'pageY'] - window[horizontal ? 'scrollX' : 'scrollY'];\n}\nexport default function useScrollDrag(inVirtual, componentRef, onScrollOffset) {\n  React.useEffect(function () {\n    var ele = componentRef.current;\n    if (inVirtual && ele) {\n      var mouseDownLock = false;\n      var rafId;\n      var _offset;\n      var stopScroll = function stopScroll() {\n        raf.cancel(rafId);\n      };\n      var continueScroll = function continueScroll() {\n        stopScroll();\n        rafId = raf(function () {\n          onScrollOffset(_offset);\n          continueScroll();\n        });\n      };\n      var onMouseDown = function onMouseDown(e) {\n        // Skip if element set draggable\n        if (e.target.draggable || e.button !== 0) {\n          return;\n        }\n        // Skip if nest List has handled this event\n        var event = e;\n        if (!event._virtualHandled) {\n          event._virtualHandled = true;\n          mouseDownLock = true;\n        }\n      };\n      var onMouseUp = function onMouseUp() {\n        mouseDownLock = false;\n        stopScroll();\n      };\n      var onMouseMove = function onMouseMove(e) {\n        if (mouseDownLock) {\n          var mouseY = getPageXY(e, false);\n          var _ele$getBoundingClien = ele.getBoundingClientRect(),\n            top = _ele$getBoundingClien.top,\n            bottom = _ele$getBoundingClien.bottom;\n          if (mouseY <= top) {\n            var diff = top - mouseY;\n            _offset = -smoothScrollOffset(diff);\n            continueScroll();\n          } else if (mouseY >= bottom) {\n            var _diff = mouseY - bottom;\n            _offset = smoothScrollOffset(_diff);\n            continueScroll();\n          } else {\n            stopScroll();\n          }\n        }\n      };\n      ele.addEventListener('mousedown', onMouseDown);\n      ele.ownerDocument.addEventListener('mouseup', onMouseUp);\n      ele.ownerDocument.addEventListener('mousemove', onMouseMove);\n      return function () {\n        ele.removeEventListener('mousedown', onMouseDown);\n        ele.ownerDocument.removeEventListener('mouseup', onMouseUp);\n        ele.ownerDocument.removeEventListener('mousemove', onMouseMove);\n        stopScroll();\n      };\n    }\n  }, [inVirtual]);\n}"]},"metadata":{},"sourceType":"module"}