{"ast":null,"code":"\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useContext } from 'react';\nimport warning from '../_util/warning';\nimport ConfigProvider, { ConfigContext, globalConfig, warnContext } from '../config-provider';\nimport { getReactRender } from '../config-provider/UnstableContext';\nimport ConfirmDialog from './ConfirmDialog';\nimport destroyFns from './destroyFns';\nimport { getConfirmLocale } from './locale';\nlet defaultRootPrefixCls = '';\n\nfunction getRootPrefixCls() {\n  return defaultRootPrefixCls;\n}\n\nconst ConfirmDialogWrapper = props => {\n  var _a, _b;\n\n  const {\n    prefixCls: customizePrefixCls,\n    getContainer,\n    direction\n  } = props;\n  const runtimeLocale = getConfirmLocale();\n  const config = useContext(ConfigContext);\n  const rootPrefixCls = getRootPrefixCls() || config.getPrefixCls(); // because Modal.config set rootPrefixCls, which is different from other components\n\n  const prefixCls = customizePrefixCls || `${rootPrefixCls}-modal`;\n  let mergedGetContainer = getContainer;\n\n  if (mergedGetContainer === false) {\n    mergedGetContainer = undefined;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Modal', 'Static method not support `getContainer` to be `false` since it do not have context env.') : void 0;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(ConfirmDialog, Object.assign({}, props, {\n    rootPrefixCls: rootPrefixCls,\n    prefixCls: prefixCls,\n    iconPrefixCls: config.iconPrefixCls,\n    theme: config.theme,\n    direction: direction !== null && direction !== void 0 ? direction : config.direction,\n    locale: (_b = (_a = config.locale) === null || _a === void 0 ? void 0 : _a.Modal) !== null && _b !== void 0 ? _b : runtimeLocale,\n    getContainer: mergedGetContainer\n  }));\n};\n\nexport default function confirm(config) {\n  const global = globalConfig();\n\n  if (process.env.NODE_ENV !== 'production' && !global.holderRender) {\n    warnContext('Modal');\n  }\n\n  const container = document.createDocumentFragment();\n  let currentConfig = Object.assign(Object.assign({}, config), {\n    close,\n    open: true\n  });\n  let timeoutId;\n  let reactUnmount;\n\n  function destroy() {\n    var _a;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const triggerCancel = args.some(param => param === null || param === void 0 ? void 0 : param.triggerCancel);\n\n    if (triggerCancel) {\n      var _a2;\n\n      (_a = config.onCancel) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [config, () => {}].concat(_toConsumableArray(args.slice(1))));\n    }\n\n    for (let i = 0; i < destroyFns.length; i++) {\n      const fn = destroyFns[i];\n\n      if (fn === close) {\n        destroyFns.splice(i, 1);\n        break;\n      }\n    }\n\n    reactUnmount();\n  }\n\n  function render(props) {\n    clearTimeout(timeoutId);\n    /**\n     * https://github.com/ant-design/ant-design/issues/23623\n     *\n     * Sync render blocks React event. Let's make this async.\n     */\n\n    timeoutId = setTimeout(() => {\n      const rootPrefixCls = global.getPrefixCls(undefined, getRootPrefixCls());\n      const iconPrefixCls = global.getIconPrefixCls();\n      const theme = global.getTheme();\n      const dom = /*#__PURE__*/React.createElement(ConfirmDialogWrapper, Object.assign({}, props));\n      const reactRender = getReactRender();\n      reactUnmount = reactRender( /*#__PURE__*/React.createElement(ConfigProvider, {\n        prefixCls: rootPrefixCls,\n        iconPrefixCls: iconPrefixCls,\n        theme: theme\n      }, global.holderRender ? global.holderRender(dom) : dom), container);\n    });\n  }\n\n  function close() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    currentConfig = Object.assign(Object.assign({}, currentConfig), {\n      open: false,\n      afterClose: () => {\n        if (typeof config.afterClose === 'function') {\n          config.afterClose();\n        } // @ts-ignore\n\n\n        destroy.apply(this, args);\n      }\n    }); // Legacy support\n\n    if (currentConfig.visible) {\n      delete currentConfig.visible;\n    }\n\n    render(currentConfig);\n  }\n\n  function update(configUpdate) {\n    if (typeof configUpdate === 'function') {\n      currentConfig = configUpdate(currentConfig);\n    } else {\n      currentConfig = Object.assign(Object.assign({}, currentConfig), configUpdate);\n    }\n\n    render(currentConfig);\n  }\n\n  render(currentConfig);\n  destroyFns.push(close);\n  return {\n    destroy: close,\n    update\n  };\n}\nexport function withWarn(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'warning'\n  });\n}\nexport function withInfo(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'info'\n  });\n}\nexport function withSuccess(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'success'\n  });\n}\nexport function withError(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'error'\n  });\n}\nexport function withConfirm(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'confirm'\n  });\n}\nexport function modalGlobalConfig(_ref) {\n  let {\n    rootPrefixCls\n  } = _ref;\n  process.env.NODE_ENV !== \"production\" ? warning(false, 'Modal', 'Modal.config is deprecated. Please use ConfigProvider.config instead.') : void 0;\n  defaultRootPrefixCls = rootPrefixCls;\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/modal/confirm.js"],"names":["_toConsumableArray","React","useContext","warning","ConfigProvider","ConfigContext","globalConfig","warnContext","getReactRender","ConfirmDialog","destroyFns","getConfirmLocale","defaultRootPrefixCls","getRootPrefixCls","ConfirmDialogWrapper","props","_a","_b","prefixCls","customizePrefixCls","getContainer","direction","runtimeLocale","config","rootPrefixCls","getPrefixCls","mergedGetContainer","undefined","process","env","NODE_ENV","createElement","Object","assign","iconPrefixCls","theme","locale","Modal","confirm","global","holderRender","container","document","createDocumentFragment","currentConfig","close","open","timeoutId","reactUnmount","destroy","_len","arguments","length","args","Array","_key","triggerCancel","some","param","_a2","onCancel","call","apply","concat","slice","i","fn","splice","render","clearTimeout","setTimeout","getIconPrefixCls","getTheme","dom","reactRender","_len2","_key2","afterClose","visible","update","configUpdate","push","withWarn","type","withInfo","withSuccess","withError","withConfirm","modalGlobalConfig","_ref"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useContext } from 'react';\nimport warning from '../_util/warning';\nimport ConfigProvider, { ConfigContext, globalConfig, warnContext } from '../config-provider';\nimport { getReactRender } from '../config-provider/UnstableContext';\nimport ConfirmDialog from './ConfirmDialog';\nimport destroyFns from './destroyFns';\nimport { getConfirmLocale } from './locale';\nlet defaultRootPrefixCls = '';\nfunction getRootPrefixCls() {\n  return defaultRootPrefixCls;\n}\nconst ConfirmDialogWrapper = props => {\n  var _a, _b;\n  const {\n    prefixCls: customizePrefixCls,\n    getContainer,\n    direction\n  } = props;\n  const runtimeLocale = getConfirmLocale();\n  const config = useContext(ConfigContext);\n  const rootPrefixCls = getRootPrefixCls() || config.getPrefixCls();\n  // because Modal.config set rootPrefixCls, which is different from other components\n  const prefixCls = customizePrefixCls || `${rootPrefixCls}-modal`;\n  let mergedGetContainer = getContainer;\n  if (mergedGetContainer === false) {\n    mergedGetContainer = undefined;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Modal', 'Static method not support `getContainer` to be `false` since it do not have context env.') : void 0;\n    }\n  }\n  return /*#__PURE__*/React.createElement(ConfirmDialog, Object.assign({}, props, {\n    rootPrefixCls: rootPrefixCls,\n    prefixCls: prefixCls,\n    iconPrefixCls: config.iconPrefixCls,\n    theme: config.theme,\n    direction: direction !== null && direction !== void 0 ? direction : config.direction,\n    locale: (_b = (_a = config.locale) === null || _a === void 0 ? void 0 : _a.Modal) !== null && _b !== void 0 ? _b : runtimeLocale,\n    getContainer: mergedGetContainer\n  }));\n};\nexport default function confirm(config) {\n  const global = globalConfig();\n  if (process.env.NODE_ENV !== 'production' && !global.holderRender) {\n    warnContext('Modal');\n  }\n  const container = document.createDocumentFragment();\n  let currentConfig = Object.assign(Object.assign({}, config), {\n    close,\n    open: true\n  });\n  let timeoutId;\n  let reactUnmount;\n  function destroy() {\n    var _a;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const triggerCancel = args.some(param => param === null || param === void 0 ? void 0 : param.triggerCancel);\n    if (triggerCancel) {\n      var _a2;\n      (_a = config.onCancel) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [config, () => {}].concat(_toConsumableArray(args.slice(1))));\n    }\n    for (let i = 0; i < destroyFns.length; i++) {\n      const fn = destroyFns[i];\n      if (fn === close) {\n        destroyFns.splice(i, 1);\n        break;\n      }\n    }\n    reactUnmount();\n  }\n  function render(props) {\n    clearTimeout(timeoutId);\n    /**\n     * https://github.com/ant-design/ant-design/issues/23623\n     *\n     * Sync render blocks React event. Let's make this async.\n     */\n    timeoutId = setTimeout(() => {\n      const rootPrefixCls = global.getPrefixCls(undefined, getRootPrefixCls());\n      const iconPrefixCls = global.getIconPrefixCls();\n      const theme = global.getTheme();\n      const dom = /*#__PURE__*/React.createElement(ConfirmDialogWrapper, Object.assign({}, props));\n      const reactRender = getReactRender();\n      reactUnmount = reactRender(/*#__PURE__*/React.createElement(ConfigProvider, {\n        prefixCls: rootPrefixCls,\n        iconPrefixCls: iconPrefixCls,\n        theme: theme\n      }, global.holderRender ? global.holderRender(dom) : dom), container);\n    });\n  }\n  function close() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    currentConfig = Object.assign(Object.assign({}, currentConfig), {\n      open: false,\n      afterClose: () => {\n        if (typeof config.afterClose === 'function') {\n          config.afterClose();\n        }\n        // @ts-ignore\n        destroy.apply(this, args);\n      }\n    });\n    // Legacy support\n    if (currentConfig.visible) {\n      delete currentConfig.visible;\n    }\n    render(currentConfig);\n  }\n  function update(configUpdate) {\n    if (typeof configUpdate === 'function') {\n      currentConfig = configUpdate(currentConfig);\n    } else {\n      currentConfig = Object.assign(Object.assign({}, currentConfig), configUpdate);\n    }\n    render(currentConfig);\n  }\n  render(currentConfig);\n  destroyFns.push(close);\n  return {\n    destroy: close,\n    update\n  };\n}\nexport function withWarn(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'warning'\n  });\n}\nexport function withInfo(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'info'\n  });\n}\nexport function withSuccess(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'success'\n  });\n}\nexport function withError(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'error'\n  });\n}\nexport function withConfirm(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'confirm'\n  });\n}\nexport function modalGlobalConfig(_ref) {\n  let {\n    rootPrefixCls\n  } = _ref;\n  process.env.NODE_ENV !== \"production\" ? warning(false, 'Modal', 'Modal.config is deprecated. Please use ConfigProvider.config instead.') : void 0;\n  defaultRootPrefixCls = rootPrefixCls;\n}"]},"metadata":{},"sourceType":"module"}