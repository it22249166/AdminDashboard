{"ast":null,"code":"\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Field, FieldContext, ListContext } from 'rc-field-form';\nimport useState from \"rc-util/es/hooks/useState\";\nimport { supportRef } from \"rc-util/es/ref\";\nimport { cloneElement } from '../../_util/reactNode';\nimport { devUseWarning } from '../../_util/warning';\nimport { ConfigContext } from '../../config-provider';\nimport useCSSVarCls from '../../config-provider/hooks/useCSSVarCls';\nimport { FormContext, NoStyleItemContext } from '../context';\nimport useChildren from '../hooks/useChildren';\nimport useFormItemStatus from '../hooks/useFormItemStatus';\nimport useFrameState from '../hooks/useFrameState';\nimport useItemRef from '../hooks/useItemRef';\nimport useStyle from '../style';\nimport { getFieldId, toArray } from '../util';\nimport ItemHolder from './ItemHolder';\nimport StatusProvider from './StatusProvider';\nconst NAME_SPLIT = '__SPLIT__';\nconst _ValidateStatuses = ['success', 'warning', 'error', 'validating', '']; // https://github.com/ant-design/ant-design/issues/46417\n// `getValueProps` may modify the value props name,\n// we should check if the control is similar.\n\nfunction isSimilarControl(a, b) {\n  const keysA = Object.keys(a);\n  const keysB = Object.keys(b);\n  return keysA.length === keysB.length && keysA.every(key => {\n    const propValueA = a[key];\n    const propValueB = b[key];\n    return propValueA === propValueB || typeof propValueA === 'function' || typeof propValueB === 'function';\n  });\n}\n\nconst MemoInput = /*#__PURE__*/React.memo(_ref => {\n  let {\n    children\n  } = _ref;\n  return children;\n}, (prev, next) => isSimilarControl(prev.control, next.control) && prev.update === next.update && prev.childProps.length === next.childProps.length && prev.childProps.every((value, index) => value === next.childProps[index]));\n\nfunction genEmptyMeta() {\n  return {\n    errors: [],\n    warnings: [],\n    touched: false,\n    validating: false,\n    name: [],\n    validated: false\n  };\n}\n\nfunction InternalFormItem(props) {\n  const {\n    name,\n    noStyle,\n    className,\n    dependencies,\n    prefixCls: customizePrefixCls,\n    shouldUpdate,\n    rules,\n    children,\n    required,\n    label,\n    messageVariables,\n    trigger = 'onChange',\n    validateTrigger,\n    hidden,\n    help,\n    layout\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const {\n    name: formName\n  } = React.useContext(FormContext);\n  const mergedChildren = useChildren(children);\n  const isRenderProps = typeof mergedChildren === 'function';\n  const notifyParentMetaChange = React.useContext(NoStyleItemContext);\n  const {\n    validateTrigger: contextValidateTrigger\n  } = React.useContext(FieldContext);\n  const mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : contextValidateTrigger;\n  const hasName = !(name === undefined || name === null);\n  const prefixCls = getPrefixCls('form', customizePrefixCls); // Style\n\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls); // ========================= Warn =========================\n\n  const warning = devUseWarning('Form.Item');\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(name !== null, 'usage', '`null` is passed as `name` property') : void 0;\n  } // ========================= MISC =========================\n  // Get `noStyle` required info\n\n\n  const listContext = React.useContext(ListContext);\n  const fieldKeyPathRef = React.useRef(null); // ======================== Errors ========================\n  // >>>>> Collect sub field errors\n\n  const [subFieldErrors, setSubFieldErrors] = useFrameState({}); // >>>>> Current field errors\n\n  const [meta, setMeta] = useState(() => genEmptyMeta());\n\n  const onMetaChange = nextMeta => {\n    // This keyInfo is not correct when field is removed\n    // Since origin keyManager no longer keep the origin key anymore\n    // Which means we need cache origin one and reuse when removed\n    const keyInfo = listContext === null || listContext === void 0 ? void 0 : listContext.getKey(nextMeta.name); // Destroy will reset all the meta\n\n    setMeta(nextMeta.destroy ? genEmptyMeta() : nextMeta, true); // Bump to parent since noStyle\n\n    if (noStyle && help !== false && notifyParentMetaChange) {\n      let namePath = nextMeta.name;\n\n      if (!nextMeta.destroy) {\n        if (keyInfo !== undefined) {\n          const [fieldKey, restPath] = keyInfo;\n          namePath = [fieldKey].concat(_toConsumableArray(restPath));\n          fieldKeyPathRef.current = namePath;\n        }\n      } else {\n        // Use origin cache data\n        namePath = fieldKeyPathRef.current || namePath;\n      }\n\n      notifyParentMetaChange(nextMeta, namePath);\n    }\n  }; // >>>>> Collect noStyle Field error to the top FormItem\n\n\n  const onSubItemMetaChange = (subMeta, uniqueKeys) => {\n    // Only `noStyle` sub item will trigger\n    setSubFieldErrors(prevSubFieldErrors => {\n      const clone = Object.assign({}, prevSubFieldErrors); // name: ['user', 1] + key: [4] = ['user', 4]\n\n      const mergedNamePath = [].concat(_toConsumableArray(subMeta.name.slice(0, -1)), _toConsumableArray(uniqueKeys));\n      const mergedNameKey = mergedNamePath.join(NAME_SPLIT);\n\n      if (subMeta.destroy) {\n        // Remove\n        delete clone[mergedNameKey];\n      } else {\n        // Update\n        clone[mergedNameKey] = subMeta;\n      }\n\n      return clone;\n    });\n  }; // >>>>> Get merged errors\n\n\n  const [mergedErrors, mergedWarnings] = React.useMemo(() => {\n    const errorList = _toConsumableArray(meta.errors);\n\n    const warningList = _toConsumableArray(meta.warnings);\n\n    Object.values(subFieldErrors).forEach(subFieldError => {\n      errorList.push.apply(errorList, _toConsumableArray(subFieldError.errors || []));\n      warningList.push.apply(warningList, _toConsumableArray(subFieldError.warnings || []));\n    });\n    return [errorList, warningList];\n  }, [subFieldErrors, meta.errors, meta.warnings]); // ===================== Children Ref =====================\n\n  const getItemRef = useItemRef(); // ======================== Render ========================\n\n  function renderLayout(baseChildren, fieldId, isRequired) {\n    if (noStyle && !hidden) {\n      return /*#__PURE__*/React.createElement(StatusProvider, {\n        prefixCls: prefixCls,\n        hasFeedback: props.hasFeedback,\n        validateStatus: props.validateStatus,\n        meta: meta,\n        errors: mergedErrors,\n        warnings: mergedWarnings,\n        noStyle: true\n      }, baseChildren);\n    }\n\n    return /*#__PURE__*/React.createElement(ItemHolder, Object.assign({\n      key: \"row\"\n    }, props, {\n      className: classNames(className, cssVarCls, rootCls, hashId),\n      prefixCls: prefixCls,\n      fieldId: fieldId,\n      isRequired: isRequired,\n      errors: mergedErrors,\n      warnings: mergedWarnings,\n      meta: meta,\n      onSubItemMetaChange: onSubItemMetaChange,\n      layout: layout\n    }), baseChildren);\n  }\n\n  if (!hasName && !isRenderProps && !dependencies) {\n    return wrapCSSVar(renderLayout(mergedChildren));\n  }\n\n  let variables = {};\n\n  if (typeof label === 'string') {\n    variables.label = label;\n  } else if (name) {\n    variables.label = String(name);\n  }\n\n  if (messageVariables) {\n    variables = Object.assign(Object.assign({}, variables), messageVariables);\n  } // >>>>> With Field\n\n\n  return wrapCSSVar( /*#__PURE__*/React.createElement(Field, Object.assign({}, props, {\n    messageVariables: variables,\n    trigger: trigger,\n    validateTrigger: mergedValidateTrigger,\n    onMetaChange: onMetaChange\n  }), (control, renderMeta, context) => {\n    const mergedName = toArray(name).length && renderMeta ? renderMeta.name : [];\n    const fieldId = getFieldId(mergedName, formName);\n    const isRequired = required !== undefined ? required : !!(rules === null || rules === void 0 ? void 0 : rules.some(rule => {\n      if (rule && typeof rule === 'object' && rule.required && !rule.warningOnly) {\n        return true;\n      }\n\n      if (typeof rule === 'function') {\n        const ruleEntity = rule(context);\n        return (ruleEntity === null || ruleEntity === void 0 ? void 0 : ruleEntity.required) && !(ruleEntity === null || ruleEntity === void 0 ? void 0 : ruleEntity.warningOnly);\n      }\n\n      return false;\n    })); // ======================= Children =======================\n\n    const mergedControl = Object.assign({}, control);\n    let childNode = null;\n    process.env.NODE_ENV !== \"production\" ? warning(!(shouldUpdate && dependencies), 'usage', \"`shouldUpdate` and `dependencies` shouldn't be used together. See https://u.ant.design/form-deps.\") : void 0;\n\n    if (Array.isArray(mergedChildren) && hasName) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'usage', 'A `Form.Item` with a `name` prop must have a single child element. For information on how to render more complex form items, see https://u.ant.design/complex-form-item.') : void 0;\n      childNode = mergedChildren;\n    } else if (isRenderProps && (!(shouldUpdate || dependencies) || hasName)) {\n      process.env.NODE_ENV !== \"production\" ? warning(!!(shouldUpdate || dependencies), 'usage', 'A `Form.Item` with a render function must have either `shouldUpdate` or `dependencies`.') : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(!hasName, 'usage', 'A `Form.Item` with a render function cannot be a field, and thus cannot have a `name` prop.') : void 0;\n    } else if (dependencies && !isRenderProps && !hasName) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'usage', 'Must set `name` or use a render function when `dependencies` is set.') : void 0;\n    } else if ( /*#__PURE__*/React.isValidElement(mergedChildren)) {\n      process.env.NODE_ENV !== \"production\" ? warning(mergedChildren.props.defaultValue === undefined, 'usage', '`defaultValue` will not work on controlled Field. You should use `initialValues` of Form instead.') : void 0;\n      const childProps = Object.assign(Object.assign({}, mergedChildren.props), mergedControl);\n\n      if (!childProps.id) {\n        childProps.id = fieldId;\n      }\n\n      if (help || mergedErrors.length > 0 || mergedWarnings.length > 0 || props.extra) {\n        const describedbyArr = [];\n\n        if (help || mergedErrors.length > 0) {\n          describedbyArr.push(`${fieldId}_help`);\n        }\n\n        if (props.extra) {\n          describedbyArr.push(`${fieldId}_extra`);\n        }\n\n        childProps['aria-describedby'] = describedbyArr.join(' ');\n      }\n\n      if (mergedErrors.length > 0) {\n        childProps['aria-invalid'] = 'true';\n      }\n\n      if (isRequired) {\n        childProps['aria-required'] = 'true';\n      }\n\n      if (supportRef(mergedChildren)) {\n        childProps.ref = getItemRef(mergedName, mergedChildren);\n      } // We should keep user origin event handler\n\n\n      const triggers = new Set([].concat(_toConsumableArray(toArray(trigger)), _toConsumableArray(toArray(mergedValidateTrigger))));\n      triggers.forEach(eventName => {\n        childProps[eventName] = function () {\n          var _a2, _c2;\n\n          var _a, _b, _c;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          (_a = mergedControl[eventName]) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [mergedControl].concat(args));\n          (_c = (_b = mergedChildren.props)[eventName]) === null || _c === void 0 ? void 0 : (_c2 = _c).call.apply(_c2, [_b].concat(args));\n        };\n      }); // List of props that need to be watched for changes -> if changes are detected in MemoInput -> rerender\n\n      const watchingChildProps = [childProps['aria-required'], childProps['aria-invalid'], childProps['aria-describedby']];\n      childNode = /*#__PURE__*/React.createElement(MemoInput, {\n        control: mergedControl,\n        update: mergedChildren,\n        childProps: watchingChildProps\n      }, cloneElement(mergedChildren, childProps));\n    } else if (isRenderProps && (shouldUpdate || dependencies) && !hasName) {\n      childNode = mergedChildren(context);\n    } else {\n      process.env.NODE_ENV !== \"production\" ? warning(!mergedName.length || !!noStyle, 'usage', '`name` is only used for validate React element. If you are using Form.Item as layout display, please remove `name` instead.') : void 0;\n      childNode = mergedChildren;\n    }\n\n    return renderLayout(childNode, fieldId, isRequired);\n  }));\n}\n\nconst FormItem = InternalFormItem;\nFormItem.useStatus = useFormItemStatus;\nexport default FormItem;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/antd/es/form/FormItem/index.js"],"names":["_toConsumableArray","React","classNames","Field","FieldContext","ListContext","useState","supportRef","cloneElement","devUseWarning","ConfigContext","useCSSVarCls","FormContext","NoStyleItemContext","useChildren","useFormItemStatus","useFrameState","useItemRef","useStyle","getFieldId","toArray","ItemHolder","StatusProvider","NAME_SPLIT","_ValidateStatuses","isSimilarControl","a","b","keysA","Object","keys","keysB","length","every","key","propValueA","propValueB","MemoInput","memo","_ref","children","prev","next","control","update","childProps","value","index","genEmptyMeta","errors","warnings","touched","validating","name","validated","InternalFormItem","props","noStyle","className","dependencies","prefixCls","customizePrefixCls","shouldUpdate","rules","required","label","messageVariables","trigger","validateTrigger","hidden","help","layout","getPrefixCls","useContext","formName","mergedChildren","isRenderProps","notifyParentMetaChange","contextValidateTrigger","mergedValidateTrigger","undefined","hasName","rootCls","wrapCSSVar","hashId","cssVarCls","warning","process","env","NODE_ENV","listContext","fieldKeyPathRef","useRef","subFieldErrors","setSubFieldErrors","meta","setMeta","onMetaChange","nextMeta","keyInfo","getKey","destroy","namePath","fieldKey","restPath","concat","current","onSubItemMetaChange","subMeta","uniqueKeys","prevSubFieldErrors","clone","assign","mergedNamePath","slice","mergedNameKey","join","mergedErrors","mergedWarnings","useMemo","errorList","warningList","values","forEach","subFieldError","push","apply","getItemRef","renderLayout","baseChildren","fieldId","isRequired","createElement","hasFeedback","validateStatus","variables","String","renderMeta","context","mergedName","some","rule","warningOnly","ruleEntity","mergedControl","childNode","Array","isArray","isValidElement","defaultValue","id","extra","describedbyArr","ref","triggers","Set","eventName","_a2","_c2","_a","_b","_c","_len","arguments","args","_key","call","watchingChildProps","FormItem","useStatus"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Field, FieldContext, ListContext } from 'rc-field-form';\nimport useState from \"rc-util/es/hooks/useState\";\nimport { supportRef } from \"rc-util/es/ref\";\nimport { cloneElement } from '../../_util/reactNode';\nimport { devUseWarning } from '../../_util/warning';\nimport { ConfigContext } from '../../config-provider';\nimport useCSSVarCls from '../../config-provider/hooks/useCSSVarCls';\nimport { FormContext, NoStyleItemContext } from '../context';\nimport useChildren from '../hooks/useChildren';\nimport useFormItemStatus from '../hooks/useFormItemStatus';\nimport useFrameState from '../hooks/useFrameState';\nimport useItemRef from '../hooks/useItemRef';\nimport useStyle from '../style';\nimport { getFieldId, toArray } from '../util';\nimport ItemHolder from './ItemHolder';\nimport StatusProvider from './StatusProvider';\nconst NAME_SPLIT = '__SPLIT__';\nconst _ValidateStatuses = ['success', 'warning', 'error', 'validating', ''];\n// https://github.com/ant-design/ant-design/issues/46417\n// `getValueProps` may modify the value props name,\n// we should check if the control is similar.\nfunction isSimilarControl(a, b) {\n  const keysA = Object.keys(a);\n  const keysB = Object.keys(b);\n  return keysA.length === keysB.length && keysA.every(key => {\n    const propValueA = a[key];\n    const propValueB = b[key];\n    return propValueA === propValueB || typeof propValueA === 'function' || typeof propValueB === 'function';\n  });\n}\nconst MemoInput = /*#__PURE__*/React.memo(_ref => {\n  let {\n    children\n  } = _ref;\n  return children;\n}, (prev, next) => isSimilarControl(prev.control, next.control) && prev.update === next.update && prev.childProps.length === next.childProps.length && prev.childProps.every((value, index) => value === next.childProps[index]));\nfunction genEmptyMeta() {\n  return {\n    errors: [],\n    warnings: [],\n    touched: false,\n    validating: false,\n    name: [],\n    validated: false\n  };\n}\nfunction InternalFormItem(props) {\n  const {\n    name,\n    noStyle,\n    className,\n    dependencies,\n    prefixCls: customizePrefixCls,\n    shouldUpdate,\n    rules,\n    children,\n    required,\n    label,\n    messageVariables,\n    trigger = 'onChange',\n    validateTrigger,\n    hidden,\n    help,\n    layout\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const {\n    name: formName\n  } = React.useContext(FormContext);\n  const mergedChildren = useChildren(children);\n  const isRenderProps = typeof mergedChildren === 'function';\n  const notifyParentMetaChange = React.useContext(NoStyleItemContext);\n  const {\n    validateTrigger: contextValidateTrigger\n  } = React.useContext(FieldContext);\n  const mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : contextValidateTrigger;\n  const hasName = !(name === undefined || name === null);\n  const prefixCls = getPrefixCls('form', customizePrefixCls);\n  // Style\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  // ========================= Warn =========================\n  const warning = devUseWarning('Form.Item');\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(name !== null, 'usage', '`null` is passed as `name` property') : void 0;\n  }\n  // ========================= MISC =========================\n  // Get `noStyle` required info\n  const listContext = React.useContext(ListContext);\n  const fieldKeyPathRef = React.useRef(null);\n  // ======================== Errors ========================\n  // >>>>> Collect sub field errors\n  const [subFieldErrors, setSubFieldErrors] = useFrameState({});\n  // >>>>> Current field errors\n  const [meta, setMeta] = useState(() => genEmptyMeta());\n  const onMetaChange = nextMeta => {\n    // This keyInfo is not correct when field is removed\n    // Since origin keyManager no longer keep the origin key anymore\n    // Which means we need cache origin one and reuse when removed\n    const keyInfo = listContext === null || listContext === void 0 ? void 0 : listContext.getKey(nextMeta.name);\n    // Destroy will reset all the meta\n    setMeta(nextMeta.destroy ? genEmptyMeta() : nextMeta, true);\n    // Bump to parent since noStyle\n    if (noStyle && help !== false && notifyParentMetaChange) {\n      let namePath = nextMeta.name;\n      if (!nextMeta.destroy) {\n        if (keyInfo !== undefined) {\n          const [fieldKey, restPath] = keyInfo;\n          namePath = [fieldKey].concat(_toConsumableArray(restPath));\n          fieldKeyPathRef.current = namePath;\n        }\n      } else {\n        // Use origin cache data\n        namePath = fieldKeyPathRef.current || namePath;\n      }\n      notifyParentMetaChange(nextMeta, namePath);\n    }\n  };\n  // >>>>> Collect noStyle Field error to the top FormItem\n  const onSubItemMetaChange = (subMeta, uniqueKeys) => {\n    // Only `noStyle` sub item will trigger\n    setSubFieldErrors(prevSubFieldErrors => {\n      const clone = Object.assign({}, prevSubFieldErrors);\n      // name: ['user', 1] + key: [4] = ['user', 4]\n      const mergedNamePath = [].concat(_toConsumableArray(subMeta.name.slice(0, -1)), _toConsumableArray(uniqueKeys));\n      const mergedNameKey = mergedNamePath.join(NAME_SPLIT);\n      if (subMeta.destroy) {\n        // Remove\n        delete clone[mergedNameKey];\n      } else {\n        // Update\n        clone[mergedNameKey] = subMeta;\n      }\n      return clone;\n    });\n  };\n  // >>>>> Get merged errors\n  const [mergedErrors, mergedWarnings] = React.useMemo(() => {\n    const errorList = _toConsumableArray(meta.errors);\n    const warningList = _toConsumableArray(meta.warnings);\n    Object.values(subFieldErrors).forEach(subFieldError => {\n      errorList.push.apply(errorList, _toConsumableArray(subFieldError.errors || []));\n      warningList.push.apply(warningList, _toConsumableArray(subFieldError.warnings || []));\n    });\n    return [errorList, warningList];\n  }, [subFieldErrors, meta.errors, meta.warnings]);\n  // ===================== Children Ref =====================\n  const getItemRef = useItemRef();\n  // ======================== Render ========================\n  function renderLayout(baseChildren, fieldId, isRequired) {\n    if (noStyle && !hidden) {\n      return /*#__PURE__*/React.createElement(StatusProvider, {\n        prefixCls: prefixCls,\n        hasFeedback: props.hasFeedback,\n        validateStatus: props.validateStatus,\n        meta: meta,\n        errors: mergedErrors,\n        warnings: mergedWarnings,\n        noStyle: true\n      }, baseChildren);\n    }\n    return /*#__PURE__*/React.createElement(ItemHolder, Object.assign({\n      key: \"row\"\n    }, props, {\n      className: classNames(className, cssVarCls, rootCls, hashId),\n      prefixCls: prefixCls,\n      fieldId: fieldId,\n      isRequired: isRequired,\n      errors: mergedErrors,\n      warnings: mergedWarnings,\n      meta: meta,\n      onSubItemMetaChange: onSubItemMetaChange,\n      layout: layout\n    }), baseChildren);\n  }\n  if (!hasName && !isRenderProps && !dependencies) {\n    return wrapCSSVar(renderLayout(mergedChildren));\n  }\n  let variables = {};\n  if (typeof label === 'string') {\n    variables.label = label;\n  } else if (name) {\n    variables.label = String(name);\n  }\n  if (messageVariables) {\n    variables = Object.assign(Object.assign({}, variables), messageVariables);\n  }\n  // >>>>> With Field\n  return wrapCSSVar(/*#__PURE__*/React.createElement(Field, Object.assign({}, props, {\n    messageVariables: variables,\n    trigger: trigger,\n    validateTrigger: mergedValidateTrigger,\n    onMetaChange: onMetaChange\n  }), (control, renderMeta, context) => {\n    const mergedName = toArray(name).length && renderMeta ? renderMeta.name : [];\n    const fieldId = getFieldId(mergedName, formName);\n    const isRequired = required !== undefined ? required : !!(rules === null || rules === void 0 ? void 0 : rules.some(rule => {\n      if (rule && typeof rule === 'object' && rule.required && !rule.warningOnly) {\n        return true;\n      }\n      if (typeof rule === 'function') {\n        const ruleEntity = rule(context);\n        return (ruleEntity === null || ruleEntity === void 0 ? void 0 : ruleEntity.required) && !(ruleEntity === null || ruleEntity === void 0 ? void 0 : ruleEntity.warningOnly);\n      }\n      return false;\n    }));\n    // ======================= Children =======================\n    const mergedControl = Object.assign({}, control);\n    let childNode = null;\n    process.env.NODE_ENV !== \"production\" ? warning(!(shouldUpdate && dependencies), 'usage', \"`shouldUpdate` and `dependencies` shouldn't be used together. See https://u.ant.design/form-deps.\") : void 0;\n    if (Array.isArray(mergedChildren) && hasName) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'usage', 'A `Form.Item` with a `name` prop must have a single child element. For information on how to render more complex form items, see https://u.ant.design/complex-form-item.') : void 0;\n      childNode = mergedChildren;\n    } else if (isRenderProps && (!(shouldUpdate || dependencies) || hasName)) {\n      process.env.NODE_ENV !== \"production\" ? warning(!!(shouldUpdate || dependencies), 'usage', 'A `Form.Item` with a render function must have either `shouldUpdate` or `dependencies`.') : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(!hasName, 'usage', 'A `Form.Item` with a render function cannot be a field, and thus cannot have a `name` prop.') : void 0;\n    } else if (dependencies && !isRenderProps && !hasName) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'usage', 'Must set `name` or use a render function when `dependencies` is set.') : void 0;\n    } else if (/*#__PURE__*/React.isValidElement(mergedChildren)) {\n      process.env.NODE_ENV !== \"production\" ? warning(mergedChildren.props.defaultValue === undefined, 'usage', '`defaultValue` will not work on controlled Field. You should use `initialValues` of Form instead.') : void 0;\n      const childProps = Object.assign(Object.assign({}, mergedChildren.props), mergedControl);\n      if (!childProps.id) {\n        childProps.id = fieldId;\n      }\n      if (help || mergedErrors.length > 0 || mergedWarnings.length > 0 || props.extra) {\n        const describedbyArr = [];\n        if (help || mergedErrors.length > 0) {\n          describedbyArr.push(`${fieldId}_help`);\n        }\n        if (props.extra) {\n          describedbyArr.push(`${fieldId}_extra`);\n        }\n        childProps['aria-describedby'] = describedbyArr.join(' ');\n      }\n      if (mergedErrors.length > 0) {\n        childProps['aria-invalid'] = 'true';\n      }\n      if (isRequired) {\n        childProps['aria-required'] = 'true';\n      }\n      if (supportRef(mergedChildren)) {\n        childProps.ref = getItemRef(mergedName, mergedChildren);\n      }\n      // We should keep user origin event handler\n      const triggers = new Set([].concat(_toConsumableArray(toArray(trigger)), _toConsumableArray(toArray(mergedValidateTrigger))));\n      triggers.forEach(eventName => {\n        childProps[eventName] = function () {\n          var _a2, _c2;\n          var _a, _b, _c;\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          (_a = mergedControl[eventName]) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [mergedControl].concat(args));\n          (_c = (_b = mergedChildren.props)[eventName]) === null || _c === void 0 ? void 0 : (_c2 = _c).call.apply(_c2, [_b].concat(args));\n        };\n      });\n      // List of props that need to be watched for changes -> if changes are detected in MemoInput -> rerender\n      const watchingChildProps = [childProps['aria-required'], childProps['aria-invalid'], childProps['aria-describedby']];\n      childNode = /*#__PURE__*/React.createElement(MemoInput, {\n        control: mergedControl,\n        update: mergedChildren,\n        childProps: watchingChildProps\n      }, cloneElement(mergedChildren, childProps));\n    } else if (isRenderProps && (shouldUpdate || dependencies) && !hasName) {\n      childNode = mergedChildren(context);\n    } else {\n      process.env.NODE_ENV !== \"production\" ? warning(!mergedName.length || !!noStyle, 'usage', '`name` is only used for validate React element. If you are using Form.Item as layout display, please remove `name` instead.') : void 0;\n      childNode = mergedChildren;\n    }\n    return renderLayout(childNode, fieldId, isRequired);\n  }));\n}\nconst FormItem = InternalFormItem;\nFormItem.useStatus = useFormItemStatus;\nexport default FormItem;"]},"metadata":{},"sourceType":"module"}