{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useTimeInfo from \"../../../hooks/useTimeInfo\";\nimport { formatValue } from \"../../../utils/dateUtil\";\nimport { PickerHackContext, usePanelContext } from \"../../context\";\nimport TimeColumn from \"./TimeColumn\";\n\nfunction isAM(hour) {\n  return hour < 12;\n}\n\nexport default function TimePanelBody(props) {\n  var showHour = props.showHour,\n      showMinute = props.showMinute,\n      showSecond = props.showSecond,\n      showMillisecond = props.showMillisecond,\n      showMeridiem = props.use12Hours,\n      changeOnScroll = props.changeOnScroll;\n\n  var _usePanelContext = usePanelContext(),\n      prefixCls = _usePanelContext.prefixCls,\n      values = _usePanelContext.values,\n      generateConfig = _usePanelContext.generateConfig,\n      locale = _usePanelContext.locale,\n      onSelect = _usePanelContext.onSelect,\n      _usePanelContext$onHo = _usePanelContext.onHover,\n      onHover = _usePanelContext$onHo === void 0 ? function () {} : _usePanelContext$onHo,\n      pickerValue = _usePanelContext.pickerValue;\n\n  var value = (values === null || values === void 0 ? void 0 : values[0]) || null;\n\n  var _React$useContext = React.useContext(PickerHackContext),\n      onCellDblClick = _React$useContext.onCellDblClick; // ========================== Info ==========================\n\n\n  var _useTimeInfo = useTimeInfo(generateConfig, props, value),\n      _useTimeInfo2 = _slicedToArray(_useTimeInfo, 5),\n      getValidTime = _useTimeInfo2[0],\n      rowHourUnits = _useTimeInfo2[1],\n      getMinuteUnits = _useTimeInfo2[2],\n      getSecondUnits = _useTimeInfo2[3],\n      getMillisecondUnits = _useTimeInfo2[4]; // ========================= Value ==========================\n  // PickerValue will tell which one to align on the top\n\n\n  var getUnitValue = function getUnitValue(func) {\n    var valueUnitVal = value && generateConfig[func](value);\n    var pickerUnitValue = pickerValue && generateConfig[func](pickerValue);\n    return [valueUnitVal, pickerUnitValue];\n  };\n\n  var _getUnitValue = getUnitValue('getHour'),\n      _getUnitValue2 = _slicedToArray(_getUnitValue, 2),\n      hour = _getUnitValue2[0],\n      pickerHour = _getUnitValue2[1];\n\n  var _getUnitValue3 = getUnitValue('getMinute'),\n      _getUnitValue4 = _slicedToArray(_getUnitValue3, 2),\n      minute = _getUnitValue4[0],\n      pickerMinute = _getUnitValue4[1];\n\n  var _getUnitValue5 = getUnitValue('getSecond'),\n      _getUnitValue6 = _slicedToArray(_getUnitValue5, 2),\n      second = _getUnitValue6[0],\n      pickerSecond = _getUnitValue6[1];\n\n  var _getUnitValue7 = getUnitValue('getMillisecond'),\n      _getUnitValue8 = _slicedToArray(_getUnitValue7, 2),\n      millisecond = _getUnitValue8[0],\n      pickerMillisecond = _getUnitValue8[1];\n\n  var meridiem = hour === null ? null : isAM(hour) ? 'am' : 'pm'; // ========================= Column =========================\n  // Hours\n\n  var hourUnits = React.useMemo(function () {\n    if (!showMeridiem) {\n      return rowHourUnits;\n    }\n\n    return isAM(hour) ? rowHourUnits.filter(function (h) {\n      return isAM(h.value);\n    }) : rowHourUnits.filter(function (h) {\n      return !isAM(h.value);\n    });\n  }, [hour, rowHourUnits, showMeridiem]); // >>> Pick Fallback\n\n  var getEnabled = function getEnabled(units, val) {\n    var _enabledUnits$;\n\n    var enabledUnits = units.filter(function (unit) {\n      return !unit.disabled;\n    });\n    return val !== null && val !== void 0 ? val : // Fallback to enabled value\n    enabledUnits === null || enabledUnits === void 0 || (_enabledUnits$ = enabledUnits[0]) === null || _enabledUnits$ === void 0 ? void 0 : _enabledUnits$.value;\n  }; // >>> Minutes\n\n\n  var validHour = getEnabled(rowHourUnits, hour);\n  var minuteUnits = React.useMemo(function () {\n    return getMinuteUnits(validHour);\n  }, [getMinuteUnits, validHour]); // >>> Seconds\n\n  var validMinute = getEnabled(minuteUnits, minute);\n  var secondUnits = React.useMemo(function () {\n    return getSecondUnits(validHour, validMinute);\n  }, [getSecondUnits, validHour, validMinute]); // >>> Milliseconds\n\n  var validSecond = getEnabled(secondUnits, second);\n  var millisecondUnits = React.useMemo(function () {\n    return getMillisecondUnits(validHour, validMinute, validSecond);\n  }, [getMillisecondUnits, validHour, validMinute, validSecond]);\n  var validMillisecond = getEnabled(millisecondUnits, millisecond); // Meridiem\n\n  var meridiemUnits = React.useMemo(function () {\n    if (!showMeridiem) {\n      return [];\n    }\n\n    var base = generateConfig.getNow();\n    var amDate = generateConfig.setHour(base, 6);\n    var pmDate = generateConfig.setHour(base, 18);\n\n    var formatMeridiem = function formatMeridiem(date, defaultLabel) {\n      var cellMeridiemFormat = locale.cellMeridiemFormat;\n      return cellMeridiemFormat ? formatValue(date, {\n        generateConfig: generateConfig,\n        locale: locale,\n        format: cellMeridiemFormat\n      }) : defaultLabel;\n    };\n\n    return [{\n      label: formatMeridiem(amDate, 'AM'),\n      value: 'am',\n      disabled: rowHourUnits.every(function (h) {\n        return h.disabled || !isAM(h.value);\n      })\n    }, {\n      label: formatMeridiem(pmDate, 'PM'),\n      value: 'pm',\n      disabled: rowHourUnits.every(function (h) {\n        return h.disabled || isAM(h.value);\n      })\n    }];\n  }, [rowHourUnits, showMeridiem, generateConfig, locale]); // ========================= Change =========================\n\n  /**\n   * Check if time is validate or will match to validate one\n   */\n\n  var triggerChange = function triggerChange(nextDate) {\n    var validateDate = getValidTime(nextDate);\n    onSelect(validateDate);\n  }; // ========================= Column =========================\n  // Create a template date for the trigger change event\n\n\n  var triggerDateTmpl = React.useMemo(function () {\n    var tmpl = value || pickerValue || generateConfig.getNow();\n\n    var isNotNull = function isNotNull(num) {\n      return num !== null && num !== undefined;\n    };\n\n    if (isNotNull(hour)) {\n      tmpl = generateConfig.setHour(tmpl, hour);\n      tmpl = generateConfig.setMinute(tmpl, minute);\n      tmpl = generateConfig.setSecond(tmpl, second);\n      tmpl = generateConfig.setMillisecond(tmpl, millisecond);\n    } else if (isNotNull(pickerHour)) {\n      tmpl = generateConfig.setHour(tmpl, pickerHour);\n      tmpl = generateConfig.setMinute(tmpl, pickerMinute);\n      tmpl = generateConfig.setSecond(tmpl, pickerSecond);\n      tmpl = generateConfig.setMillisecond(tmpl, pickerMillisecond);\n    } else if (isNotNull(validHour)) {\n      tmpl = generateConfig.setHour(tmpl, validHour);\n      tmpl = generateConfig.setMinute(tmpl, validMinute);\n      tmpl = generateConfig.setSecond(tmpl, validSecond);\n      tmpl = generateConfig.setMillisecond(tmpl, validMillisecond);\n    }\n\n    return tmpl;\n  }, [value, pickerValue, hour, minute, second, millisecond, validHour, validMinute, validSecond, validMillisecond, pickerHour, pickerMinute, pickerSecond, pickerMillisecond, generateConfig]); // ===================== Columns Change =====================\n\n  var fillColumnValue = function fillColumnValue(val, func) {\n    if (val === null) {\n      return null;\n    }\n\n    return generateConfig[func](triggerDateTmpl, val);\n  };\n\n  var getNextHourTime = function getNextHourTime(val) {\n    return fillColumnValue(val, 'setHour');\n  };\n\n  var getNextMinuteTime = function getNextMinuteTime(val) {\n    return fillColumnValue(val, 'setMinute');\n  };\n\n  var getNextSecondTime = function getNextSecondTime(val) {\n    return fillColumnValue(val, 'setSecond');\n  };\n\n  var getNextMillisecondTime = function getNextMillisecondTime(val) {\n    return fillColumnValue(val, 'setMillisecond');\n  };\n\n  var getMeridiemTime = function getMeridiemTime(val) {\n    if (val === null) {\n      return null;\n    }\n\n    if (val === 'am' && !isAM(hour)) {\n      return generateConfig.setHour(triggerDateTmpl, hour - 12);\n    } else if (val === 'pm' && isAM(hour)) {\n      return generateConfig.setHour(triggerDateTmpl, hour + 12);\n    }\n\n    return triggerDateTmpl;\n  };\n\n  var onHourChange = function onHourChange(val) {\n    triggerChange(getNextHourTime(val));\n  };\n\n  var onMinuteChange = function onMinuteChange(val) {\n    triggerChange(getNextMinuteTime(val));\n  };\n\n  var onSecondChange = function onSecondChange(val) {\n    triggerChange(getNextSecondTime(val));\n  };\n\n  var onMillisecondChange = function onMillisecondChange(val) {\n    triggerChange(getNextMillisecondTime(val));\n  };\n\n  var onMeridiemChange = function onMeridiemChange(val) {\n    triggerChange(getMeridiemTime(val));\n  }; // ====================== Column Hover ======================\n\n\n  var onHourHover = function onHourHover(val) {\n    onHover(getNextHourTime(val));\n  };\n\n  var onMinuteHover = function onMinuteHover(val) {\n    onHover(getNextMinuteTime(val));\n  };\n\n  var onSecondHover = function onSecondHover(val) {\n    onHover(getNextSecondTime(val));\n  };\n\n  var onMillisecondHover = function onMillisecondHover(val) {\n    onHover(getNextMillisecondTime(val));\n  };\n\n  var onMeridiemHover = function onMeridiemHover(val) {\n    onHover(getMeridiemTime(val));\n  }; // ========================= Render =========================\n\n\n  var sharedColumnProps = {\n    onDblClick: onCellDblClick,\n    changeOnScroll: changeOnScroll\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-content\")\n  }, showHour && /*#__PURE__*/React.createElement(TimeColumn, _extends({\n    units: hourUnits,\n    value: hour,\n    optionalValue: pickerHour,\n    type: \"hour\",\n    onChange: onHourChange,\n    onHover: onHourHover\n  }, sharedColumnProps)), showMinute && /*#__PURE__*/React.createElement(TimeColumn, _extends({\n    units: minuteUnits,\n    value: minute,\n    optionalValue: pickerMinute,\n    type: \"minute\",\n    onChange: onMinuteChange,\n    onHover: onMinuteHover\n  }, sharedColumnProps)), showSecond && /*#__PURE__*/React.createElement(TimeColumn, _extends({\n    units: secondUnits,\n    value: second,\n    optionalValue: pickerSecond,\n    type: \"second\",\n    onChange: onSecondChange,\n    onHover: onSecondHover\n  }, sharedColumnProps)), showMillisecond && /*#__PURE__*/React.createElement(TimeColumn, _extends({\n    units: millisecondUnits,\n    value: millisecond,\n    optionalValue: pickerMillisecond,\n    type: \"millisecond\",\n    onChange: onMillisecondChange,\n    onHover: onMillisecondHover\n  }, sharedColumnProps)), showMeridiem && /*#__PURE__*/React.createElement(TimeColumn, _extends({\n    units: meridiemUnits,\n    value: meridiem,\n    type: \"meridiem\",\n    onChange: onMeridiemChange,\n    onHover: onMeridiemHover\n  }, sharedColumnProps)));\n}","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-picker/es/PickerPanel/TimePanel/TimePanelBody/index.js"],"names":["_extends","_slicedToArray","React","useTimeInfo","formatValue","PickerHackContext","usePanelContext","TimeColumn","isAM","hour","TimePanelBody","props","showHour","showMinute","showSecond","showMillisecond","showMeridiem","use12Hours","changeOnScroll","_usePanelContext","prefixCls","values","generateConfig","locale","onSelect","_usePanelContext$onHo","onHover","pickerValue","value","_React$useContext","useContext","onCellDblClick","_useTimeInfo","_useTimeInfo2","getValidTime","rowHourUnits","getMinuteUnits","getSecondUnits","getMillisecondUnits","getUnitValue","func","valueUnitVal","pickerUnitValue","_getUnitValue","_getUnitValue2","pickerHour","_getUnitValue3","_getUnitValue4","minute","pickerMinute","_getUnitValue5","_getUnitValue6","second","pickerSecond","_getUnitValue7","_getUnitValue8","millisecond","pickerMillisecond","meridiem","hourUnits","useMemo","filter","h","getEnabled","units","val","_enabledUnits$","enabledUnits","unit","disabled","validHour","minuteUnits","validMinute","secondUnits","validSecond","millisecondUnits","validMillisecond","meridiemUnits","base","getNow","amDate","setHour","pmDate","formatMeridiem","date","defaultLabel","cellMeridiemFormat","format","label","every","triggerChange","nextDate","validateDate","triggerDateTmpl","tmpl","isNotNull","num","undefined","setMinute","setSecond","setMillisecond","fillColumnValue","getNextHourTime","getNextMinuteTime","getNextSecondTime","getNextMillisecondTime","getMeridiemTime","onHourChange","onMinuteChange","onSecondChange","onMillisecondChange","onMeridiemChange","onHourHover","onMinuteHover","onSecondHover","onMillisecondHover","onMeridiemHover","sharedColumnProps","onDblClick","createElement","className","concat","optionalValue","type","onChange"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useTimeInfo from \"../../../hooks/useTimeInfo\";\nimport { formatValue } from \"../../../utils/dateUtil\";\nimport { PickerHackContext, usePanelContext } from \"../../context\";\nimport TimeColumn from \"./TimeColumn\";\nfunction isAM(hour) {\n  return hour < 12;\n}\nexport default function TimePanelBody(props) {\n  var showHour = props.showHour,\n    showMinute = props.showMinute,\n    showSecond = props.showSecond,\n    showMillisecond = props.showMillisecond,\n    showMeridiem = props.use12Hours,\n    changeOnScroll = props.changeOnScroll;\n  var _usePanelContext = usePanelContext(),\n    prefixCls = _usePanelContext.prefixCls,\n    values = _usePanelContext.values,\n    generateConfig = _usePanelContext.generateConfig,\n    locale = _usePanelContext.locale,\n    onSelect = _usePanelContext.onSelect,\n    _usePanelContext$onHo = _usePanelContext.onHover,\n    onHover = _usePanelContext$onHo === void 0 ? function () {} : _usePanelContext$onHo,\n    pickerValue = _usePanelContext.pickerValue;\n  var value = (values === null || values === void 0 ? void 0 : values[0]) || null;\n  var _React$useContext = React.useContext(PickerHackContext),\n    onCellDblClick = _React$useContext.onCellDblClick;\n\n  // ========================== Info ==========================\n  var _useTimeInfo = useTimeInfo(generateConfig, props, value),\n    _useTimeInfo2 = _slicedToArray(_useTimeInfo, 5),\n    getValidTime = _useTimeInfo2[0],\n    rowHourUnits = _useTimeInfo2[1],\n    getMinuteUnits = _useTimeInfo2[2],\n    getSecondUnits = _useTimeInfo2[3],\n    getMillisecondUnits = _useTimeInfo2[4];\n\n  // ========================= Value ==========================\n  // PickerValue will tell which one to align on the top\n  var getUnitValue = function getUnitValue(func) {\n    var valueUnitVal = value && generateConfig[func](value);\n    var pickerUnitValue = pickerValue && generateConfig[func](pickerValue);\n    return [valueUnitVal, pickerUnitValue];\n  };\n  var _getUnitValue = getUnitValue('getHour'),\n    _getUnitValue2 = _slicedToArray(_getUnitValue, 2),\n    hour = _getUnitValue2[0],\n    pickerHour = _getUnitValue2[1];\n  var _getUnitValue3 = getUnitValue('getMinute'),\n    _getUnitValue4 = _slicedToArray(_getUnitValue3, 2),\n    minute = _getUnitValue4[0],\n    pickerMinute = _getUnitValue4[1];\n  var _getUnitValue5 = getUnitValue('getSecond'),\n    _getUnitValue6 = _slicedToArray(_getUnitValue5, 2),\n    second = _getUnitValue6[0],\n    pickerSecond = _getUnitValue6[1];\n  var _getUnitValue7 = getUnitValue('getMillisecond'),\n    _getUnitValue8 = _slicedToArray(_getUnitValue7, 2),\n    millisecond = _getUnitValue8[0],\n    pickerMillisecond = _getUnitValue8[1];\n  var meridiem = hour === null ? null : isAM(hour) ? 'am' : 'pm';\n\n  // ========================= Column =========================\n  // Hours\n  var hourUnits = React.useMemo(function () {\n    if (!showMeridiem) {\n      return rowHourUnits;\n    }\n    return isAM(hour) ? rowHourUnits.filter(function (h) {\n      return isAM(h.value);\n    }) : rowHourUnits.filter(function (h) {\n      return !isAM(h.value);\n    });\n  }, [hour, rowHourUnits, showMeridiem]);\n\n  // >>> Pick Fallback\n  var getEnabled = function getEnabled(units, val) {\n    var _enabledUnits$;\n    var enabledUnits = units.filter(function (unit) {\n      return !unit.disabled;\n    });\n    return val !== null && val !== void 0 ? val : // Fallback to enabled value\n    enabledUnits === null || enabledUnits === void 0 || (_enabledUnits$ = enabledUnits[0]) === null || _enabledUnits$ === void 0 ? void 0 : _enabledUnits$.value;\n  };\n\n  // >>> Minutes\n  var validHour = getEnabled(rowHourUnits, hour);\n  var minuteUnits = React.useMemo(function () {\n    return getMinuteUnits(validHour);\n  }, [getMinuteUnits, validHour]);\n\n  // >>> Seconds\n  var validMinute = getEnabled(minuteUnits, minute);\n  var secondUnits = React.useMemo(function () {\n    return getSecondUnits(validHour, validMinute);\n  }, [getSecondUnits, validHour, validMinute]);\n\n  // >>> Milliseconds\n  var validSecond = getEnabled(secondUnits, second);\n  var millisecondUnits = React.useMemo(function () {\n    return getMillisecondUnits(validHour, validMinute, validSecond);\n  }, [getMillisecondUnits, validHour, validMinute, validSecond]);\n  var validMillisecond = getEnabled(millisecondUnits, millisecond);\n\n  // Meridiem\n  var meridiemUnits = React.useMemo(function () {\n    if (!showMeridiem) {\n      return [];\n    }\n    var base = generateConfig.getNow();\n    var amDate = generateConfig.setHour(base, 6);\n    var pmDate = generateConfig.setHour(base, 18);\n    var formatMeridiem = function formatMeridiem(date, defaultLabel) {\n      var cellMeridiemFormat = locale.cellMeridiemFormat;\n      return cellMeridiemFormat ? formatValue(date, {\n        generateConfig: generateConfig,\n        locale: locale,\n        format: cellMeridiemFormat\n      }) : defaultLabel;\n    };\n    return [{\n      label: formatMeridiem(amDate, 'AM'),\n      value: 'am',\n      disabled: rowHourUnits.every(function (h) {\n        return h.disabled || !isAM(h.value);\n      })\n    }, {\n      label: formatMeridiem(pmDate, 'PM'),\n      value: 'pm',\n      disabled: rowHourUnits.every(function (h) {\n        return h.disabled || isAM(h.value);\n      })\n    }];\n  }, [rowHourUnits, showMeridiem, generateConfig, locale]);\n\n  // ========================= Change =========================\n  /**\n   * Check if time is validate or will match to validate one\n   */\n  var triggerChange = function triggerChange(nextDate) {\n    var validateDate = getValidTime(nextDate);\n    onSelect(validateDate);\n  };\n\n  // ========================= Column =========================\n  // Create a template date for the trigger change event\n  var triggerDateTmpl = React.useMemo(function () {\n    var tmpl = value || pickerValue || generateConfig.getNow();\n    var isNotNull = function isNotNull(num) {\n      return num !== null && num !== undefined;\n    };\n    if (isNotNull(hour)) {\n      tmpl = generateConfig.setHour(tmpl, hour);\n      tmpl = generateConfig.setMinute(tmpl, minute);\n      tmpl = generateConfig.setSecond(tmpl, second);\n      tmpl = generateConfig.setMillisecond(tmpl, millisecond);\n    } else if (isNotNull(pickerHour)) {\n      tmpl = generateConfig.setHour(tmpl, pickerHour);\n      tmpl = generateConfig.setMinute(tmpl, pickerMinute);\n      tmpl = generateConfig.setSecond(tmpl, pickerSecond);\n      tmpl = generateConfig.setMillisecond(tmpl, pickerMillisecond);\n    } else if (isNotNull(validHour)) {\n      tmpl = generateConfig.setHour(tmpl, validHour);\n      tmpl = generateConfig.setMinute(tmpl, validMinute);\n      tmpl = generateConfig.setSecond(tmpl, validSecond);\n      tmpl = generateConfig.setMillisecond(tmpl, validMillisecond);\n    }\n    return tmpl;\n  }, [value, pickerValue, hour, minute, second, millisecond, validHour, validMinute, validSecond, validMillisecond, pickerHour, pickerMinute, pickerSecond, pickerMillisecond, generateConfig]);\n\n  // ===================== Columns Change =====================\n  var fillColumnValue = function fillColumnValue(val, func) {\n    if (val === null) {\n      return null;\n    }\n    return generateConfig[func](triggerDateTmpl, val);\n  };\n  var getNextHourTime = function getNextHourTime(val) {\n    return fillColumnValue(val, 'setHour');\n  };\n  var getNextMinuteTime = function getNextMinuteTime(val) {\n    return fillColumnValue(val, 'setMinute');\n  };\n  var getNextSecondTime = function getNextSecondTime(val) {\n    return fillColumnValue(val, 'setSecond');\n  };\n  var getNextMillisecondTime = function getNextMillisecondTime(val) {\n    return fillColumnValue(val, 'setMillisecond');\n  };\n  var getMeridiemTime = function getMeridiemTime(val) {\n    if (val === null) {\n      return null;\n    }\n    if (val === 'am' && !isAM(hour)) {\n      return generateConfig.setHour(triggerDateTmpl, hour - 12);\n    } else if (val === 'pm' && isAM(hour)) {\n      return generateConfig.setHour(triggerDateTmpl, hour + 12);\n    }\n    return triggerDateTmpl;\n  };\n  var onHourChange = function onHourChange(val) {\n    triggerChange(getNextHourTime(val));\n  };\n  var onMinuteChange = function onMinuteChange(val) {\n    triggerChange(getNextMinuteTime(val));\n  };\n  var onSecondChange = function onSecondChange(val) {\n    triggerChange(getNextSecondTime(val));\n  };\n  var onMillisecondChange = function onMillisecondChange(val) {\n    triggerChange(getNextMillisecondTime(val));\n  };\n  var onMeridiemChange = function onMeridiemChange(val) {\n    triggerChange(getMeridiemTime(val));\n  };\n\n  // ====================== Column Hover ======================\n  var onHourHover = function onHourHover(val) {\n    onHover(getNextHourTime(val));\n  };\n  var onMinuteHover = function onMinuteHover(val) {\n    onHover(getNextMinuteTime(val));\n  };\n  var onSecondHover = function onSecondHover(val) {\n    onHover(getNextSecondTime(val));\n  };\n  var onMillisecondHover = function onMillisecondHover(val) {\n    onHover(getNextMillisecondTime(val));\n  };\n  var onMeridiemHover = function onMeridiemHover(val) {\n    onHover(getMeridiemTime(val));\n  };\n\n  // ========================= Render =========================\n  var sharedColumnProps = {\n    onDblClick: onCellDblClick,\n    changeOnScroll: changeOnScroll\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-content\")\n  }, showHour && /*#__PURE__*/React.createElement(TimeColumn, _extends({\n    units: hourUnits,\n    value: hour,\n    optionalValue: pickerHour,\n    type: \"hour\",\n    onChange: onHourChange,\n    onHover: onHourHover\n  }, sharedColumnProps)), showMinute && /*#__PURE__*/React.createElement(TimeColumn, _extends({\n    units: minuteUnits,\n    value: minute,\n    optionalValue: pickerMinute,\n    type: \"minute\",\n    onChange: onMinuteChange,\n    onHover: onMinuteHover\n  }, sharedColumnProps)), showSecond && /*#__PURE__*/React.createElement(TimeColumn, _extends({\n    units: secondUnits,\n    value: second,\n    optionalValue: pickerSecond,\n    type: \"second\",\n    onChange: onSecondChange,\n    onHover: onSecondHover\n  }, sharedColumnProps)), showMillisecond && /*#__PURE__*/React.createElement(TimeColumn, _extends({\n    units: millisecondUnits,\n    value: millisecond,\n    optionalValue: pickerMillisecond,\n    type: \"millisecond\",\n    onChange: onMillisecondChange,\n    onHover: onMillisecondHover\n  }, sharedColumnProps)), showMeridiem && /*#__PURE__*/React.createElement(TimeColumn, _extends({\n    units: meridiemUnits,\n    value: meridiem,\n    type: \"meridiem\",\n    onChange: onMeridiemChange,\n    onHover: onMeridiemHover\n  }, sharedColumnProps)));\n}"]},"metadata":{},"sourceType":"module"}