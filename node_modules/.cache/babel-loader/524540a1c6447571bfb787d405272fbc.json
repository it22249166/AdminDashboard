{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"defaultValue\", \"value\", \"onFocus\", \"onBlur\", \"onChange\", \"allowClear\", \"maxLength\", \"onCompositionStart\", \"onCompositionEnd\", \"suffix\", \"prefixCls\", \"showCount\", \"count\", \"className\", \"style\", \"disabled\", \"hidden\", \"classNames\", \"styles\", \"onResize\", \"onClear\", \"onPressEnter\", \"readOnly\", \"autoSize\", \"onKeyDown\"];\nimport clsx from 'classnames';\nimport { BaseInput } from 'rc-input';\nimport useCount from \"rc-input/es/hooks/useCount\";\nimport { resolveOnChange } from \"rc-input/es/utils/commonUtils\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useEffect, useImperativeHandle, useRef } from 'react';\nimport ResizableTextArea from \"./ResizableTextArea\";\nvar TextArea = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _countConfig$max;\n\n  var defaultValue = _ref.defaultValue,\n      customValue = _ref.value,\n      onFocus = _ref.onFocus,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      allowClear = _ref.allowClear,\n      maxLength = _ref.maxLength,\n      onCompositionStart = _ref.onCompositionStart,\n      onCompositionEnd = _ref.onCompositionEnd,\n      suffix = _ref.suffix,\n      _ref$prefixCls = _ref.prefixCls,\n      prefixCls = _ref$prefixCls === void 0 ? 'rc-textarea' : _ref$prefixCls,\n      showCount = _ref.showCount,\n      count = _ref.count,\n      className = _ref.className,\n      style = _ref.style,\n      disabled = _ref.disabled,\n      hidden = _ref.hidden,\n      classNames = _ref.classNames,\n      styles = _ref.styles,\n      onResize = _ref.onResize,\n      onClear = _ref.onClear,\n      onPressEnter = _ref.onPressEnter,\n      readOnly = _ref.readOnly,\n      autoSize = _ref.autoSize,\n      onKeyDown = _ref.onKeyDown,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useMergedState = useMergedState(defaultValue, {\n    value: customValue,\n    defaultValue: defaultValue\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      value = _useMergedState2[0],\n      setValue = _useMergedState2[1];\n\n  var formatValue = value === undefined || value === null ? '' : String(value);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focused = _React$useState2[0],\n      setFocused = _React$useState2[1];\n\n  var compositionRef = React.useRef(false);\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      textareaResized = _React$useState4[0],\n      setTextareaResized = _React$useState4[1]; // =============================== Ref ================================\n\n\n  var holderRef = useRef(null);\n  var resizableTextAreaRef = useRef(null);\n\n  var getTextArea = function getTextArea() {\n    var _resizableTextAreaRef;\n\n    return (_resizableTextAreaRef = resizableTextAreaRef.current) === null || _resizableTextAreaRef === void 0 ? void 0 : _resizableTextAreaRef.textArea;\n  };\n\n  var focus = function focus() {\n    getTextArea().focus();\n  };\n\n  useImperativeHandle(ref, function () {\n    var _holderRef$current;\n\n    return {\n      resizableTextArea: resizableTextAreaRef.current,\n      focus: focus,\n      blur: function blur() {\n        getTextArea().blur();\n      },\n      nativeElement: ((_holderRef$current = holderRef.current) === null || _holderRef$current === void 0 ? void 0 : _holderRef$current.nativeElement) || getTextArea()\n    };\n  });\n  useEffect(function () {\n    setFocused(function (prev) {\n      return !disabled && prev;\n    });\n  }, [disabled]); // =========================== Select Range ===========================\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      selection = _React$useState6[0],\n      setSelection = _React$useState6[1];\n\n  React.useEffect(function () {\n    if (selection) {\n      var _getTextArea;\n\n      (_getTextArea = getTextArea()).setSelectionRange.apply(_getTextArea, _toConsumableArray(selection));\n    }\n  }, [selection]); // ============================== Count ===============================\n\n  var countConfig = useCount(count, showCount);\n  var mergedMax = (_countConfig$max = countConfig.max) !== null && _countConfig$max !== void 0 ? _countConfig$max : maxLength; // Max length value\n\n  var hasMaxLength = Number(mergedMax) > 0;\n  var valueLength = countConfig.strategy(formatValue);\n  var isOutOfRange = !!mergedMax && valueLength > mergedMax; // ============================== Change ==============================\n\n  var triggerChange = function triggerChange(e, currentValue) {\n    var cutValue = currentValue;\n\n    if (!compositionRef.current && countConfig.exceedFormatter && countConfig.max && countConfig.strategy(currentValue) > countConfig.max) {\n      cutValue = countConfig.exceedFormatter(currentValue, {\n        max: countConfig.max\n      });\n\n      if (currentValue !== cutValue) {\n        setSelection([getTextArea().selectionStart || 0, getTextArea().selectionEnd || 0]);\n      }\n    }\n\n    setValue(cutValue);\n    resolveOnChange(e.currentTarget, e, onChange, cutValue);\n  }; // =========================== Value Update ===========================\n\n\n  var onInternalCompositionStart = function onInternalCompositionStart(e) {\n    compositionRef.current = true;\n    onCompositionStart === null || onCompositionStart === void 0 || onCompositionStart(e);\n  };\n\n  var onInternalCompositionEnd = function onInternalCompositionEnd(e) {\n    compositionRef.current = false;\n    triggerChange(e, e.currentTarget.value);\n    onCompositionEnd === null || onCompositionEnd === void 0 || onCompositionEnd(e);\n  };\n\n  var onInternalChange = function onInternalChange(e) {\n    triggerChange(e, e.target.value);\n  };\n\n  var handleKeyDown = function handleKeyDown(e) {\n    if (e.key === 'Enter' && onPressEnter) {\n      onPressEnter(e);\n    }\n\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown(e);\n  };\n\n  var handleFocus = function handleFocus(e) {\n    setFocused(true);\n    onFocus === null || onFocus === void 0 || onFocus(e);\n  };\n\n  var handleBlur = function handleBlur(e) {\n    setFocused(false);\n    onBlur === null || onBlur === void 0 || onBlur(e);\n  }; // ============================== Reset ===============================\n\n\n  var handleReset = function handleReset(e) {\n    setValue('');\n    focus();\n    resolveOnChange(getTextArea(), e, onChange);\n  };\n\n  var suffixNode = suffix;\n  var dataCount;\n\n  if (countConfig.show) {\n    if (countConfig.showFormatter) {\n      dataCount = countConfig.showFormatter({\n        value: formatValue,\n        count: valueLength,\n        maxLength: mergedMax\n      });\n    } else {\n      dataCount = \"\".concat(valueLength).concat(hasMaxLength ? \" / \".concat(mergedMax) : '');\n    }\n\n    suffixNode = /*#__PURE__*/React.createElement(React.Fragment, null, suffixNode, /*#__PURE__*/React.createElement(\"span\", {\n      className: clsx(\"\".concat(prefixCls, \"-data-count\"), classNames === null || classNames === void 0 ? void 0 : classNames.count),\n      style: styles === null || styles === void 0 ? void 0 : styles.count\n    }, dataCount));\n  }\n\n  var handleResize = function handleResize(size) {\n    var _getTextArea2;\n\n    onResize === null || onResize === void 0 || onResize(size);\n\n    if ((_getTextArea2 = getTextArea()) !== null && _getTextArea2 !== void 0 && _getTextArea2.style.height) {\n      setTextareaResized(true);\n    }\n  };\n\n  var isPureTextArea = !autoSize && !showCount && !allowClear;\n  return /*#__PURE__*/React.createElement(BaseInput, {\n    ref: holderRef,\n    value: formatValue,\n    allowClear: allowClear,\n    handleReset: handleReset,\n    suffix: suffixNode,\n    prefixCls: prefixCls,\n    classNames: _objectSpread(_objectSpread({}, classNames), {}, {\n      affixWrapper: clsx(classNames === null || classNames === void 0 ? void 0 : classNames.affixWrapper, _defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-show-count\"), showCount), \"\".concat(prefixCls, \"-textarea-allow-clear\"), allowClear))\n    }),\n    disabled: disabled,\n    focused: focused,\n    className: clsx(className, isOutOfRange && \"\".concat(prefixCls, \"-out-of-range\")),\n    style: _objectSpread(_objectSpread({}, style), textareaResized && !isPureTextArea ? {\n      height: 'auto'\n    } : {}),\n    dataAttrs: {\n      affixWrapper: {\n        'data-count': typeof dataCount === 'string' ? dataCount : undefined\n      }\n    },\n    hidden: hidden,\n    readOnly: readOnly,\n    onClear: onClear\n  }, /*#__PURE__*/React.createElement(ResizableTextArea, _extends({}, rest, {\n    autoSize: autoSize,\n    maxLength: maxLength,\n    onKeyDown: handleKeyDown,\n    onChange: onInternalChange,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onCompositionStart: onInternalCompositionStart,\n    onCompositionEnd: onInternalCompositionEnd,\n    className: clsx(classNames === null || classNames === void 0 ? void 0 : classNames.textarea),\n    style: _objectSpread(_objectSpread({}, styles === null || styles === void 0 ? void 0 : styles.textarea), {}, {\n      resize: style === null || style === void 0 ? void 0 : style.resize\n    }),\n    disabled: disabled,\n    prefixCls: prefixCls,\n    onResize: handleResize,\n    ref: resizableTextAreaRef,\n    readOnly: readOnly\n  })));\n});\nexport default TextArea;","map":{"version":3,"sources":["/Users/malith_bandara/Desktop/AdminDashboard/node_modules/rc-textarea/es/TextArea.js"],"names":["_extends","_defineProperty","_objectSpread","_toConsumableArray","_slicedToArray","_objectWithoutProperties","_excluded","clsx","BaseInput","useCount","resolveOnChange","useMergedState","React","useEffect","useImperativeHandle","useRef","ResizableTextArea","TextArea","forwardRef","_ref","ref","_countConfig$max","defaultValue","customValue","value","onFocus","onBlur","onChange","allowClear","maxLength","onCompositionStart","onCompositionEnd","suffix","_ref$prefixCls","prefixCls","showCount","count","className","style","disabled","hidden","classNames","styles","onResize","onClear","onPressEnter","readOnly","autoSize","onKeyDown","rest","_useMergedState","_useMergedState2","setValue","formatValue","undefined","String","_React$useState","useState","_React$useState2","focused","setFocused","compositionRef","_React$useState3","_React$useState4","textareaResized","setTextareaResized","holderRef","resizableTextAreaRef","getTextArea","_resizableTextAreaRef","current","textArea","focus","_holderRef$current","resizableTextArea","blur","nativeElement","prev","_React$useState5","_React$useState6","selection","setSelection","_getTextArea","setSelectionRange","apply","countConfig","mergedMax","max","hasMaxLength","Number","valueLength","strategy","isOutOfRange","triggerChange","e","currentValue","cutValue","exceedFormatter","selectionStart","selectionEnd","currentTarget","onInternalCompositionStart","onInternalCompositionEnd","onInternalChange","target","handleKeyDown","key","handleFocus","handleBlur","handleReset","suffixNode","dataCount","show","showFormatter","concat","createElement","Fragment","handleResize","size","_getTextArea2","height","isPureTextArea","affixWrapper","dataAttrs","textarea","resize"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"defaultValue\", \"value\", \"onFocus\", \"onBlur\", \"onChange\", \"allowClear\", \"maxLength\", \"onCompositionStart\", \"onCompositionEnd\", \"suffix\", \"prefixCls\", \"showCount\", \"count\", \"className\", \"style\", \"disabled\", \"hidden\", \"classNames\", \"styles\", \"onResize\", \"onClear\", \"onPressEnter\", \"readOnly\", \"autoSize\", \"onKeyDown\"];\nimport clsx from 'classnames';\nimport { BaseInput } from 'rc-input';\nimport useCount from \"rc-input/es/hooks/useCount\";\nimport { resolveOnChange } from \"rc-input/es/utils/commonUtils\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useEffect, useImperativeHandle, useRef } from 'react';\nimport ResizableTextArea from \"./ResizableTextArea\";\nvar TextArea = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _countConfig$max;\n  var defaultValue = _ref.defaultValue,\n    customValue = _ref.value,\n    onFocus = _ref.onFocus,\n    onBlur = _ref.onBlur,\n    onChange = _ref.onChange,\n    allowClear = _ref.allowClear,\n    maxLength = _ref.maxLength,\n    onCompositionStart = _ref.onCompositionStart,\n    onCompositionEnd = _ref.onCompositionEnd,\n    suffix = _ref.suffix,\n    _ref$prefixCls = _ref.prefixCls,\n    prefixCls = _ref$prefixCls === void 0 ? 'rc-textarea' : _ref$prefixCls,\n    showCount = _ref.showCount,\n    count = _ref.count,\n    className = _ref.className,\n    style = _ref.style,\n    disabled = _ref.disabled,\n    hidden = _ref.hidden,\n    classNames = _ref.classNames,\n    styles = _ref.styles,\n    onResize = _ref.onResize,\n    onClear = _ref.onClear,\n    onPressEnter = _ref.onPressEnter,\n    readOnly = _ref.readOnly,\n    autoSize = _ref.autoSize,\n    onKeyDown = _ref.onKeyDown,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useMergedState = useMergedState(defaultValue, {\n      value: customValue,\n      defaultValue: defaultValue\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    value = _useMergedState2[0],\n    setValue = _useMergedState2[1];\n  var formatValue = value === undefined || value === null ? '' : String(value);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    focused = _React$useState2[0],\n    setFocused = _React$useState2[1];\n  var compositionRef = React.useRef(false);\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    textareaResized = _React$useState4[0],\n    setTextareaResized = _React$useState4[1];\n\n  // =============================== Ref ================================\n  var holderRef = useRef(null);\n  var resizableTextAreaRef = useRef(null);\n  var getTextArea = function getTextArea() {\n    var _resizableTextAreaRef;\n    return (_resizableTextAreaRef = resizableTextAreaRef.current) === null || _resizableTextAreaRef === void 0 ? void 0 : _resizableTextAreaRef.textArea;\n  };\n  var focus = function focus() {\n    getTextArea().focus();\n  };\n  useImperativeHandle(ref, function () {\n    var _holderRef$current;\n    return {\n      resizableTextArea: resizableTextAreaRef.current,\n      focus: focus,\n      blur: function blur() {\n        getTextArea().blur();\n      },\n      nativeElement: ((_holderRef$current = holderRef.current) === null || _holderRef$current === void 0 ? void 0 : _holderRef$current.nativeElement) || getTextArea()\n    };\n  });\n  useEffect(function () {\n    setFocused(function (prev) {\n      return !disabled && prev;\n    });\n  }, [disabled]);\n\n  // =========================== Select Range ===========================\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    selection = _React$useState6[0],\n    setSelection = _React$useState6[1];\n  React.useEffect(function () {\n    if (selection) {\n      var _getTextArea;\n      (_getTextArea = getTextArea()).setSelectionRange.apply(_getTextArea, _toConsumableArray(selection));\n    }\n  }, [selection]);\n\n  // ============================== Count ===============================\n  var countConfig = useCount(count, showCount);\n  var mergedMax = (_countConfig$max = countConfig.max) !== null && _countConfig$max !== void 0 ? _countConfig$max : maxLength;\n\n  // Max length value\n  var hasMaxLength = Number(mergedMax) > 0;\n  var valueLength = countConfig.strategy(formatValue);\n  var isOutOfRange = !!mergedMax && valueLength > mergedMax;\n\n  // ============================== Change ==============================\n  var triggerChange = function triggerChange(e, currentValue) {\n    var cutValue = currentValue;\n    if (!compositionRef.current && countConfig.exceedFormatter && countConfig.max && countConfig.strategy(currentValue) > countConfig.max) {\n      cutValue = countConfig.exceedFormatter(currentValue, {\n        max: countConfig.max\n      });\n      if (currentValue !== cutValue) {\n        setSelection([getTextArea().selectionStart || 0, getTextArea().selectionEnd || 0]);\n      }\n    }\n    setValue(cutValue);\n    resolveOnChange(e.currentTarget, e, onChange, cutValue);\n  };\n\n  // =========================== Value Update ===========================\n  var onInternalCompositionStart = function onInternalCompositionStart(e) {\n    compositionRef.current = true;\n    onCompositionStart === null || onCompositionStart === void 0 || onCompositionStart(e);\n  };\n  var onInternalCompositionEnd = function onInternalCompositionEnd(e) {\n    compositionRef.current = false;\n    triggerChange(e, e.currentTarget.value);\n    onCompositionEnd === null || onCompositionEnd === void 0 || onCompositionEnd(e);\n  };\n  var onInternalChange = function onInternalChange(e) {\n    triggerChange(e, e.target.value);\n  };\n  var handleKeyDown = function handleKeyDown(e) {\n    if (e.key === 'Enter' && onPressEnter) {\n      onPressEnter(e);\n    }\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown(e);\n  };\n  var handleFocus = function handleFocus(e) {\n    setFocused(true);\n    onFocus === null || onFocus === void 0 || onFocus(e);\n  };\n  var handleBlur = function handleBlur(e) {\n    setFocused(false);\n    onBlur === null || onBlur === void 0 || onBlur(e);\n  };\n\n  // ============================== Reset ===============================\n  var handleReset = function handleReset(e) {\n    setValue('');\n    focus();\n    resolveOnChange(getTextArea(), e, onChange);\n  };\n  var suffixNode = suffix;\n  var dataCount;\n  if (countConfig.show) {\n    if (countConfig.showFormatter) {\n      dataCount = countConfig.showFormatter({\n        value: formatValue,\n        count: valueLength,\n        maxLength: mergedMax\n      });\n    } else {\n      dataCount = \"\".concat(valueLength).concat(hasMaxLength ? \" / \".concat(mergedMax) : '');\n    }\n    suffixNode = /*#__PURE__*/React.createElement(React.Fragment, null, suffixNode, /*#__PURE__*/React.createElement(\"span\", {\n      className: clsx(\"\".concat(prefixCls, \"-data-count\"), classNames === null || classNames === void 0 ? void 0 : classNames.count),\n      style: styles === null || styles === void 0 ? void 0 : styles.count\n    }, dataCount));\n  }\n  var handleResize = function handleResize(size) {\n    var _getTextArea2;\n    onResize === null || onResize === void 0 || onResize(size);\n    if ((_getTextArea2 = getTextArea()) !== null && _getTextArea2 !== void 0 && _getTextArea2.style.height) {\n      setTextareaResized(true);\n    }\n  };\n  var isPureTextArea = !autoSize && !showCount && !allowClear;\n  return /*#__PURE__*/React.createElement(BaseInput, {\n    ref: holderRef,\n    value: formatValue,\n    allowClear: allowClear,\n    handleReset: handleReset,\n    suffix: suffixNode,\n    prefixCls: prefixCls,\n    classNames: _objectSpread(_objectSpread({}, classNames), {}, {\n      affixWrapper: clsx(classNames === null || classNames === void 0 ? void 0 : classNames.affixWrapper, _defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-show-count\"), showCount), \"\".concat(prefixCls, \"-textarea-allow-clear\"), allowClear))\n    }),\n    disabled: disabled,\n    focused: focused,\n    className: clsx(className, isOutOfRange && \"\".concat(prefixCls, \"-out-of-range\")),\n    style: _objectSpread(_objectSpread({}, style), textareaResized && !isPureTextArea ? {\n      height: 'auto'\n    } : {}),\n    dataAttrs: {\n      affixWrapper: {\n        'data-count': typeof dataCount === 'string' ? dataCount : undefined\n      }\n    },\n    hidden: hidden,\n    readOnly: readOnly,\n    onClear: onClear\n  }, /*#__PURE__*/React.createElement(ResizableTextArea, _extends({}, rest, {\n    autoSize: autoSize,\n    maxLength: maxLength,\n    onKeyDown: handleKeyDown,\n    onChange: onInternalChange,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onCompositionStart: onInternalCompositionStart,\n    onCompositionEnd: onInternalCompositionEnd,\n    className: clsx(classNames === null || classNames === void 0 ? void 0 : classNames.textarea),\n    style: _objectSpread(_objectSpread({}, styles === null || styles === void 0 ? void 0 : styles.textarea), {}, {\n      resize: style === null || style === void 0 ? void 0 : style.resize\n    }),\n    disabled: disabled,\n    prefixCls: prefixCls,\n    onResize: handleResize,\n    ref: resizableTextAreaRef,\n    readOnly: readOnly\n  })));\n});\nexport default TextArea;"]},"metadata":{},"sourceType":"module"}